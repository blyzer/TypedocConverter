{
	"id": 0,
	"name": "generatemonacotypings",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 2,
			"name": "monaco",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 646,
					"name": "editor",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 2521,
							"name": "AccessibilitySupport",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 2523,
									"name": "Disabled",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2582,
											"character": 16
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 2524,
									"name": "Enabled",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2583,
											"character": 15
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 2522,
									"name": "Unknown",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "This should be the browser case where it is not known if a screen reader is attached or no."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2581,
											"character": 15
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										2523,
										2524,
										2522
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2577,
									"character": 36
								}
							]
						},
						{
							"id": 3436,
							"name": "ContentWidgetPositionPreference",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "A positioning preference for rendering content widgets."
							},
							"children": [
								{
									"id": 3438,
									"name": "ABOVE",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Place the content widget above a position"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4310,
											"character": 13
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 3439,
									"name": "BELOW",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Place the content widget below a position"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4314,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 3437,
									"name": "EXACT",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Place the content widget exactly at a position"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4306,
											"character": 13
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										3438,
										3439,
										3437
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4302,
									"character": 47
								}
							]
						},
						{
							"id": 2500,
							"name": "CursorChangeReason",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "Describes the reason the cursor has changed its position."
							},
							"children": [
								{
									"id": 2502,
									"name": "ContentFlush",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "A `model.setValue()` was called."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2498,
											"character": 20
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 2504,
									"name": "Explicit",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "There was an explicit user gesture."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2506,
											"character": 16
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 2501,
									"name": "NotSet",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Unknown or not set."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2494,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 2505,
									"name": "Paste",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "There was a Paste."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2510,
											"character": 13
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 2503,
									"name": "RecoverFromMarkers",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2502,
											"character": 26
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 2507,
									"name": "Redo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "There was a Redo."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2518,
											"character": 12
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 2506,
									"name": "Undo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "There was an Undo."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2514,
											"character": 12
										}
									],
									"defaultValue": "5"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										2502,
										2504,
										2501,
										2505,
										2503,
										2507,
										2506
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2490,
									"character": 34
								}
							]
						},
						{
							"id": 1957,
							"name": "DefaultEndOfLine",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "The default end of line to use when instantiating models."
							},
							"children": [
								{
									"id": 1959,
									"name": "CRLF",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Use carriage return and line feed (\\r\\n) as the end of line character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1517,
											"character": 12
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1958,
									"name": "LF",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Use line feed (\\n) as the end of line character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1513,
											"character": 10
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1959,
										1958
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1509,
									"character": 32
								}
							]
						},
						{
							"id": 2528,
							"name": "EditorAutoIndentStrategy",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for auto indentation in the editor"
							},
							"children": [
								{
									"id": 2532,
									"name": "Advanced",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2608,
											"character": 16
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 2531,
									"name": "Brackets",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2607,
											"character": 16
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 2533,
									"name": "Full",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2609,
											"character": 12
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 2530,
									"name": "Keep",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2606,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 2529,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2605,
											"character": 12
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										2532,
										2531,
										2533,
										2530,
										2529
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2604,
									"character": 40
								}
							]
						},
						{
							"id": 3146,
							"name": "EditorOption",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 3147,
									"name": "acceptSuggestionOnCommitCharacter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3955,
											"character": 41
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 3148,
									"name": "acceptSuggestionOnEnter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3956,
											"character": 31
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 3150,
									"name": "accessibilityPageSize",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3958,
											"character": 29
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 3149,
									"name": "accessibilitySupport",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3957,
											"character": 28
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 3151,
									"name": "ariaLabel",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3959,
											"character": 17
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 3152,
									"name": "autoClosingBrackets",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3960,
											"character": 27
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 3153,
									"name": "autoClosingOvertype",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3961,
											"character": 27
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 3154,
									"name": "autoClosingQuotes",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3962,
											"character": 25
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 3155,
									"name": "autoIndent",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3963,
											"character": 18
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 3157,
									"name": "autoSurround",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3965,
											"character": 20
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 3156,
									"name": "automaticLayout",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3964,
											"character": 23
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 3158,
									"name": "codeLens",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3966,
											"character": 16
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 3159,
									"name": "codeLensFontFamily",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3967,
											"character": 26
										}
									],
									"defaultValue": "12"
								},
								{
									"id": 3160,
									"name": "codeLensFontSize",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3968,
											"character": 24
										}
									],
									"defaultValue": "13"
								},
								{
									"id": 3161,
									"name": "colorDecorators",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3969,
											"character": 23
										}
									],
									"defaultValue": "14"
								},
								{
									"id": 3162,
									"name": "columnSelection",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3970,
											"character": 23
										}
									],
									"defaultValue": "15"
								},
								{
									"id": 3163,
									"name": "comments",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3971,
											"character": 16
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 3164,
									"name": "contextmenu",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3972,
											"character": 19
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 3165,
									"name": "copyWithSyntaxHighlighting",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3973,
											"character": 34
										}
									],
									"defaultValue": "18"
								},
								{
									"id": 3166,
									"name": "cursorBlinking",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3974,
											"character": 22
										}
									],
									"defaultValue": "19"
								},
								{
									"id": 3167,
									"name": "cursorSmoothCaretAnimation",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3975,
											"character": 34
										}
									],
									"defaultValue": "20"
								},
								{
									"id": 3168,
									"name": "cursorStyle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3976,
											"character": 19
										}
									],
									"defaultValue": "21"
								},
								{
									"id": 3169,
									"name": "cursorSurroundingLines",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3977,
											"character": 30
										}
									],
									"defaultValue": "22"
								},
								{
									"id": 3170,
									"name": "cursorSurroundingLinesStyle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3978,
											"character": 35
										}
									],
									"defaultValue": "23"
								},
								{
									"id": 3171,
									"name": "cursorWidth",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3979,
											"character": 19
										}
									],
									"defaultValue": "24"
								},
								{
									"id": 3219,
									"name": "definitionLinkOpensInPeek",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4027,
											"character": 33
										}
									],
									"defaultValue": "72"
								},
								{
									"id": 3172,
									"name": "disableLayerHinting",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3980,
											"character": 27
										}
									],
									"defaultValue": "25"
								},
								{
									"id": 3173,
									"name": "disableMonospaceOptimizations",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3981,
											"character": 37
										}
									],
									"defaultValue": "26"
								},
								{
									"id": 3174,
									"name": "dragAndDrop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3982,
											"character": 19
										}
									],
									"defaultValue": "27"
								},
								{
									"id": 3268,
									"name": "editorClassName",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4076,
											"character": 23
										}
									],
									"defaultValue": "121"
								},
								{
									"id": 3175,
									"name": "emptySelectionClipboard",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3983,
											"character": 31
										}
									],
									"defaultValue": "28"
								},
								{
									"id": 3176,
									"name": "extraEditorClassName",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3984,
											"character": 28
										}
									],
									"defaultValue": "29"
								},
								{
									"id": 3177,
									"name": "fastScrollSensitivity",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3985,
											"character": 29
										}
									],
									"defaultValue": "30"
								},
								{
									"id": 3178,
									"name": "find",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3986,
											"character": 12
										}
									],
									"defaultValue": "31"
								},
								{
									"id": 3179,
									"name": "fixedOverflowWidgets",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3987,
											"character": 28
										}
									],
									"defaultValue": "32"
								},
								{
									"id": 3180,
									"name": "folding",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3988,
											"character": 15
										}
									],
									"defaultValue": "33"
								},
								{
									"id": 3182,
									"name": "foldingHighlight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3990,
											"character": 24
										}
									],
									"defaultValue": "35"
								},
								{
									"id": 3181,
									"name": "foldingStrategy",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3989,
											"character": 23
										}
									],
									"defaultValue": "34"
								},
								{
									"id": 3184,
									"name": "fontFamily",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3992,
											"character": 18
										}
									],
									"defaultValue": "37"
								},
								{
									"id": 3185,
									"name": "fontInfo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3993,
											"character": 16
										}
									],
									"defaultValue": "38"
								},
								{
									"id": 3186,
									"name": "fontLigatures",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3994,
											"character": 21
										}
									],
									"defaultValue": "39"
								},
								{
									"id": 3187,
									"name": "fontSize",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3995,
											"character": 16
										}
									],
									"defaultValue": "40"
								},
								{
									"id": 3188,
									"name": "fontWeight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3996,
											"character": 18
										}
									],
									"defaultValue": "41"
								},
								{
									"id": 3189,
									"name": "formatOnPaste",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3997,
											"character": 21
										}
									],
									"defaultValue": "42"
								},
								{
									"id": 3190,
									"name": "formatOnType",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3998,
											"character": 20
										}
									],
									"defaultValue": "43"
								},
								{
									"id": 3191,
									"name": "glyphMargin",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3999,
											"character": 19
										}
									],
									"defaultValue": "44"
								},
								{
									"id": 3192,
									"name": "gotoLocation",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4000,
											"character": 20
										}
									],
									"defaultValue": "45"
								},
								{
									"id": 3193,
									"name": "hideCursorInOverviewRuler",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4001,
											"character": 33
										}
									],
									"defaultValue": "46"
								},
								{
									"id": 3194,
									"name": "highlightActiveIndentGuide",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4002,
											"character": 34
										}
									],
									"defaultValue": "47"
								},
								{
									"id": 3195,
									"name": "hover",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4003,
											"character": 13
										}
									],
									"defaultValue": "48"
								},
								{
									"id": 3196,
									"name": "inDiffEditor",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4004,
											"character": 20
										}
									],
									"defaultValue": "49"
								},
								{
									"id": 3267,
									"name": "inlineHints",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4075,
											"character": 19
										}
									],
									"defaultValue": "120"
								},
								{
									"id": 3271,
									"name": "layoutInfo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4079,
											"character": 18
										}
									],
									"defaultValue": "124"
								},
								{
									"id": 3197,
									"name": "letterSpacing",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4005,
											"character": 21
										}
									],
									"defaultValue": "50"
								},
								{
									"id": 3198,
									"name": "lightbulb",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4006,
											"character": 17
										}
									],
									"defaultValue": "51"
								},
								{
									"id": 3199,
									"name": "lineDecorationsWidth",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4007,
											"character": 28
										}
									],
									"defaultValue": "52"
								},
								{
									"id": 3200,
									"name": "lineHeight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4008,
											"character": 18
										}
									],
									"defaultValue": "53"
								},
								{
									"id": 3201,
									"name": "lineNumbers",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4009,
											"character": 19
										}
									],
									"defaultValue": "54"
								},
								{
									"id": 3202,
									"name": "lineNumbersMinChars",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4010,
											"character": 27
										}
									],
									"defaultValue": "55"
								},
								{
									"id": 3203,
									"name": "linkedEditing",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4011,
											"character": 21
										}
									],
									"defaultValue": "56"
								},
								{
									"id": 3204,
									"name": "links",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4012,
											"character": 13
										}
									],
									"defaultValue": "57"
								},
								{
									"id": 3205,
									"name": "matchBrackets",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4013,
											"character": 21
										}
									],
									"defaultValue": "58"
								},
								{
									"id": 3206,
									"name": "minimap",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4014,
											"character": 15
										}
									],
									"defaultValue": "59"
								},
								{
									"id": 3207,
									"name": "mouseStyle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4015,
											"character": 18
										}
									],
									"defaultValue": "60"
								},
								{
									"id": 3208,
									"name": "mouseWheelScrollSensitivity",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4016,
											"character": 35
										}
									],
									"defaultValue": "61"
								},
								{
									"id": 3209,
									"name": "mouseWheelZoom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4017,
											"character": 22
										}
									],
									"defaultValue": "62"
								},
								{
									"id": 3210,
									"name": "multiCursorMergeOverlapping",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4018,
											"character": 35
										}
									],
									"defaultValue": "63"
								},
								{
									"id": 3211,
									"name": "multiCursorModifier",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4019,
											"character": 27
										}
									],
									"defaultValue": "64"
								},
								{
									"id": 3212,
									"name": "multiCursorPaste",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4020,
											"character": 24
										}
									],
									"defaultValue": "65"
								},
								{
									"id": 3213,
									"name": "occurrencesHighlight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4021,
											"character": 28
										}
									],
									"defaultValue": "66"
								},
								{
									"id": 3214,
									"name": "overviewRulerBorder",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4022,
											"character": 27
										}
									],
									"defaultValue": "67"
								},
								{
									"id": 3215,
									"name": "overviewRulerLanes",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4023,
											"character": 26
										}
									],
									"defaultValue": "68"
								},
								{
									"id": 3216,
									"name": "padding",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4024,
											"character": 15
										}
									],
									"defaultValue": "69"
								},
								{
									"id": 3217,
									"name": "parameterHints",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4025,
											"character": 22
										}
									],
									"defaultValue": "70"
								},
								{
									"id": 3218,
									"name": "peekWidgetDefaultFocus",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4026,
											"character": 30
										}
									],
									"defaultValue": "71"
								},
								{
									"id": 3269,
									"name": "pixelRatio",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4077,
											"character": 18
										}
									],
									"defaultValue": "122"
								},
								{
									"id": 3220,
									"name": "quickSuggestions",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4028,
											"character": 24
										}
									],
									"defaultValue": "73"
								},
								{
									"id": 3221,
									"name": "quickSuggestionsDelay",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4029,
											"character": 29
										}
									],
									"defaultValue": "74"
								},
								{
									"id": 3222,
									"name": "readOnly",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4030,
											"character": 16
										}
									],
									"defaultValue": "75"
								},
								{
									"id": 3223,
									"name": "renameOnType",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4031,
											"character": 20
										}
									],
									"defaultValue": "76"
								},
								{
									"id": 3224,
									"name": "renderControlCharacters",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4032,
											"character": 31
										}
									],
									"defaultValue": "77"
								},
								{
									"id": 3226,
									"name": "renderFinalNewline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4034,
											"character": 26
										}
									],
									"defaultValue": "79"
								},
								{
									"id": 3225,
									"name": "renderIndentGuides",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4033,
											"character": 26
										}
									],
									"defaultValue": "78"
								},
								{
									"id": 3227,
									"name": "renderLineHighlight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4035,
											"character": 27
										}
									],
									"defaultValue": "80"
								},
								{
									"id": 3228,
									"name": "renderLineHighlightOnlyWhenFocus",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4036,
											"character": 40
										}
									],
									"defaultValue": "81"
								},
								{
									"id": 3229,
									"name": "renderValidationDecorations",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4037,
											"character": 35
										}
									],
									"defaultValue": "82"
								},
								{
									"id": 3230,
									"name": "renderWhitespace",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4038,
											"character": 24
										}
									],
									"defaultValue": "83"
								},
								{
									"id": 3231,
									"name": "revealHorizontalRightPadding",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4039,
											"character": 36
										}
									],
									"defaultValue": "84"
								},
								{
									"id": 3232,
									"name": "roundedSelection",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4040,
											"character": 24
										}
									],
									"defaultValue": "85"
								},
								{
									"id": 3233,
									"name": "rulers",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4041,
											"character": 14
										}
									],
									"defaultValue": "86"
								},
								{
									"id": 3235,
									"name": "scrollBeyondLastColumn",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4043,
											"character": 30
										}
									],
									"defaultValue": "88"
								},
								{
									"id": 3236,
									"name": "scrollBeyondLastLine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4044,
											"character": 28
										}
									],
									"defaultValue": "89"
								},
								{
									"id": 3237,
									"name": "scrollPredominantAxis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4045,
											"character": 29
										}
									],
									"defaultValue": "90"
								},
								{
									"id": 3234,
									"name": "scrollbar",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4042,
											"character": 17
										}
									],
									"defaultValue": "87"
								},
								{
									"id": 3240,
									"name": "selectOnLineNumbers",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4048,
											"character": 27
										}
									],
									"defaultValue": "93"
								},
								{
									"id": 3238,
									"name": "selectionClipboard",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4046,
											"character": 26
										}
									],
									"defaultValue": "91"
								},
								{
									"id": 3239,
									"name": "selectionHighlight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4047,
											"character": 26
										}
									],
									"defaultValue": "92"
								},
								{
									"id": 3266,
									"name": "showDeprecated",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4074,
											"character": 22
										}
									],
									"defaultValue": "119"
								},
								{
									"id": 3241,
									"name": "showFoldingControls",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4049,
											"character": 27
										}
									],
									"defaultValue": "94"
								},
								{
									"id": 3242,
									"name": "showUnused",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4050,
											"character": 18
										}
									],
									"defaultValue": "95"
								},
								{
									"id": 3244,
									"name": "smartSelect",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4052,
											"character": 19
										}
									],
									"defaultValue": "97"
								},
								{
									"id": 3245,
									"name": "smoothScrolling",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4053,
											"character": 23
										}
									],
									"defaultValue": "98"
								},
								{
									"id": 3243,
									"name": "snippetSuggestions",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4051,
											"character": 26
										}
									],
									"defaultValue": "96"
								},
								{
									"id": 3246,
									"name": "stickyTabStops",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4054,
											"character": 22
										}
									],
									"defaultValue": "99"
								},
								{
									"id": 3247,
									"name": "stopRenderingLineAfter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4055,
											"character": 30
										}
									],
									"defaultValue": "100"
								},
								{
									"id": 3248,
									"name": "suggest",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4056,
											"character": 15
										}
									],
									"defaultValue": "101"
								},
								{
									"id": 3249,
									"name": "suggestFontSize",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4057,
											"character": 23
										}
									],
									"defaultValue": "102"
								},
								{
									"id": 3250,
									"name": "suggestLineHeight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4058,
											"character": 25
										}
									],
									"defaultValue": "103"
								},
								{
									"id": 3251,
									"name": "suggestOnTriggerCharacters",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4059,
											"character": 34
										}
									],
									"defaultValue": "104"
								},
								{
									"id": 3252,
									"name": "suggestSelection",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4060,
											"character": 24
										}
									],
									"defaultValue": "105"
								},
								{
									"id": 3253,
									"name": "tabCompletion",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4061,
											"character": 21
										}
									],
									"defaultValue": "106"
								},
								{
									"id": 3270,
									"name": "tabFocusMode",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4078,
											"character": 20
										}
									],
									"defaultValue": "123"
								},
								{
									"id": 3254,
									"name": "tabIndex",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4062,
											"character": 16
										}
									],
									"defaultValue": "107"
								},
								{
									"id": 3183,
									"name": "unfoldOnClickAfterEndOfLine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3991,
											"character": 35
										}
									],
									"defaultValue": "36"
								},
								{
									"id": 3255,
									"name": "unusualLineTerminators",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4063,
											"character": 30
										}
									],
									"defaultValue": "108"
								},
								{
									"id": 3256,
									"name": "useTabStops",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4064,
											"character": 19
										}
									],
									"defaultValue": "109"
								},
								{
									"id": 3257,
									"name": "wordSeparators",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4065,
											"character": 22
										}
									],
									"defaultValue": "110"
								},
								{
									"id": 3258,
									"name": "wordWrap",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4066,
											"character": 16
										}
									],
									"defaultValue": "111"
								},
								{
									"id": 3259,
									"name": "wordWrapBreakAfterCharacters",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4067,
											"character": 36
										}
									],
									"defaultValue": "112"
								},
								{
									"id": 3260,
									"name": "wordWrapBreakBeforeCharacters",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4068,
											"character": 37
										}
									],
									"defaultValue": "113"
								},
								{
									"id": 3261,
									"name": "wordWrapColumn",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4069,
											"character": 22
										}
									],
									"defaultValue": "114"
								},
								{
									"id": 3262,
									"name": "wordWrapOverride1",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4070,
											"character": 25
										}
									],
									"defaultValue": "115"
								},
								{
									"id": 3263,
									"name": "wordWrapOverride2",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4071,
											"character": 25
										}
									],
									"defaultValue": "116"
								},
								{
									"id": 3264,
									"name": "wrappingIndent",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4072,
											"character": 22
										}
									],
									"defaultValue": "117"
								},
								{
									"id": 3272,
									"name": "wrappingInfo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4080,
											"character": 20
										}
									],
									"defaultValue": "125"
								},
								{
									"id": 3265,
									"name": "wrappingStrategy",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4073,
											"character": 24
										}
									],
									"defaultValue": "118"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										3147,
										3148,
										3150,
										3149,
										3151,
										3152,
										3153,
										3154,
										3155,
										3157,
										3156,
										3158,
										3159,
										3160,
										3161,
										3162,
										3163,
										3164,
										3165,
										3166,
										3167,
										3168,
										3169,
										3170,
										3171,
										3219,
										3172,
										3173,
										3174,
										3268,
										3175,
										3176,
										3177,
										3178,
										3179,
										3180,
										3182,
										3181,
										3184,
										3185,
										3186,
										3187,
										3188,
										3189,
										3190,
										3191,
										3192,
										3193,
										3194,
										3195,
										3196,
										3267,
										3271,
										3197,
										3198,
										3199,
										3200,
										3201,
										3202,
										3203,
										3204,
										3205,
										3206,
										3207,
										3208,
										3209,
										3210,
										3211,
										3212,
										3213,
										3214,
										3215,
										3216,
										3217,
										3218,
										3269,
										3220,
										3221,
										3222,
										3223,
										3224,
										3226,
										3225,
										3227,
										3228,
										3229,
										3230,
										3231,
										3232,
										3233,
										3235,
										3236,
										3237,
										3234,
										3240,
										3238,
										3239,
										3266,
										3241,
										3242,
										3244,
										3245,
										3243,
										3246,
										3247,
										3248,
										3249,
										3250,
										3251,
										3252,
										3253,
										3270,
										3254,
										3183,
										3255,
										3256,
										3257,
										3258,
										3259,
										3260,
										3261,
										3262,
										3263,
										3264,
										3272,
										3265
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3954,
									"character": 28
								}
							]
						},
						{
							"id": 1953,
							"name": "EndOfLinePreference",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "End of line character preference."
							},
							"children": [
								{
									"id": 1956,
									"name": "CRLF",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Use carriage return and line feed (\\r\\n) as the end of line character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1503,
											"character": 12
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1955,
									"name": "LF",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Use line feed (\\n) as the end of line character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1499,
											"character": 10
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1954,
									"name": "TextDefined",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Use the end of line character identified in the text buffer."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1495,
											"character": 19
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1956,
										1955,
										1954
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1491,
									"character": 35
								}
							]
						},
						{
							"id": 1960,
							"name": "EndOfLineSequence",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "End of line character preference."
							},
							"children": [
								{
									"id": 1962,
									"name": "CRLF",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Use carriage return and line feed (\\r\\n) as the end of line character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1531,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1961,
									"name": "LF",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Use line feed (\\n) as the end of line character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1527,
											"character": 10
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1962,
										1961
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1523,
									"character": 33
								}
							]
						},
						{
							"id": 1910,
							"name": "MinimapPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "Position in the minimap to render the decoration."
							},
							"children": [
								{
									"id": 1912,
									"name": "Gutter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1324,
											"character": 14
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1911,
									"name": "Inline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1323,
											"character": 14
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1912,
										1911
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1322,
									"character": 31
								}
							]
						},
						{
							"id": 3471,
							"name": "MouseTargetType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "Type of hit element with the mouse in the editor."
							},
							"children": [
								{
									"id": 3479,
									"name": "CONTENT_EMPTY",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of empty space in the content (e.g. after line text or below last line)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4455,
											"character": 21
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 3478,
									"name": "CONTENT_TEXT",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of text in the content."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4451,
											"character": 20
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 3480,
									"name": "CONTENT_VIEW_ZONE",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of a view zone in the content."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4459,
											"character": 25
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 3481,
									"name": "CONTENT_WIDGET",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of a content widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4463,
											"character": 22
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 3474,
									"name": "GUTTER_GLYPH_MARGIN",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of the glyph margin"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4435,
											"character": 27
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 3476,
									"name": "GUTTER_LINE_DECORATIONS",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of the line decorations"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4443,
											"character": 31
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 3475,
									"name": "GUTTER_LINE_NUMBERS",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of the line numbers"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4439,
											"character": 27
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 3477,
									"name": "GUTTER_VIEW_ZONE",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of the whitespace left in the gutter by a view zone."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4447,
											"character": 24
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 3485,
									"name": "OUTSIDE_EDITOR",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is outside of the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4479,
											"character": 22
										}
									],
									"defaultValue": "13"
								},
								{
									"id": 3484,
									"name": "OVERLAY_WIDGET",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of an overlay widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4475,
											"character": 22
										}
									],
									"defaultValue": "12"
								},
								{
									"id": 3482,
									"name": "OVERVIEW_RULER",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of the decorations overview ruler."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4467,
											"character": 22
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 3483,
									"name": "SCROLLBAR",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of a scrollbar."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4471,
											"character": 17
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 3473,
									"name": "TEXTAREA",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of the textarea used for input."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4431,
											"character": 16
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 3472,
									"name": "UNKNOWN",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Mouse is on top of an unknown element."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4427,
											"character": 15
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										3479,
										3478,
										3480,
										3481,
										3474,
										3476,
										3475,
										3477,
										3485,
										3484,
										3482,
										3483,
										3473,
										3472
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4423,
									"character": 31
								}
							]
						},
						{
							"id": 3458,
							"name": "OverlayWidgetPositionPreference",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "A positioning preference for rendering overlay widgets."
							},
							"children": [
								{
									"id": 3460,
									"name": "BOTTOM_RIGHT_CORNER",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Position the overlay widget in the bottom right corner"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4384,
											"character": 27
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 3461,
									"name": "TOP_CENTER",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Position the overlay widget in the top center"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4388,
											"character": 18
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 3459,
									"name": "TOP_RIGHT_CORNER",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Position the overlay widget in the top right corner"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4380,
											"character": 24
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										3460,
										3461,
										3459
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4376,
									"character": 47
								}
							]
						},
						{
							"id": 1905,
							"name": "OverviewRulerLane",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "Vertical Lane in the overview ruler of the editor."
							},
							"children": [
								{
									"id": 1907,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1314,
											"character": 14
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1909,
									"name": "Full",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1316,
											"character": 12
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1906,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1313,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1908,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1315,
											"character": 13
										}
									],
									"defaultValue": "4"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1907,
										1909,
										1906,
										1908
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1312,
									"character": 33
								}
							]
						},
						{
							"id": 3053,
							"name": "RenderLineNumbersType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 3058,
									"name": "Custom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3671,
											"character": 14
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 3057,
									"name": "Interval",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3670,
											"character": 16
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 3054,
									"name": "Off",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3667,
											"character": 11
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 3055,
									"name": "On",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3668,
											"character": 10
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 3056,
									"name": "Relative",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3669,
											"character": 16
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										3058,
										3057,
										3054,
										3055,
										3056
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3666,
									"character": 37
								}
							]
						},
						{
							"id": 2982,
							"name": "RenderMinimap",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 2985,
									"name": "Blocks",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3449,
											"character": 14
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 2983,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3447,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 2984,
									"name": "Text",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3448,
											"character": 12
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										2985,
										2983,
										2984
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3446,
									"character": 29
								}
							]
						},
						{
							"id": 2322,
							"name": "ScrollType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 2324,
									"name": "Immediate",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2178,
											"character": 17
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 2323,
									"name": "Smooth",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2177,
											"character": 14
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										2324,
										2323
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2176,
									"character": 26
								}
							]
						},
						{
							"id": 1899,
							"name": "ScrollbarVisibility",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 1900,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1300,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1901,
									"name": "Hidden",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1301,
											"character": 14
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1902,
									"name": "Visible",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1302,
											"character": 15
										}
									],
									"defaultValue": "3"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1900,
										1901,
										1902
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1299,
									"character": 35
								}
							]
						},
						{
							"id": 2937,
							"name": "TextEditorCursorBlinkingStyle",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "The kind of animation in which the editor's cursor should be rendered."
							},
							"children": [
								{
									"id": 2939,
									"name": "Blink",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Blinking"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3306,
											"character": 13
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 2942,
									"name": "Expand",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Expand collapse animation on the y axis"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3318,
											"character": 14
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 2938,
									"name": "Hidden",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Hidden"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3302,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 2941,
									"name": "Phase",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Blinking with prolonged filled state and smooth fading"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3314,
											"character": 13
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 2940,
									"name": "Smooth",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Blinking with smooth fading"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3310,
											"character": 14
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 2943,
									"name": "Solid",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "No-Blinking"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3322,
											"character": 13
										}
									],
									"defaultValue": "5"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										2939,
										2942,
										2938,
										2941,
										2940,
										2943
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3298,
									"character": 45
								}
							]
						},
						{
							"id": 2944,
							"name": "TextEditorCursorStyle",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "The style in which the editor's cursor should be rendered."
							},
							"children": [
								{
									"id": 2946,
									"name": "Block",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "As a block (sitting on top of a character)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3336,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 2949,
									"name": "BlockOutline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "As an outlined block (sitting on top of a character)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3348,
											"character": 20
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 2945,
									"name": "Line",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "As a vertical line (sitting between two characters)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3332,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 2948,
									"name": "LineThin",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "As a thin vertical line (sitting between two characters)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3344,
											"character": 16
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 2947,
									"name": "Underline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "As a horizontal line (sitting under a character)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3340,
											"character": 17
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 2950,
									"name": "UnderlineThin",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "As a thin horizontal line (sitting under a character)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3352,
											"character": 21
										}
									],
									"defaultValue": "6"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										2946,
										2949,
										2945,
										2948,
										2947,
										2950
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3328,
									"character": 37
								}
							]
						},
						{
							"id": 1997,
							"name": "TrackedRangeStickiness",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "Describes the behavior of decorations when typing/editing near their edges.\nNote: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`"
							},
							"children": [
								{
									"id": 1998,
									"name": "AlwaysGrowsWhenTypingAtEdges",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1621,
											"character": 36
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 2001,
									"name": "GrowsOnlyWhenTypingAfter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1624,
											"character": 32
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 2000,
									"name": "GrowsOnlyWhenTypingBefore",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1623,
											"character": 33
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1999,
									"name": "NeverGrowsWhenTypingAtEdges",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1622,
											"character": 35
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1998,
										2001,
										2000,
										1999
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1620,
									"character": 38
								}
							]
						},
						{
							"id": 3136,
							"name": "WrappingIndent",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "Describes how to indent wrapped lines."
							},
							"children": [
								{
									"id": 3140,
									"name": "DeepIndent",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "DeepIndent => wrapped lines get +2 indentation toward the parent."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3944,
											"character": 18
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 3139,
									"name": "Indent",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Indent => wrapped lines get +1 indentation toward the parent."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3940,
											"character": 14
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 3137,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "No indentation => wrapped lines begin at column 1."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3932,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 3138,
									"name": "Same",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Same => wrapped lines get the same indentation as the parent."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3936,
											"character": 12
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										3140,
										3139,
										3137,
										3138
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3928,
									"character": 30
								}
							]
						},
						{
							"id": 4365,
							"name": "BareFontInfo",
							"kind": 128,
							"kindString": "Class",
							"flags": {},
							"children": [
								{
									"id": 4366,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 4367,
											"name": "new BareFontInfo",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4365,
												"name": "BareFontInfo"
											}
										}
									]
								},
								{
									"id": 4368,
									"name": "_bareFontInfoBrand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5006,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 4371,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5009,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4374,
									"name": "fontFeatureSettings",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5012,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4373,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5011,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4372,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5010,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4376,
									"name": "letterSpacing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5014,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4375,
									"name": "lineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5013,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4370,
									"name": "pixelRatio",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5008,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4369,
									"name": "zoomLevel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5007,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										4366
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4368,
										4371,
										4374,
										4373,
										4372,
										4376,
										4375,
										4370,
										4369
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5005,
									"character": 29
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4342,
									"name": "FontInfo"
								}
							]
						},
						{
							"id": 2788,
							"name": "ConfigurationChangedEvent",
							"kind": 128,
							"kindString": "Class",
							"flags": {},
							"comment": {
								"shortText": "An event describing that the configuration of the editor has changed."
							},
							"children": [
								{
									"id": 2789,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 2790,
											"name": "new ConfigurationChangedEvent",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2788,
												"name": "ConfigurationChangedEvent"
											}
										}
									]
								},
								{
									"id": 2791,
									"name": "hasChanged",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3261,
											"character": 18
										}
									],
									"signatures": [
										{
											"id": 2792,
											"name": "hasChanged",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2793,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3146,
														"name": "EditorOption"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										2789
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2791
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3260,
									"character": 42
								}
							]
						},
						{
							"id": 1991,
							"name": "FindMatch",
							"kind": 128,
							"kindString": "Class",
							"flags": {},
							"children": [
								{
									"id": 1992,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 1993,
											"name": "new FindMatch",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1991,
												"name": "FindMatch"
											}
										}
									]
								},
								{
									"id": 1994,
									"name": "_findMatchBrand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1611,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 1996,
									"name": "matches",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1613,
											"character": 24
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1995,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1612,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										1992
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1994,
										1996,
										1995
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1610,
									"character": 26
								}
							]
						},
						{
							"id": 4342,
							"name": "FontInfo",
							"kind": 128,
							"kindString": "Class",
							"flags": {},
							"children": [
								{
									"id": 4343,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 4344,
											"name": "new FontInfo",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4342,
												"name": "FontInfo"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4367,
												"name": "BareFontInfo.constructor"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4366,
										"name": "BareFontInfo.constructor"
									}
								},
								{
									"id": 4356,
									"name": "_bareFontInfoBrand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5006,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4368,
										"name": "BareFontInfo._bareFontInfoBrand"
									}
								},
								{
									"id": 4345,
									"name": "_editorStylingBrand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4992,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 4351,
									"name": "canUseHalfwidthRightwardsArrow",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4998,
											"character": 47
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4359,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5009,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4371,
										"name": "BareFontInfo.fontFamily"
									}
								},
								{
									"id": 4362,
									"name": "fontFeatureSettings",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5012,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4374,
										"name": "BareFontInfo.fontFeatureSettings"
									}
								},
								{
									"id": 4361,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5011,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4373,
										"name": "BareFontInfo.fontSize"
									}
								},
								{
									"id": 4360,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5010,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4372,
										"name": "BareFontInfo.fontWeight"
									}
								},
								{
									"id": 4348,
									"name": "isMonospace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4995,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4347,
									"name": "isTrusted",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4994,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4364,
									"name": "letterSpacing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5014,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4376,
										"name": "BareFontInfo.letterSpacing"
									}
								},
								{
									"id": 4363,
									"name": "lineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5013,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4375,
										"name": "BareFontInfo.lineHeight"
									}
								},
								{
									"id": 4355,
									"name": "maxDigitWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5002,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4353,
									"name": "middotWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5000,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4358,
									"name": "pixelRatio",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5008,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4370,
										"name": "BareFontInfo.pixelRatio"
									}
								},
								{
									"id": 4352,
									"name": "spaceWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4999,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4350,
									"name": "typicalFullwidthCharacterWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4997,
											"character": 47
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4349,
									"name": "typicalHalfwidthCharacterWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4996,
											"character": 47
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4346,
									"name": "version",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4993,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4354,
									"name": "wsmiddotWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5001,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4357,
									"name": "zoomLevel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5007,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4369,
										"name": "BareFontInfo.zoomLevel"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										4343
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4356,
										4345,
										4351,
										4359,
										4362,
										4361,
										4360,
										4348,
										4347,
										4364,
										4363,
										4355,
										4353,
										4358,
										4352,
										4350,
										4349,
										4346,
										4354,
										4357
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4991,
									"character": 25
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4365,
									"name": "BareFontInfo"
								}
							]
						},
						{
							"id": 1977,
							"name": "TextModelResolvedOptions",
							"kind": 128,
							"kindString": "Class",
							"flags": {},
							"children": [
								{
									"id": 1978,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 1979,
											"name": "new TextModelResolvedOptions",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1977,
												"name": "TextModelResolvedOptions"
											}
										}
									]
								},
								{
									"id": 1980,
									"name": "_textModelResolvedOptionsBrand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1595,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 1984,
									"name": "defaultEOL",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1599,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 1957,
										"name": "DefaultEndOfLine"
									}
								},
								{
									"id": 1982,
									"name": "indentSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1597,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1983,
									"name": "insertSpaces",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1598,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1981,
									"name": "tabSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1596,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1985,
									"name": "trimAutoWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1600,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										1978
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1980,
										1984,
										1982,
										1983,
										1981,
										1985
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1594,
									"character": 41
								}
							]
						},
						{
							"id": 2986,
							"name": "EditorLayoutInfo",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The internal layout details of the editor."
							},
							"children": [
								{
									"id": 2995,
									"name": "contentLeft",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Left position for the content (actual text)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3491,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2996,
									"name": "contentWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The width of the content (actual text)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3495,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2993,
									"name": "decorationsLeft",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Left position for the line decorations."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3483,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2994,
									"name": "decorationsWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The width of the line decorations."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3487,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2989,
									"name": "glyphMarginLeft",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Left position for the glyph margin."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3467,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2990,
									"name": "glyphMarginWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The width of the glyph margin."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3471,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2988,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Full editor height."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3463,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3003,
									"name": "horizontalScrollbarHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The height of the horizontal scrollbar."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3514,
											"character": 42
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3000,
									"name": "isViewportWrapping",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3505,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2999,
									"name": "isWordWrapMinified",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3504,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2991,
									"name": "lineNumbersLeft",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Left position for the line numbers."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3475,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2992,
									"name": "lineNumbersWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The width of the line numbers."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3479,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2997,
									"name": "minimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Layout information for the minimap"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3499,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"id": 3005,
										"name": "EditorMinimapLayoutInfo"
									}
								},
								{
									"id": 3004,
									"name": "overviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The position of the overview ruler."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3518,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"id": 2977,
										"name": "OverviewRulerPosition"
									}
								},
								{
									"id": 3002,
									"name": "verticalScrollbarWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The width of the vertical scrollbar."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3510,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2998,
									"name": "viewportColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The number of columns (of typical characters) fitting on a viewport line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3503,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2987,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Full editor width."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3459,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3001,
									"name": "wrappingColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3506,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2995,
										2996,
										2993,
										2994,
										2989,
										2990,
										2988,
										3003,
										3000,
										2999,
										2991,
										2992,
										2997,
										3004,
										3002,
										2998,
										2987,
										3001
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3455,
									"character": 37
								}
							]
						},
						{
							"id": 3005,
							"name": "EditorMinimapLayoutInfo",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The internal layout details of the editor."
							},
							"children": [
								{
									"id": 3014,
									"name": "minimapCanvasInnerHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3533,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3013,
									"name": "minimapCanvasInnerWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3532,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3016,
									"name": "minimapCanvasOuterHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3535,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3015,
									"name": "minimapCanvasOuterWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3534,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3009,
									"name": "minimapHeightIsEditorHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3528,
											"character": 44
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3010,
									"name": "minimapIsSampling",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3529,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3007,
									"name": "minimapLeft",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3526,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3012,
									"name": "minimapLineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3531,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3011,
									"name": "minimapScale",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3530,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3008,
									"name": "minimapWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3527,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3006,
									"name": "renderMinimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3525,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"id": 2982,
										"name": "RenderMinimap"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3014,
										3013,
										3016,
										3015,
										3009,
										3010,
										3007,
										3012,
										3011,
										3008,
										3006
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3524,
									"character": 44
								}
							]
						},
						{
							"id": 3141,
							"name": "EditorWrappingInfo",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 3142,
									"name": "isDominatedByLongLines",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3948,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3144,
									"name": "isViewportWrapping",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3950,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3143,
									"name": "isWordWrapMinified",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3949,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3145,
									"name": "wrappingColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3951,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3142,
										3144,
										3143,
										3145
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3947,
									"character": 39
								}
							]
						},
						{
							"id": 803,
							"name": "IActionDescriptor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Description of an action contribution"
							},
							"children": [
								{
									"id": 809,
									"name": "contextMenuGroupId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control if the action should show up in the context menu and where.\nThe context menu of the editor has these default:\n  navigation - The navigation group comes first in all cases.\n  1_modification - This group comes next and contains commands that modify your code.\n  9_cutcopypaste - The last default group with the basic editing commands.\nYou can also create your own group.\nDefaults to null (don't show in context menu)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1087,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 810,
									"name": "contextMenuOrder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the order in the context menu group."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1091,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 804,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "An unique identifier of the contributed action."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1061,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 808,
									"name": "keybindingContext",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The keybinding rule (condition on top of precondition)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1077,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 807,
									"name": "keybindings",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An array of keybindings for the action."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1073,
											"character": 19
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 805,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "A label of the action that will be presented to the user."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1065,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 806,
									"name": "precondition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Precondition rule."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1069,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 811,
									"name": "run",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 812,
											"name": "run",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Method that will be executed when the action is triggered."
											},
											"parameters": [
												{
													"id": 813,
													"name": "editor",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The editor instance is passed in as a convenience\n"
													},
													"type": {
														"type": "reference",
														"id": 3626,
														"name": "ICodeEditor"
													}
												},
												{
													"id": 814,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										809,
										810,
										804,
										808,
										807,
										805,
										806
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										811
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1057,
									"character": 38
								}
							]
						},
						{
							"id": 2264,
							"name": "IChange",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A change"
							},
							"children": [
								{
									"id": 2268,
									"name": "modifiedEndLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2088,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2267,
									"name": "modifiedStartLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2087,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2266,
									"name": "originalEndLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2086,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2265,
									"name": "originalStartLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2085,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2268,
										2267,
										2266,
										2265
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2084,
									"character": 28
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 2269,
									"name": "ICharChange"
								},
								{
									"type": "reference",
									"id": 2278,
									"name": "ILineChange"
								}
							]
						},
						{
							"id": 2269,
							"name": "ICharChange",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A character level change."
							},
							"children": [
								{
									"id": 2273,
									"name": "modifiedEndColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2098,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2277,
									"name": "modifiedEndLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2088,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2268,
										"name": "IChange.modifiedEndLineNumber"
									}
								},
								{
									"id": 2272,
									"name": "modifiedStartColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2097,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2276,
									"name": "modifiedStartLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2087,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2267,
										"name": "IChange.modifiedStartLineNumber"
									}
								},
								{
									"id": 2271,
									"name": "originalEndColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2096,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2275,
									"name": "originalEndLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2086,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2266,
										"name": "IChange.originalEndLineNumber"
									}
								},
								{
									"id": 2270,
									"name": "originalStartColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2095,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2274,
									"name": "originalStartLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2085,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2265,
										"name": "IChange.originalStartLineNumber"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2273,
										2277,
										2272,
										2276,
										2271,
										2275,
										2270,
										2274
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2094,
									"character": 32
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 2264,
									"name": "IChange"
								}
							]
						},
						{
							"id": 3626,
							"name": "ICodeEditor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A rich code editor."
							},
							"children": [
								{
									"id": 3734,
									"name": "onContextMenu",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3735,
											"name": "onContextMenu",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"contextmenu\"."
											},
											"parameters": [
												{
													"id": 3736,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3737,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3738,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3739,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3493,
																				"name": "IEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3711,
									"name": "onDidAttemptReadOnlyEdit",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3712,
											"name": "onDidAttemptReadOnlyEdit",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when editing failed because the editor is read-only."
											},
											"parameters": [
												{
													"id": 3713,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3714,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3715,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3686,
									"name": "onDidBlurEditorText",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3687,
											"name": "onDidBlurEditorText",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the text inside this editor lost focus (i.e. cursor stops blinking)."
											},
											"parameters": [
												{
													"id": 3688,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3689,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3690,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3696,
									"name": "onDidBlurEditorWidget",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3697,
											"name": "onDidBlurEditorWidget",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the text inside this editor or an editor widget lost focus."
											},
											"parameters": [
												{
													"id": 3698,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3699,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3700,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3651,
									"name": "onDidChangeConfiguration",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3652,
											"name": "onDidChangeConfiguration",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the configuration of the editor has changed. (e.g. `editor.updateOptions()`)"
											},
											"parameters": [
												{
													"id": 3653,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3654,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3655,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3656,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2788,
																				"name": "ConfigurationChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3657,
									"name": "onDidChangeCursorPosition",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3658,
											"name": "onDidChangeCursorPosition",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the cursor position has changed."
											},
											"parameters": [
												{
													"id": 3659,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3660,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3661,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3662,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2508,
																				"name": "ICursorPositionChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3663,
									"name": "onDidChangeCursorSelection",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3664,
											"name": "onDidChangeCursorSelection",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the cursor selection has changed."
											},
											"parameters": [
												{
													"id": 3665,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3666,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3667,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3668,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2513,
																				"name": "ICursorSelectionChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3669,
									"name": "onDidChangeModel",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3670,
											"name": "onDidChangeModel",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the model of this editor has changed (e.g. `editor.setModel()`)."
											},
											"parameters": [
												{
													"id": 3671,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3672,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3673,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3674,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2258,
																				"name": "IModelChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3627,
									"name": "onDidChangeModelContent",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3628,
											"name": "onDidChangeModelContent",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the content of the current model has changed."
											},
											"parameters": [
												{
													"id": 3629,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3630,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3631,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3632,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2485,
																				"name": "IModelContentChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3675,
									"name": "onDidChangeModelDecorations",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3676,
											"name": "onDidChangeModelDecorations",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the decorations of the current model have changed."
											},
											"parameters": [
												{
													"id": 3677,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3678,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3679,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3680,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2492,
																				"name": "IModelDecorationsChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3633,
									"name": "onDidChangeModelLanguage",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3634,
											"name": "onDidChangeModelLanguage",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the language of the current model has changed."
											},
											"parameters": [
												{
													"id": 3635,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3636,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3637,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3638,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2476,
																				"name": "IModelLanguageChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3639,
									"name": "onDidChangeModelLanguageConfiguration",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3640,
											"name": "onDidChangeModelLanguageConfiguration",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the language configuration of the current model has changed."
											},
											"parameters": [
												{
													"id": 3641,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3642,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3643,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3644,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2479,
																				"name": "IModelLanguageConfigurationChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3645,
									"name": "onDidChangeModelOptions",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3646,
											"name": "onDidChangeModelOptions",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the options of the current model has changed."
											},
											"parameters": [
												{
													"id": 3647,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3648,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3649,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3650,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2495,
																				"name": "IModelOptionsChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3770,
									"name": "onDidContentSizeChange",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3771,
											"name": "onDidContentSizeChange",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the content width or content height in the editor has changed."
											},
											"parameters": [
												{
													"id": 3772,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3773,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3774,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3775,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2284,
																				"name": "IContentSizeChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 4054,
									"name": "onDidDispose",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 4055,
											"name": "onDidDispose",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the editor has been disposed."
											},
											"parameters": [
												{
													"id": 4056,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4057,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4058,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2327,
												"name": "IEditor.onDidDispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2326,
										"name": "IEditor.onDidDispose"
									}
								},
								{
									"id": 3681,
									"name": "onDidFocusEditorText",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3682,
											"name": "onDidFocusEditorText",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the text inside this editor gained focus (i.e. cursor starts blinking)."
											},
											"parameters": [
												{
													"id": 3683,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3684,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3685,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3691,
									"name": "onDidFocusEditorWidget",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3692,
											"name": "onDidFocusEditorWidget",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the text inside this editor or an editor widget gained focus."
											},
											"parameters": [
												{
													"id": 3693,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3694,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3695,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3764,
									"name": "onDidLayoutChange",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3765,
											"name": "onDidLayoutChange",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the layout of the editor has changed."
											},
											"parameters": [
												{
													"id": 3766,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3767,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3768,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3769,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2986,
																				"name": "EditorLayoutInfo"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3716,
									"name": "onDidPaste",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3717,
											"name": "onDidPaste",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when users paste text in the editor."
											},
											"parameters": [
												{
													"id": 3718,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3719,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3720,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3721,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3499,
																				"name": "IPasteEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3776,
									"name": "onDidScrollChange",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3777,
											"name": "onDidScrollChange",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the scroll in the editor has changed."
											},
											"parameters": [
												{
													"id": 3778,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3779,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3780,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3781,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 299,
																				"name": "IScrollEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3758,
									"name": "onKeyDown",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3759,
											"name": "onKeyDown",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"keydown\"."
											},
											"parameters": [
												{
													"id": 3760,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3761,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3762,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3763,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 263,
																				"name": "IKeyboardEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3752,
									"name": "onKeyUp",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3753,
											"name": "onKeyUp",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"keyup\"."
											},
											"parameters": [
												{
													"id": 3754,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3755,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3756,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3757,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 263,
																				"name": "IKeyboardEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3728,
									"name": "onMouseDown",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3729,
											"name": "onMouseDown",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"mousedown\"."
											},
											"parameters": [
												{
													"id": 3730,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3731,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3732,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3733,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3493,
																				"name": "IEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3746,
									"name": "onMouseLeave",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3747,
											"name": "onMouseLeave",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"mouseleave\"."
											},
											"parameters": [
												{
													"id": 3748,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3749,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3750,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3751,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3496,
																				"name": "IPartialEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3740,
									"name": "onMouseMove",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3741,
											"name": "onMouseMove",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"mousemove\"."
											},
											"parameters": [
												{
													"id": 3742,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3743,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3744,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3745,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3493,
																				"name": "IEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3722,
									"name": "onMouseUp",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 3723,
											"name": "onMouseUp",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"mouseup\"."
											},
											"parameters": [
												{
													"id": 3724,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3725,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3726,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3727,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3493,
																				"name": "IEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 4009,
									"name": "addContentWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4010,
											"name": "addContentWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add a content widget. Widgets must have unique ids, otherwise they will be overwritten."
											},
											"parameters": [
												{
													"id": 4011,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3444,
														"name": "IContentWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4018,
									"name": "addOverlayWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4019,
											"name": "addOverlayWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add an overlay widget. Widgets must have unique ids, otherwise they will be overwritten."
											},
											"parameters": [
												{
													"id": 4020,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3464,
														"name": "IOverlayWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4051,
									"name": "applyFontInfo",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4052,
											"name": "applyFontInfo",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Apply the same font settings as the editor to `target`."
											},
											"parameters": [
												{
													"id": 4053,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4027,
									"name": "changeViewZones",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4028,
											"name": "changeViewZones",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the view zones. View zones are lost when a new model is attached to the editor."
											},
											"parameters": [
												{
													"id": 4029,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4030,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4031,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4032,
																			"name": "accessor",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3426,
																				"name": "IViewZoneChangeAccessor"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3990,
									"name": "deltaDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3991,
											"name": "deltaDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "All decorations added through this call will get the ownerId of this editor.",
												"tags": [
													{
														"tag": "see",
														"text": "`ITextModel.deltaDecorations`\n"
													}
												]
											},
											"parameters": [
												{
													"id": 3992,
													"name": "oldDecorations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 3993,
													"name": "newDecorations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1941,
															"name": "IModelDeltaDecoration"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									]
								},
								{
									"id": 4059,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4060,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Dispose the editor."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2332,
												"name": "IEditor.dispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2331,
										"name": "IEditor.dispose"
									}
								},
								{
									"id": 3970,
									"name": "executeCommand",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3971,
											"name": "executeCommand",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Execute a command on the editor.\nThe edits will land on the undo-redo stack, but no \"undo stop\" will be pushed."
											},
											"parameters": [
												{
													"id": 3972,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3973,
													"name": "command",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The command to execute\n"
													},
													"type": {
														"type": "reference",
														"id": 2246,
														"name": "ICommand"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3983,
									"name": "executeCommands",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3984,
											"name": "executeCommands",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Execute multiple (concomitant) commands on the editor."
											},
											"parameters": [
												{
													"id": 3985,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3986,
													"name": "commands",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2246,
															"name": "ICommand"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3978,
									"name": "executeEdits",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3979,
											"name": "executeEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Execute edits on the editor.\nThe edits will land on the undo-redo stack, but no \"undo stop\" will be pushed."
											},
											"parameters": [
												{
													"id": 3980,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3981,
													"name": "edits",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The edits to execute."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1967,
															"name": "IIdentifiedSingleEditOperation"
														}
													}
												},
												{
													"id": 3982,
													"name": "endCursorState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Cursor state after the edits were applied.\n"
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 1974,
																"name": "ICursorStateComputer"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 485,
																	"name": "Selection"
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4071,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4072,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Brings browser focus to the editor text"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2344,
												"name": "IEditor.focus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2343,
										"name": "IEditor.focus"
									}
								},
								{
									"id": 3967,
									"name": "getAction",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3968,
											"name": "getAction",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get an action that is a contribution to this editor.",
												"returns": "The action or null if action not found.\n",
												"tags": [
													{
														"tag": "id",
														"text": "Unique identifier of the contribution."
													}
												]
											},
											"parameters": [
												{
													"id": 3969,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 2292,
												"name": "IEditorAction"
											}
										}
									]
								},
								{
									"id": 4005,
									"name": "getContainerDomNode",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4006,
											"name": "getContainerDomNode",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the editor's container dom node"
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									]
								},
								{
									"id": 3949,
									"name": "getContentHeight",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3950,
											"name": "getContentHeight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the height of the editor's content.\nThis is information that is \"erased\" when computing `scrollHeight = Math.max(contentHeight, height)`"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 3943,
									"name": "getContentWidth",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3944,
											"name": "getContentWidth",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the width of the editor's content.\nThis is information that is \"erased\" when computing `scrollWidth = Math.max(contentWidth, width)`"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 3789,
									"name": "getContribution",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3790,
											"name": "getContribution",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a contribution of this editor.",
												"returns": "The contribution or null if contribution not found.\n",
												"tags": [
													{
														"tag": "id",
														"text": "Unique identifier of the contribution."
													}
												]
											},
											"typeParameter": [
												{
													"id": 3791,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2464,
														"name": "IEditorContribution"
													}
												}
											],
											"parameters": [
												{
													"id": 3792,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									]
								},
								{
									"id": 4007,
									"name": "getDomNode",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4008,
											"name": "getDomNode",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the editor's dom node"
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									]
								},
								{
									"id": 4063,
									"name": "getEditorType",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4064,
											"name": "getEditorType",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the editor type. Please see `EditorType`.\nThis is to avoid an instanceof check"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2336,
												"name": "IEditor.getEditorType"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "IEditor.getEditorType"
									}
								},
								{
									"id": 4061,
									"name": "getId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4062,
											"name": "getId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a unique id for this editor instance."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2334,
												"name": "IEditor.getId"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "IEditor.getId"
									}
								},
								{
									"id": 3994,
									"name": "getLayoutInfo",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3995,
											"name": "getLayoutInfo",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the layout info for the editor."
											},
											"type": {
												"type": "reference",
												"id": 2986,
												"name": "EditorLayoutInfo"
											}
										}
									]
								},
								{
									"id": 3987,
									"name": "getLineDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3988,
											"name": "getLineDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get all the decorations on a line (filtering out decorations from other editors)."
											},
											"parameters": [
												{
													"id": 3989,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1944,
													"name": "IModelDecoration"
												}
											}
										}
									]
								},
								{
									"id": 3793,
									"name": "getModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3794,
											"name": "getModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Type the getModel() of IEditor."
											},
											"type": {
												"type": "reference",
												"id": 2002,
												"name": "ITextModel"
											},
											"overwrites": {
												"type": "reference",
												"id": 2460,
												"name": "IEditor.getModel"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2459,
										"name": "IEditor.getModel"
									}
								},
								{
									"id": 4033,
									"name": "getOffsetForColumn",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4034,
											"name": "getOffsetForColumn",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the horizontal position (left offset) for the column w.r.t to the beginning of the line.\nThis method works only if the line `lineNumber` is currently rendered (in the editor's viewport).\nUse this method with caution."
											},
											"parameters": [
												{
													"id": 4035,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4036,
													"name": "column",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 3800,
									"name": "getOption",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3801,
											"name": "getOption",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets a specific editor option."
											},
											"typeParameter": [
												{
													"id": 3802,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3146,
														"name": "EditorOption"
													}
												}
											],
											"parameters": [
												{
													"id": 3803,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3405,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 3403,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"name": "T"
																		}
																	],
																	"name": "FindEditorOptionsKeyById"
																},
																"objectType": {
																	"type": "reflection",
																	"declaration": {
																		"id": 3804,
																		"name": "__type",
																		"kind": 65536,
																		"kindString": "Type literal",
																		"flags": {},
																		"children": [
																			{
																				"id": 3805,
																				"name": "acceptSuggestionOnCommitCharacter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4083,
																						"character": 41
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3147,
																							"name": "acceptSuggestionOnCommitCharacter"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3806,
																				"name": "acceptSuggestionOnEnter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4084,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3148,
																							"name": "acceptSuggestionOnEnter"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "smart"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3808,
																				"name": "accessibilityPageSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4086,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3150,
																							"name": "accessibilityPageSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3807,
																				"name": "accessibilitySupport",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4085,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3149,
																							"name": "accessibilitySupport"
																						},
																						{
																							"type": "reference",
																							"id": 2521,
																							"name": "AccessibilitySupport"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3809,
																				"name": "ariaLabel",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4087,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3151,
																							"name": "ariaLabel"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3810,
																				"name": "autoClosingBrackets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4088,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3152,
																							"name": "autoClosingBrackets"
																						},
																						{
																							"type": "reference",
																							"id": 2525,
																							"name": "EditorAutoClosingStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3811,
																				"name": "autoClosingOvertype",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4089,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3153,
																							"name": "autoClosingOvertype"
																						},
																						{
																							"type": "reference",
																							"id": 2527,
																							"name": "EditorAutoClosingOvertypeStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3812,
																				"name": "autoClosingQuotes",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4090,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3154,
																							"name": "autoClosingQuotes"
																						},
																						{
																							"type": "reference",
																							"id": 2525,
																							"name": "EditorAutoClosingStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3813,
																				"name": "autoIndent",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4091,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3155,
																							"name": "autoIndent"
																						},
																						{
																							"type": "reference",
																							"id": 2528,
																							"name": "EditorAutoIndentStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3815,
																				"name": "autoSurround",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4093,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3157,
																							"name": "autoSurround"
																						},
																						{
																							"type": "reference",
																							"id": 2526,
																							"name": "EditorAutoSurroundStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3814,
																				"name": "automaticLayout",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4092,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3156,
																							"name": "automaticLayout"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3817,
																				"name": "codeLens",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4095,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3158,
																							"name": "codeLens"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3818,
																				"name": "codeLensFontFamily",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4096,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3159,
																							"name": "codeLensFontFamily"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3819,
																				"name": "codeLensFontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4097,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3160,
																							"name": "codeLensFontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3820,
																				"name": "colorDecorators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4098,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3161,
																							"name": "colorDecorators"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3821,
																				"name": "columnSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4099,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3162,
																							"name": "columnSelection"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3822,
																				"name": "comments",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4100,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3163,
																							"name": "comments"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2933,
																											"name": "IEditorCommentsOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3823,
																				"name": "contextmenu",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4101,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3164,
																							"name": "contextmenu"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3824,
																				"name": "copyWithSyntaxHighlighting",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4102,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3165,
																							"name": "copyWithSyntaxHighlighting"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3825,
																				"name": "cursorBlinking",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4103,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3166,
																							"name": "cursorBlinking"
																						},
																						{
																							"type": "reference",
																							"id": 2937,
																							"name": "TextEditorCursorBlinkingStyle"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3826,
																				"name": "cursorSmoothCaretAnimation",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4104,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3167,
																							"name": "cursorSmoothCaretAnimation"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3827,
																				"name": "cursorStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4105,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3168,
																							"name": "cursorStyle"
																						},
																						{
																							"type": "reference",
																							"id": 2944,
																							"name": "TextEditorCursorStyle"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3828,
																				"name": "cursorSurroundingLines",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4106,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3169,
																							"name": "cursorSurroundingLines"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3829,
																				"name": "cursorSurroundingLinesStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4107,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3170,
																							"name": "cursorSurroundingLinesStyle"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "default"
																								},
																								{
																									"type": "literal",
																									"value": "all"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3830,
																				"name": "cursorWidth",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4108,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3171,
																							"name": "cursorWidth"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3878,
																				"name": "definitionLinkOpensInPeek",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4156,
																						"character": 33
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3219,
																							"name": "definitionLinkOpensInPeek"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3831,
																				"name": "disableLayerHinting",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4109,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3172,
																							"name": "disableLayerHinting"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3832,
																				"name": "disableMonospaceOptimizations",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4110,
																						"character": 37
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3173,
																							"name": "disableMonospaceOptimizations"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3833,
																				"name": "dragAndDrop",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4111,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3174,
																							"name": "dragAndDrop"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3927,
																				"name": "editorClassName",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4204,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3268,
																							"name": "editorClassName"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3834,
																				"name": "emptySelectionClipboard",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4112,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3175,
																							"name": "emptySelectionClipboard"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3835,
																				"name": "extraEditorClassName",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4113,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3176,
																							"name": "extraEditorClassName"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3836,
																				"name": "fastScrollSensitivity",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4114,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3177,
																							"name": "fastScrollSensitivity"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3837,
																				"name": "find",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4115,
																						"character": 12
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3178,
																							"name": "find"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2951,
																											"name": "IEditorFindOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3838,
																				"name": "fixedOverflowWidgets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4116,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3179,
																							"name": "fixedOverflowWidgets"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3839,
																				"name": "folding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4117,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3180,
																							"name": "folding"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3841,
																				"name": "foldingHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4119,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3182,
																							"name": "foldingHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3840,
																				"name": "foldingStrategy",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4118,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3181,
																							"name": "foldingStrategy"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "auto"
																								},
																								{
																									"type": "literal",
																									"value": "indentation"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3843,
																				"name": "fontFamily",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4121,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3184,
																							"name": "fontFamily"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3844,
																				"name": "fontInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4122,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3185,
																							"name": "fontInfo"
																						},
																						{
																							"type": "reference",
																							"id": 4342,
																							"name": "FontInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3845,
																				"name": "fontLigatures2",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4123,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3186,
																							"name": "fontLigatures"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3846,
																				"name": "fontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4124,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3187,
																							"name": "fontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3847,
																				"name": "fontWeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4125,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3188,
																							"name": "fontWeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3848,
																				"name": "formatOnPaste",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4126,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3189,
																							"name": "formatOnPaste"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3849,
																				"name": "formatOnType",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4127,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3190,
																							"name": "formatOnType"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3850,
																				"name": "glyphMargin",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4128,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3191,
																							"name": "glyphMargin"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3851,
																				"name": "gotoLocation",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4129,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3192,
																							"name": "gotoLocation"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2959,
																											"name": "IGotoLocationOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3852,
																				"name": "hideCursorInOverviewRuler",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4130,
																						"character": 33
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3193,
																							"name": "hideCursorInOverviewRuler"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3853,
																				"name": "highlightActiveIndentGuide",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4131,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3194,
																							"name": "highlightActiveIndentGuide"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3854,
																				"name": "hover",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4132,
																						"character": 13
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3195,
																							"name": "hover"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2972,
																											"name": "IEditorHoverOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3855,
																				"name": "inDiffEditor",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4133,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3196,
																							"name": "inDiffEditor"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3904,
																				"name": "inlineHints",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4181,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3267,
																							"name": "inlineHints"
																						},
																						{
																							"type": "intrinsic",
																							"name": "any"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3930,
																				"name": "layoutInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4207,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3271,
																							"name": "layoutInfo"
																						},
																						{
																							"type": "reference",
																							"id": 2986,
																							"name": "EditorLayoutInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3856,
																				"name": "letterSpacing",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4134,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3197,
																							"name": "letterSpacing"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3857,
																				"name": "lightbulb",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4135,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3198,
																							"name": "lightbulb"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3017,
																											"name": "IEditorLightbulbOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3858,
																				"name": "lineDecorationsWidth",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4136,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3199,
																							"name": "lineDecorationsWidth"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "number"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3859,
																				"name": "lineHeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4137,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3200,
																							"name": "lineHeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3860,
																				"name": "lineNumbers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4138,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3201,
																							"name": "lineNumbers"
																						},
																						{
																							"type": "reference",
																							"id": 3059,
																							"name": "InternalEditorRenderLineNumbersOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3861,
																				"name": "lineNumbersMinChars",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4139,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3202,
																							"name": "lineNumbersMinChars"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3862,
																				"name": "linkedEditing",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4140,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3203,
																							"name": "linkedEditing"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3863,
																				"name": "links",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4141,
																						"character": 13
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3204,
																							"name": "links"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3864,
																				"name": "matchBrackets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4142,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3205,
																							"name": "matchBrackets"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "always"
																								},
																								{
																									"type": "literal",
																									"value": "never"
																								},
																								{
																									"type": "literal",
																									"value": "near"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3865,
																				"name": "minimap",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4143,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3206,
																							"name": "minimap"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3025,
																											"name": "IEditorMinimapOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3866,
																				"name": "mouseStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4144,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3207,
																							"name": "mouseStyle"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "default"
																								},
																								{
																									"type": "literal",
																									"value": "text"
																								},
																								{
																									"type": "literal",
																									"value": "copy"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3867,
																				"name": "mouseWheelScrollSensitivity",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4145,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3208,
																							"name": "mouseWheelScrollSensitivity"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3868,
																				"name": "mouseWheelZoom",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4146,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3209,
																							"name": "mouseWheelZoom"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3869,
																				"name": "multiCursorMergeOverlapping",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4147,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3210,
																							"name": "multiCursorMergeOverlapping"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3870,
																				"name": "multiCursorModifier",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4148,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3211,
																							"name": "multiCursorModifier"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "altKey"
																								},
																								{
																									"type": "literal",
																									"value": "metaKey"
																								},
																								{
																									"type": "literal",
																									"value": "ctrlKey"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3871,
																				"name": "multiCursorPaste",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4149,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3212,
																							"name": "multiCursorPaste"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "spread"
																								},
																								{
																									"type": "literal",
																									"value": "full"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3872,
																				"name": "occurrencesHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4150,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3213,
																							"name": "occurrencesHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3873,
																				"name": "overviewRulerBorder",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4151,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3214,
																							"name": "overviewRulerBorder"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3874,
																				"name": "overviewRulerLanes",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4152,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3215,
																							"name": "overviewRulerLanes"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3875,
																				"name": "padding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4153,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3216,
																							"name": "padding"
																						},
																						{
																							"type": "reference",
																							"id": 3037,
																							"name": "InternalEditorPaddingOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3876,
																				"name": "parameterHints",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4154,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3217,
																							"name": "parameterHints"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3040,
																											"name": "IEditorParameterHintOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3877,
																				"name": "peekWidgetDefaultFocus",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4155,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3218,
																							"name": "peekWidgetDefaultFocus"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "tree"
																								},
																								{
																									"type": "literal",
																									"value": "editor"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3928,
																				"name": "pixelRatio",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4205,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3269,
																							"name": "pixelRatio"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3879,
																				"name": "quickSuggestions",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4157,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3220,
																							"name": "quickSuggestions"
																						},
																						{
																							"type": "reference",
																							"id": 3048,
																							"name": "ValidQuickSuggestionsOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3880,
																				"name": "quickSuggestionsDelay",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4158,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3221,
																							"name": "quickSuggestionsDelay"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3881,
																				"name": "readOnly",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4159,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3222,
																							"name": "readOnly"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3882,
																				"name": "renameOnType",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4160,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3223,
																							"name": "renameOnType"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3883,
																				"name": "renderControlCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4161,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3224,
																							"name": "renderControlCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3885,
																				"name": "renderFinalNewline",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4163,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3226,
																							"name": "renderFinalNewline"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3884,
																				"name": "renderIndentGuides",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4162,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3225,
																							"name": "renderIndentGuides"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3886,
																				"name": "renderLineHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4164,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3227,
																							"name": "renderLineHighlight"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "all"
																								},
																								{
																									"type": "literal",
																									"value": "line"
																								},
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "gutter"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3887,
																				"name": "renderLineHighlightOnlyWhenFocus",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4165,
																						"character": 40
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3228,
																							"name": "renderLineHighlightOnlyWhenFocus"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3888,
																				"name": "renderValidationDecorations",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4166,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3229,
																							"name": "renderValidationDecorations"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "editable"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3889,
																				"name": "renderWhitespace",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4167,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3230,
																							"name": "renderWhitespace"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "all"
																								},
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "boundary"
																								},
																								{
																									"type": "literal",
																									"value": "selection"
																								},
																								{
																									"type": "literal",
																									"value": "trailing"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3890,
																				"name": "revealHorizontalRightPadding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4168,
																						"character": 36
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3231,
																							"name": "revealHorizontalRightPadding"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3891,
																				"name": "roundedSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4169,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3232,
																							"name": "roundedSelection"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3892,
																				"name": "rulers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4170,
																						"character": 14
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3233,
																							"name": "rulers"
																						},
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 3893,
																								"name": "__type",
																								"kind": 65536,
																								"kindString": "Type literal",
																								"flags": {}
																							}
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3895,
																				"name": "scrollBeyondLastColumn",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4172,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3235,
																							"name": "scrollBeyondLastColumn"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3896,
																				"name": "scrollBeyondLastLine",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4173,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3236,
																							"name": "scrollBeyondLastLine"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3897,
																				"name": "scrollPredominantAxis",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4174,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3237,
																							"name": "scrollPredominantAxis"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3894,
																				"name": "scrollbar",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4171,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3234,
																							"name": "scrollbar"
																						},
																						{
																							"type": "reference",
																							"id": 3082,
																							"name": "InternalEditorScrollbarOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3900,
																				"name": "selectOnLineNumbers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4177,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3240,
																							"name": "selectOnLineNumbers"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3898,
																				"name": "selectionClipboard",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4175,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3238,
																							"name": "selectionClipboard"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3899,
																				"name": "selectionHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4176,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3239,
																							"name": "selectionHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3903,
																				"name": "showDeprecated",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4180,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3266,
																							"name": "showDeprecated"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3901,
																				"name": "showFoldingControls",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4178,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3241,
																							"name": "showFoldingControls"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "always"
																								},
																								{
																									"type": "literal",
																									"value": "mouseover"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3902,
																				"name": "showUnused",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4179,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3242,
																							"name": "showUnused"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3906,
																				"name": "smartSelect",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4183,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3244,
																							"name": "smartSelect"
																						},
																						{
																							"type": "intrinsic",
																							"name": "any"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3907,
																				"name": "smoothScrolling",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4184,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3245,
																							"name": "smoothScrolling"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3905,
																				"name": "snippetSuggestions",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4182,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3243,
																							"name": "snippetSuggestions"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "top"
																								},
																								{
																									"type": "literal",
																									"value": "bottom"
																								},
																								{
																									"type": "literal",
																									"value": "inline"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3816,
																				"name": "stickyTabStops",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4094,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3246,
																							"name": "stickyTabStops"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3908,
																				"name": "stopRenderingLineAfter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4185,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3247,
																							"name": "stopRenderingLineAfter"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3909,
																				"name": "suggest",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4186,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3248,
																							"name": "suggest"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3096,
																											"name": "ISuggestOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3910,
																				"name": "suggestFontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4187,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3249,
																							"name": "suggestFontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3911,
																				"name": "suggestLineHeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4188,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3250,
																							"name": "suggestLineHeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3912,
																				"name": "suggestOnTriggerCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4189,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3251,
																							"name": "suggestOnTriggerCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3913,
																				"name": "suggestSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4190,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3252,
																							"name": "suggestSelection"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "first"
																								},
																								{
																									"type": "literal",
																									"value": "recentlyUsed"
																								},
																								{
																									"type": "literal",
																									"value": "recentlyUsedByPrefix"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3914,
																				"name": "tabCompletion",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4191,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3253,
																							"name": "tabCompletion"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "onlySnippets"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3929,
																				"name": "tabFocusMode",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4206,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3270,
																							"name": "tabFocusMode"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3915,
																				"name": "tabIndex",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4192,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3254,
																							"name": "tabIndex"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3842,
																				"name": "unfoldOnClickAfterEndOfLine",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4120,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3183,
																							"name": "unfoldOnClickAfterEndOfLine"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3916,
																				"name": "unusualLineTerminators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4193,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3255,
																							"name": "unusualLineTerminators"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "auto"
																								},
																								{
																									"type": "literal",
																									"value": "prompt"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3917,
																				"name": "useTabStops",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4194,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3256,
																							"name": "useTabStops"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3918,
																				"name": "wordSeparators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4195,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3257,
																							"name": "wordSeparators"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3919,
																				"name": "wordWrap",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4196,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3258,
																							"name": "wordWrap"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "wordWrapColumn"
																								},
																								{
																									"type": "literal",
																									"value": "bounded"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3920,
																				"name": "wordWrapBreakAfterCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4197,
																						"character": 36
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3259,
																							"name": "wordWrapBreakAfterCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3921,
																				"name": "wordWrapBreakBeforeCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4198,
																						"character": 37
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3260,
																							"name": "wordWrapBreakBeforeCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3922,
																				"name": "wordWrapColumn",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4199,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3261,
																							"name": "wordWrapColumn"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3923,
																				"name": "wordWrapOverride1",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4200,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3262,
																							"name": "wordWrapOverride1"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "inherit"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3924,
																				"name": "wordWrapOverride2",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4201,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3263,
																							"name": "wordWrapOverride2"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "inherit"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3925,
																				"name": "wrappingIndent",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4202,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3264,
																							"name": "wrappingIndent"
																						},
																						{
																							"type": "reference",
																							"id": 3136,
																							"name": "WrappingIndent"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3931,
																				"name": "wrappingInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4208,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3272,
																							"name": "wrappingInfo"
																						},
																						{
																							"type": "reference",
																							"id": 3141,
																							"name": "EditorWrappingInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 3926,
																				"name": "wrappingStrategy",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4203,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3265,
																							"name": "wrappingStrategy"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "simple"
																								},
																								{
																									"type": "literal",
																									"value": "advanced"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"kind": 1024,
																				"children": [
																					3805,
																					3806,
																					3808,
																					3807,
																					3809,
																					3810,
																					3811,
																					3812,
																					3813,
																					3815,
																					3814,
																					3817,
																					3818,
																					3819,
																					3820,
																					3821,
																					3822,
																					3823,
																					3824,
																					3825,
																					3826,
																					3827,
																					3828,
																					3829,
																					3830,
																					3878,
																					3831,
																					3832,
																					3833,
																					3927,
																					3834,
																					3835,
																					3836,
																					3837,
																					3838,
																					3839,
																					3841,
																					3840,
																					3843,
																					3844,
																					3845,
																					3846,
																					3847,
																					3848,
																					3849,
																					3850,
																					3851,
																					3852,
																					3853,
																					3854,
																					3855,
																					3904,
																					3930,
																					3856,
																					3857,
																					3858,
																					3859,
																					3860,
																					3861,
																					3862,
																					3863,
																					3864,
																					3865,
																					3866,
																					3867,
																					3868,
																					3869,
																					3870,
																					3871,
																					3872,
																					3873,
																					3874,
																					3875,
																					3876,
																					3877,
																					3928,
																					3879,
																					3880,
																					3881,
																					3882,
																					3883,
																					3885,
																					3884,
																					3886,
																					3887,
																					3888,
																					3889,
																					3890,
																					3891,
																					3892,
																					3895,
																					3896,
																					3897,
																					3894,
																					3900,
																					3898,
																					3899,
																					3903,
																					3901,
																					3902,
																					3906,
																					3907,
																					3905,
																					3816,
																					3908,
																					3909,
																					3910,
																					3911,
																					3912,
																					3913,
																					3914,
																					3929,
																					3915,
																					3842,
																					3916,
																					3917,
																					3918,
																					3919,
																					3920,
																					3921,
																					3922,
																					3923,
																					3924,
																					3925,
																					3931,
																					3926
																				]
																			}
																		]
																	}
																}
															}
														],
														"name": "ComputedEditorOptionValue"
													}
												],
												"name": "NonNullable"
											}
										}
									]
								},
								{
									"id": 3798,
									"name": "getOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3799,
											"name": "getOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets all the editor computed options."
											},
											"type": {
												"type": "reference",
												"id": 2794,
												"name": "IComputedEditorOptions"
											}
										}
									]
								},
								{
									"id": 4080,
									"name": "getPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4081,
											"name": "getPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary position of the cursor."
											},
											"type": {
												"type": "reference",
												"id": 311,
												"name": "Position"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2358,
												"name": "IEditor.getPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2357,
										"name": "IEditor.getPosition"
									}
								},
								{
									"id": 3932,
									"name": "getRawOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3933,
											"name": "getRawOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the editor's configuration (without any validation or defaults)."
											},
											"type": {
												"type": "reference",
												"id": 2534,
												"name": "IEditorOptions"
											}
										}
									]
								},
								{
									"id": 3951,
									"name": "getScrollHeight",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3952,
											"name": "getScrollHeight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the scrollHeight of the editor's viewport."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 3947,
									"name": "getScrollLeft",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3948,
											"name": "getScrollLeft",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the scrollLeft of the editor's viewport."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 3953,
									"name": "getScrollTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3954,
											"name": "getScrollTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the scrollTop of the editor's viewport."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 3945,
									"name": "getScrollWidth",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3946,
											"name": "getScrollWidth",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the scrollWidth of the editor's viewport."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 4044,
									"name": "getScrolledVisiblePosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4045,
											"name": "getScrolledVisiblePosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the visible position for `position`.\nThe result position takes scrolling into account and is relative to the top left corner of the editor.\nExplanation 1: the results of this method will change for the same `position` if the user scrolls the editor.\nExplanation 2: the results of this method will not change if the container of the editor gets repositioned.\nWarning: the results of this method are inaccurate for positions that are outside the current editor viewport."
											},
											"parameters": [
												{
													"id": 4046,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4047,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4050,
															"name": "height",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 4914,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 4049,
															"name": "left",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 4913,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 4048,
															"name": "top",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 4912,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																4050,
																4049,
																4048
															]
														}
													]
												}
											}
										}
									]
								},
								{
									"id": 4117,
									"name": "getSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4118,
											"name": "getSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary selection of the editor."
											},
											"type": {
												"type": "reference",
												"id": 485,
												"name": "Selection"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2395,
												"name": "IEditor.getSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2394,
										"name": "IEditor.getSelection"
									}
								},
								{
									"id": 4119,
									"name": "getSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4120,
											"name": "getSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all the selections of the editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 485,
													"name": "Selection"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2397,
												"name": "IEditor.getSelections"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2396,
										"name": "IEditor.getSelections"
									}
								},
								{
									"id": 4075,
									"name": "getSupportedActions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4076,
											"name": "getSupportedActions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all actions associated with this editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2292,
													"name": "IEditorAction"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2348,
												"name": "IEditor.getSupportedActions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "IEditor.getSupportedActions"
									}
								},
								{
									"id": 4040,
									"name": "getTargetAtClientPoint",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4041,
											"name": "getTargetAtClientPoint",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the hit test target at coordinates `clientX` and `clientY`.\nThe coordinates are relative to the top-left of the viewport.",
												"returns": "Hit test target or null if the coordinates fall outside the editor or the editor has no model.\n"
											},
											"parameters": [
												{
													"id": 4042,
													"name": "clientX",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4043,
													"name": "clientY",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 3486,
												"name": "IMouseTarget"
											}
										}
									]
								},
								{
									"id": 3998,
									"name": "getTopForLineNumber",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3999,
											"name": "getTopForLineNumber",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the vertical position (top offset) for the line w.r.t. to the first line."
											},
											"parameters": [
												{
													"id": 4000,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 4001,
									"name": "getTopForPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4002,
											"name": "getTopForPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the vertical position (top offset) for the position w.r.t. to the first line."
											},
											"parameters": [
												{
													"id": 4003,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4004,
													"name": "column",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 3934,
									"name": "getValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3935,
											"name": "getValue",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get value of the current model attached to this editor.",
												"tags": [
													{
														"tag": "see",
														"text": "`ITextModel.getValue`\n"
													}
												]
											},
											"parameters": [
												{
													"id": 3936,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3937,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 3939,
																	"name": "lineEnding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "monaco.ts",
																			"line": 4743,
																			"character": 22
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 3938,
																	"name": "preserveBOM",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "monaco.ts",
																			"line": 4742,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		3939,
																		3938
																	]
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 4077,
									"name": "getVisibleColumnFromPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4078,
											"name": "getVisibleColumnFromPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Given a position, returns a column number that takes tab-widths into account."
											},
											"parameters": [
												{
													"id": 4079,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2355,
												"name": "IEditor.getVisibleColumnFromPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2354,
										"name": "IEditor.getVisibleColumnFromPosition"
									}
								},
								{
									"id": 3996,
									"name": "getVisibleRanges",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3997,
											"name": "getVisibleRanges",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the ranges that are currently visible.\nDoes not account for horizontal scrolling."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 366,
													"name": "Range"
												}
											}
										}
									]
								},
								{
									"id": 4073,
									"name": "hasTextFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4074,
											"name": "hasTextFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns true if the text inside this editor is focused (i.e. cursor is blinking)."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2346,
												"name": "IEditor.hasTextFocus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "IEditor.hasTextFocus"
									}
								},
								{
									"id": 3787,
									"name": "hasWidgetFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3788,
											"name": "hasWidgetFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns true if the text inside this editor or an editor widget has focus."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4068,
									"name": "layout",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4069,
											"name": "layout",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Instructs the editor to remeasure its container. This method should\nbe called when the container of the editor gets resized.",
												"text": "If a dimension is passed in, the passed in value will be used.\n"
											},
											"parameters": [
												{
													"id": 4070,
													"name": "dimension",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2261,
														"name": "IDimension"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2341,
												"name": "IEditor.layout"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2340,
										"name": "IEditor.layout"
									}
								},
								{
									"id": 4012,
									"name": "layoutContentWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4013,
											"name": "layoutContentWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Layout/Reposition a content widget. This is a ping to the editor to call widget.getPosition()\nand update appropriately."
											},
											"parameters": [
												{
													"id": 4014,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3444,
														"name": "IContentWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4021,
									"name": "layoutOverlayWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4022,
											"name": "layoutOverlayWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Layout/Reposition an overlay widget. This is a ping to the editor to call widget.getPosition()\nand update appropriately."
											},
											"parameters": [
												{
													"id": 4023,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3464,
														"name": "IOverlayWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3706,
									"name": "onDidCompositionEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3707,
											"name": "onDidCompositionEnd",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "An event emitted after composition has ended."
											},
											"parameters": [
												{
													"id": 3708,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3709,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3710,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3701,
									"name": "onDidCompositionStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3702,
											"name": "onDidCompositionStart",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "An event emitted after composition has started."
											},
											"parameters": [
												{
													"id": 3703,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3704,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3705,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 3976,
									"name": "popUndoStop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3977,
											"name": "popUndoStop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Remove the \"undo stop\" in the undo-redo stack."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 3974,
									"name": "pushUndoStop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3975,
											"name": "pushUndoStop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Create an \"undo stop\" in the undo-redo stack."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4015,
									"name": "removeContentWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4016,
											"name": "removeContentWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Remove a content widget."
											},
											"parameters": [
												{
													"id": 4017,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3444,
														"name": "IContentWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4024,
									"name": "removeOverlayWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4025,
											"name": "removeOverlayWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Remove an overlay widget."
											},
											"parameters": [
												{
													"id": 4026,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3464,
														"name": "IOverlayWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4037,
									"name": "render",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4038,
											"name": "render",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Force an editor render now."
											},
											"parameters": [
												{
													"id": 4039,
													"name": "forceRedraw",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3784,
									"name": "restoreViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3785,
											"name": "restoreViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Restores the view state of the editor from a serializable object generated by `saveViewState`."
											},
											"parameters": [
												{
													"id": 3786,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2311,
														"name": "ICodeEditorViewState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"id": 2352,
												"name": "IEditor.restoreViewState"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2351,
										"name": "IEditor.restoreViewState"
									}
								},
								{
									"id": 4085,
									"name": "revealLine",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4086,
											"name": "revealLine",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line."
											},
											"parameters": [
												{
													"id": 4087,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4088,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2363,
												"name": "IEditor.revealLine"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2362,
										"name": "IEditor.revealLine"
									}
								},
								{
									"id": 4089,
									"name": "revealLineInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4090,
											"name": "revealLineInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically."
											},
											"parameters": [
												{
													"id": 4091,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4092,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2367,
												"name": "IEditor.revealLineInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2366,
										"name": "IEditor.revealLineInCenter"
									}
								},
								{
									"id": 4093,
									"name": "revealLineInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4094,
											"name": "revealLineInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4095,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4096,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2371,
												"name": "IEditor.revealLineInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2370,
										"name": "IEditor.revealLineInCenterIfOutsideViewport"
									}
								},
								{
									"id": 4097,
									"name": "revealLineNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4098,
											"name": "revealLineNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 4099,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4100,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2375,
												"name": "IEditor.revealLineNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2374,
										"name": "IEditor.revealLineNearTop"
									}
								},
								{
									"id": 4133,
									"name": "revealLines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4134,
											"name": "revealLines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines."
											},
											"parameters": [
												{
													"id": 4135,
													"name": "startLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4136,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4137,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2411,
												"name": "IEditor.revealLines"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2410,
										"name": "IEditor.revealLines"
									}
								},
								{
									"id": 4138,
									"name": "revealLinesInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4139,
											"name": "revealLinesInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically."
											},
											"parameters": [
												{
													"id": 4140,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4141,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4142,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2416,
												"name": "IEditor.revealLinesInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2415,
										"name": "IEditor.revealLinesInCenter"
									}
								},
								{
									"id": 4143,
									"name": "revealLinesInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4144,
											"name": "revealLinesInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4145,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4146,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4147,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2421,
												"name": "IEditor.revealLinesInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2420,
										"name": "IEditor.revealLinesInCenterIfOutsideViewport"
									}
								},
								{
									"id": 4148,
									"name": "revealLinesNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4149,
											"name": "revealLinesNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 4150,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4151,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4152,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2426,
												"name": "IEditor.revealLinesNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2425,
										"name": "IEditor.revealLinesNearTop"
									}
								},
								{
									"id": 4101,
									"name": "revealPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4102,
											"name": "revealPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position."
											},
											"parameters": [
												{
													"id": 4103,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 4104,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2379,
												"name": "IEditor.revealPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2378,
										"name": "IEditor.revealPosition"
									}
								},
								{
									"id": 4105,
									"name": "revealPositionInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4106,
											"name": "revealPositionInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically."
											},
											"parameters": [
												{
													"id": 4107,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 4108,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2383,
												"name": "IEditor.revealPositionInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2382,
										"name": "IEditor.revealPositionInCenter"
									}
								},
								{
									"id": 4109,
									"name": "revealPositionInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4110,
											"name": "revealPositionInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4111,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 4112,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2387,
												"name": "IEditor.revealPositionInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2386,
										"name": "IEditor.revealPositionInCenterIfOutsideViewport"
									}
								},
								{
									"id": 4113,
									"name": "revealPositionNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4114,
											"name": "revealPositionNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 4115,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 4116,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2391,
												"name": "IEditor.revealPositionNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2390,
										"name": "IEditor.revealPositionNearTop"
									}
								},
								{
									"id": 4153,
									"name": "revealRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4154,
											"name": "revealRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range."
											},
											"parameters": [
												{
													"id": 4155,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4156,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2431,
												"name": "IEditor.revealRange"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2430,
										"name": "IEditor.revealRange"
									}
								},
								{
									"id": 4161,
									"name": "revealRangeAtTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4162,
											"name": "revealRangeAtTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range at the top of the viewport."
											},
											"parameters": [
												{
													"id": 4163,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4164,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2439,
												"name": "IEditor.revealRangeAtTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2438,
										"name": "IEditor.revealRangeAtTop"
									}
								},
								{
									"id": 4157,
									"name": "revealRangeInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4158,
											"name": "revealRangeInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically."
											},
											"parameters": [
												{
													"id": 4159,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4160,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2435,
												"name": "IEditor.revealRangeInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2434,
										"name": "IEditor.revealRangeInCenter"
									}
								},
								{
									"id": 4165,
									"name": "revealRangeInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4166,
											"name": "revealRangeInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4167,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4168,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2443,
												"name": "IEditor.revealRangeInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2442,
										"name": "IEditor.revealRangeInCenterIfOutsideViewport"
									}
								},
								{
									"id": 4169,
									"name": "revealRangeNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4170,
											"name": "revealRangeNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 4171,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4172,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2447,
												"name": "IEditor.revealRangeNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2446,
										"name": "IEditor.revealRangeNearTop"
									}
								},
								{
									"id": 4173,
									"name": "revealRangeNearTopIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4174,
											"name": "revealRangeNearTopIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition. Only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4175,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4176,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2451,
												"name": "IEditor.revealRangeNearTopIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2450,
										"name": "IEditor.revealRangeNearTopIfOutsideViewport"
									}
								},
								{
									"id": 3782,
									"name": "saveViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3783,
											"name": "saveViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Saves current view state of the editor in a serializable object."
											},
											"type": {
												"type": "reference",
												"id": 2311,
												"name": "ICodeEditorViewState"
											},
											"overwrites": {
												"type": "reference",
												"id": 2350,
												"name": "IEditor.saveViewState"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2349,
										"name": "IEditor.saveViewState"
									}
								},
								{
									"id": 3795,
									"name": "setModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3796,
											"name": "setModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the current model attached to this editor.\nIf the previous model was created by the editor via the value key in the options\nliteral object, it will be destroyed. Otherwise, if the previous model was set\nvia setModel, or the model key in the options literal object, the previous model\nwill not be destroyed.\nIt is safe to call setModel(null) to simply detach the current model from the editor."
											},
											"parameters": [
												{
													"id": 3797,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"id": 2462,
												"name": "IEditor.setModel"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2461,
										"name": "IEditor.setModel"
									}
								},
								{
									"id": 4082,
									"name": "setPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4083,
											"name": "setPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary position of the cursor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4084,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "New primary cursor's position\n"
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2360,
												"name": "IEditor.setPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2359,
										"name": "IEditor.setPosition"
									}
								},
								{
									"id": 3955,
									"name": "setScrollLeft",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3956,
											"name": "setScrollLeft",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the scrollLeft of the editor's viewport."
											},
											"parameters": [
												{
													"id": 3957,
													"name": "newScrollLeft",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 3958,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3963,
									"name": "setScrollPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3964,
											"name": "setScrollPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the scroll position of the editor's viewport."
											},
											"parameters": [
												{
													"id": 3965,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2289,
														"name": "INewScrollPosition"
													}
												},
												{
													"id": 3966,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3959,
									"name": "setScrollTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3960,
											"name": "setScrollTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the scrollTop of the editor's viewport."
											},
											"parameters": [
												{
													"id": 3961,
													"name": "newScrollTop",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 3962,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4121,
									"name": "setSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4122,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4123,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2399,
												"name": "IEditor.setSelection"
											}
										},
										{
											"id": 4124,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4125,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2401,
												"name": "IEditor.setSelection"
											}
										},
										{
											"id": 4126,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4127,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 480,
														"name": "ISelection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2403,
												"name": "IEditor.setSelection"
											}
										},
										{
											"id": 4128,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4129,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 485,
														"name": "Selection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2405,
												"name": "IEditor.setSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2398,
										"name": "IEditor.setSelection"
									}
								},
								{
									"id": 4130,
									"name": "setSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4131,
											"name": "setSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the selections for all the cursors of the editor.\nCursors will be removed or added, as necessary."
											},
											"parameters": [
												{
													"id": 4132,
													"name": "selections",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 480,
																"name": "ISelection"
															}
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2408,
												"name": "IEditor.setSelections"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2407,
										"name": "IEditor.setSelections"
									}
								},
								{
									"id": 3940,
									"name": "setValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3941,
											"name": "setValue",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the value of the current model attached to this editor.",
												"tags": [
													{
														"tag": "see",
														"text": "`ITextModel.setValue`\n"
													}
												]
											},
											"parameters": [
												{
													"id": 3942,
													"name": "newValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4177,
									"name": "trigger",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4178,
											"name": "trigger",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Directly trigger a handler or an editor action."
											},
											"parameters": [
												{
													"id": 4179,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4180,
													"name": "handlerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The id of the handler or the id of a contribution."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4181,
													"name": "payload",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Extra data to be sent to the handler.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2455,
												"name": "IEditor.trigger"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2454,
										"name": "IEditor.trigger"
									}
								},
								{
									"id": 4065,
									"name": "updateOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4066,
											"name": "updateOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Update the editor's options after the editor has been created."
											},
											"parameters": [
												{
													"id": 4067,
													"name": "newOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2534,
														"name": "IEditorOptions"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2338,
												"name": "IEditor.updateOptions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2337,
										"name": "IEditor.updateOptions"
									}
								}
							],
							"groups": [
								{
									"title": "Events",
									"kind": 8388608,
									"children": [
										3734,
										3711,
										3686,
										3696,
										3651,
										3657,
										3663,
										3669,
										3627,
										3675,
										3633,
										3639,
										3645,
										3770,
										4054,
										3681,
										3691,
										3764,
										3716,
										3776,
										3758,
										3752,
										3728,
										3746,
										3740,
										3722
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4009,
										4018,
										4051,
										4027,
										3990,
										4059,
										3970,
										3983,
										3978,
										4071,
										3967,
										4005,
										3949,
										3943,
										3789,
										4007,
										4063,
										4061,
										3994,
										3987,
										3793,
										4033,
										3800,
										3798,
										4080,
										3932,
										3951,
										3947,
										3953,
										3945,
										4044,
										4117,
										4119,
										4075,
										4040,
										3998,
										4001,
										3934,
										4077,
										3996,
										4073,
										3787,
										4068,
										4012,
										4021,
										3706,
										3701,
										3976,
										3974,
										4015,
										4024,
										4037,
										3784,
										4085,
										4089,
										4093,
										4097,
										4133,
										4138,
										4143,
										4148,
										4101,
										4105,
										4109,
										4113,
										4153,
										4161,
										4157,
										4165,
										4169,
										4173,
										3782,
										3795,
										4082,
										3955,
										3963,
										3959,
										4121,
										4130,
										3940,
										4177,
										4065
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4560,
									"character": 32
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 2325,
									"name": "IEditor"
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 1101,
									"name": "IStandaloneCodeEditor"
								}
							]
						},
						{
							"id": 2311,
							"name": "ICodeEditorViewState",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A (serializable) state of the code editor."
							},
							"children": [
								{
									"id": 2314,
									"name": "contributionsState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2158,
											"character": 26
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2315,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 2316,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 2317,
														"name": "id",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 2312,
									"name": "cursorState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2156,
											"character": 19
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2301,
											"name": "ICursorState"
										}
									}
								},
								{
									"id": 2313,
									"name": "viewState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2157,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 2305,
										"name": "IViewState"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2314,
										2312,
										2313
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2155,
									"character": 41
								}
							]
						},
						{
							"id": 1895,
							"name": "IColorizerElementOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1897,
									"name": "mimeType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1296,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1898,
									"name": "tabSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1291,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1894,
										"name": "IColorizerOptions.tabSize"
									}
								},
								{
									"id": 1896,
									"name": "theme",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1295,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1897,
										1898,
										1896
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1294,
									"character": 45
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 1893,
									"name": "IColorizerOptions"
								}
							]
						},
						{
							"id": 1893,
							"name": "IColorizerOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1894,
									"name": "tabSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1291,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1894
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1290,
									"character": 38
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 1895,
									"name": "IColorizerElementOptions"
								}
							]
						},
						{
							"id": 2246,
							"name": "ICommand",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A command that modifies text / cursor state on a model."
							},
							"children": [
								{
									"id": 2251,
									"name": "computeCursorState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2252,
											"name": "computeCursorState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Compute the cursor state after the edit operations were applied.",
												"returns": "The cursor state after the command executed.\n"
											},
											"parameters": [
												{
													"id": 2253,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The model the command has executed on."
													},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 2254,
													"name": "helper",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A helper to get inverse edit operations and to get previously tracked selections."
													},
													"type": {
														"type": "reference",
														"id": 2240,
														"name": "ICursorStateComputerData"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 485,
												"name": "Selection"
											}
										}
									]
								},
								{
									"id": 2247,
									"name": "getEditOperations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2248,
											"name": "getEditOperations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the edit operations needed to execute this command."
											},
											"parameters": [
												{
													"id": 2249,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The model the command will execute on."
													},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 2250,
													"name": "builder",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A helper to collect the needed edit operations and to track selections.\n"
													},
													"type": {
														"type": "reference",
														"id": 2225,
														"name": "IEditOperationBuilder"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2251,
										2247
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2032,
									"character": 29
								}
							]
						},
						{
							"id": 1841,
							"name": "ICommandHandler",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1227,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 1842,
									"name": "ICommandHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1843,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2794,
							"name": "IComputedEditorOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "All computed editor options."
							},
							"children": [
								{
									"id": 2795,
									"name": "get",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2796,
											"name": "get",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 2797,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3146,
														"name": "EditorOption"
													}
												}
											],
											"parameters": [
												{
													"id": 2798,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3405,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 3403,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"name": "T"
																		}
																	],
																	"name": "FindEditorOptionsKeyById"
																},
																"objectType": {
																	"type": "reflection",
																	"declaration": {
																		"id": 2799,
																		"name": "__type",
																		"kind": 65536,
																		"kindString": "Type literal",
																		"flags": {},
																		"children": [
																			{
																				"id": 2800,
																				"name": "acceptSuggestionOnCommitCharacter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4083,
																						"character": 41
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3147,
																							"name": "acceptSuggestionOnCommitCharacter"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2801,
																				"name": "acceptSuggestionOnEnter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4084,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3148,
																							"name": "acceptSuggestionOnEnter"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "smart"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2803,
																				"name": "accessibilityPageSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4086,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3150,
																							"name": "accessibilityPageSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2802,
																				"name": "accessibilitySupport",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4085,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3149,
																							"name": "accessibilitySupport"
																						},
																						{
																							"type": "reference",
																							"id": 2521,
																							"name": "AccessibilitySupport"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2804,
																				"name": "ariaLabel",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4087,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3151,
																							"name": "ariaLabel"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2805,
																				"name": "autoClosingBrackets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4088,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3152,
																							"name": "autoClosingBrackets"
																						},
																						{
																							"type": "reference",
																							"id": 2525,
																							"name": "EditorAutoClosingStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2806,
																				"name": "autoClosingOvertype",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4089,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3153,
																							"name": "autoClosingOvertype"
																						},
																						{
																							"type": "reference",
																							"id": 2527,
																							"name": "EditorAutoClosingOvertypeStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2807,
																				"name": "autoClosingQuotes",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4090,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3154,
																							"name": "autoClosingQuotes"
																						},
																						{
																							"type": "reference",
																							"id": 2525,
																							"name": "EditorAutoClosingStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2808,
																				"name": "autoIndent",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4091,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3155,
																							"name": "autoIndent"
																						},
																						{
																							"type": "reference",
																							"id": 2528,
																							"name": "EditorAutoIndentStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2810,
																				"name": "autoSurround",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4093,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3157,
																							"name": "autoSurround"
																						},
																						{
																							"type": "reference",
																							"id": 2526,
																							"name": "EditorAutoSurroundStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2809,
																				"name": "automaticLayout",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4092,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3156,
																							"name": "automaticLayout"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2812,
																				"name": "codeLens",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4095,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3158,
																							"name": "codeLens"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2813,
																				"name": "codeLensFontFamily",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4096,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3159,
																							"name": "codeLensFontFamily"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2814,
																				"name": "codeLensFontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4097,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3160,
																							"name": "codeLensFontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2815,
																				"name": "colorDecorators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4098,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3161,
																							"name": "colorDecorators"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2816,
																				"name": "columnSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4099,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3162,
																							"name": "columnSelection"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2817,
																				"name": "comments",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4100,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3163,
																							"name": "comments"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2933,
																											"name": "IEditorCommentsOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2818,
																				"name": "contextmenu",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4101,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3164,
																							"name": "contextmenu"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2819,
																				"name": "copyWithSyntaxHighlighting",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4102,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3165,
																							"name": "copyWithSyntaxHighlighting"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2820,
																				"name": "cursorBlinking",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4103,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3166,
																							"name": "cursorBlinking"
																						},
																						{
																							"type": "reference",
																							"id": 2937,
																							"name": "TextEditorCursorBlinkingStyle"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2821,
																				"name": "cursorSmoothCaretAnimation",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4104,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3167,
																							"name": "cursorSmoothCaretAnimation"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2822,
																				"name": "cursorStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4105,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3168,
																							"name": "cursorStyle"
																						},
																						{
																							"type": "reference",
																							"id": 2944,
																							"name": "TextEditorCursorStyle"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2823,
																				"name": "cursorSurroundingLines",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4106,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3169,
																							"name": "cursorSurroundingLines"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2824,
																				"name": "cursorSurroundingLinesStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4107,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3170,
																							"name": "cursorSurroundingLinesStyle"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "default"
																								},
																								{
																									"type": "literal",
																									"value": "all"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2825,
																				"name": "cursorWidth",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4108,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3171,
																							"name": "cursorWidth"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2873,
																				"name": "definitionLinkOpensInPeek",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4156,
																						"character": 33
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3219,
																							"name": "definitionLinkOpensInPeek"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2826,
																				"name": "disableLayerHinting",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4109,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3172,
																							"name": "disableLayerHinting"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2827,
																				"name": "disableMonospaceOptimizations",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4110,
																						"character": 37
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3173,
																							"name": "disableMonospaceOptimizations"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2828,
																				"name": "dragAndDrop",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4111,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3174,
																							"name": "dragAndDrop"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2922,
																				"name": "editorClassName",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4204,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3268,
																							"name": "editorClassName"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2829,
																				"name": "emptySelectionClipboard",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4112,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3175,
																							"name": "emptySelectionClipboard"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2830,
																				"name": "extraEditorClassName",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4113,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3176,
																							"name": "extraEditorClassName"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2831,
																				"name": "fastScrollSensitivity",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4114,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3177,
																							"name": "fastScrollSensitivity"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2832,
																				"name": "find",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4115,
																						"character": 12
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3178,
																							"name": "find"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2951,
																											"name": "IEditorFindOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2833,
																				"name": "fixedOverflowWidgets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4116,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3179,
																							"name": "fixedOverflowWidgets"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2834,
																				"name": "folding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4117,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3180,
																							"name": "folding"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2836,
																				"name": "foldingHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4119,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3182,
																							"name": "foldingHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2835,
																				"name": "foldingStrategy",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4118,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3181,
																							"name": "foldingStrategy"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "auto"
																								},
																								{
																									"type": "literal",
																									"value": "indentation"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2838,
																				"name": "fontFamily",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4121,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3184,
																							"name": "fontFamily"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2839,
																				"name": "fontInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4122,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3185,
																							"name": "fontInfo"
																						},
																						{
																							"type": "reference",
																							"id": 4342,
																							"name": "FontInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2840,
																				"name": "fontLigatures2",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4123,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3186,
																							"name": "fontLigatures"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2841,
																				"name": "fontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4124,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3187,
																							"name": "fontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2842,
																				"name": "fontWeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4125,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3188,
																							"name": "fontWeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2843,
																				"name": "formatOnPaste",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4126,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3189,
																							"name": "formatOnPaste"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2844,
																				"name": "formatOnType",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4127,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3190,
																							"name": "formatOnType"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2845,
																				"name": "glyphMargin",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4128,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3191,
																							"name": "glyphMargin"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2846,
																				"name": "gotoLocation",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4129,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3192,
																							"name": "gotoLocation"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2959,
																											"name": "IGotoLocationOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2847,
																				"name": "hideCursorInOverviewRuler",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4130,
																						"character": 33
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3193,
																							"name": "hideCursorInOverviewRuler"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2848,
																				"name": "highlightActiveIndentGuide",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4131,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3194,
																							"name": "highlightActiveIndentGuide"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2849,
																				"name": "hover",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4132,
																						"character": 13
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3195,
																							"name": "hover"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2972,
																											"name": "IEditorHoverOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2850,
																				"name": "inDiffEditor",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4133,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3196,
																							"name": "inDiffEditor"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2899,
																				"name": "inlineHints",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4181,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3267,
																							"name": "inlineHints"
																						},
																						{
																							"type": "intrinsic",
																							"name": "any"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2925,
																				"name": "layoutInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4207,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3271,
																							"name": "layoutInfo"
																						},
																						{
																							"type": "reference",
																							"id": 2986,
																							"name": "EditorLayoutInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2851,
																				"name": "letterSpacing",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4134,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3197,
																							"name": "letterSpacing"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2852,
																				"name": "lightbulb",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4135,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3198,
																							"name": "lightbulb"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3017,
																											"name": "IEditorLightbulbOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2853,
																				"name": "lineDecorationsWidth",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4136,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3199,
																							"name": "lineDecorationsWidth"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "number"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2854,
																				"name": "lineHeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4137,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3200,
																							"name": "lineHeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2855,
																				"name": "lineNumbers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4138,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3201,
																							"name": "lineNumbers"
																						},
																						{
																							"type": "reference",
																							"id": 3059,
																							"name": "InternalEditorRenderLineNumbersOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2856,
																				"name": "lineNumbersMinChars",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4139,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3202,
																							"name": "lineNumbersMinChars"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2857,
																				"name": "linkedEditing",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4140,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3203,
																							"name": "linkedEditing"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2858,
																				"name": "links",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4141,
																						"character": 13
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3204,
																							"name": "links"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2859,
																				"name": "matchBrackets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4142,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3205,
																							"name": "matchBrackets"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "always"
																								},
																								{
																									"type": "literal",
																									"value": "never"
																								},
																								{
																									"type": "literal",
																									"value": "near"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2860,
																				"name": "minimap",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4143,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3206,
																							"name": "minimap"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3025,
																											"name": "IEditorMinimapOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2861,
																				"name": "mouseStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4144,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3207,
																							"name": "mouseStyle"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "default"
																								},
																								{
																									"type": "literal",
																									"value": "text"
																								},
																								{
																									"type": "literal",
																									"value": "copy"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2862,
																				"name": "mouseWheelScrollSensitivity",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4145,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3208,
																							"name": "mouseWheelScrollSensitivity"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2863,
																				"name": "mouseWheelZoom",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4146,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3209,
																							"name": "mouseWheelZoom"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2864,
																				"name": "multiCursorMergeOverlapping",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4147,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3210,
																							"name": "multiCursorMergeOverlapping"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2865,
																				"name": "multiCursorModifier",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4148,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3211,
																							"name": "multiCursorModifier"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "altKey"
																								},
																								{
																									"type": "literal",
																									"value": "metaKey"
																								},
																								{
																									"type": "literal",
																									"value": "ctrlKey"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2866,
																				"name": "multiCursorPaste",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4149,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3212,
																							"name": "multiCursorPaste"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "spread"
																								},
																								{
																									"type": "literal",
																									"value": "full"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2867,
																				"name": "occurrencesHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4150,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3213,
																							"name": "occurrencesHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2868,
																				"name": "overviewRulerBorder",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4151,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3214,
																							"name": "overviewRulerBorder"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2869,
																				"name": "overviewRulerLanes",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4152,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3215,
																							"name": "overviewRulerLanes"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2870,
																				"name": "padding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4153,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3216,
																							"name": "padding"
																						},
																						{
																							"type": "reference",
																							"id": 3037,
																							"name": "InternalEditorPaddingOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2871,
																				"name": "parameterHints",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4154,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3217,
																							"name": "parameterHints"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3040,
																											"name": "IEditorParameterHintOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2872,
																				"name": "peekWidgetDefaultFocus",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4155,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3218,
																							"name": "peekWidgetDefaultFocus"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "tree"
																								},
																								{
																									"type": "literal",
																									"value": "editor"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2923,
																				"name": "pixelRatio",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4205,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3269,
																							"name": "pixelRatio"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2874,
																				"name": "quickSuggestions",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4157,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3220,
																							"name": "quickSuggestions"
																						},
																						{
																							"type": "reference",
																							"id": 3048,
																							"name": "ValidQuickSuggestionsOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2875,
																				"name": "quickSuggestionsDelay",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4158,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3221,
																							"name": "quickSuggestionsDelay"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2876,
																				"name": "readOnly",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4159,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3222,
																							"name": "readOnly"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2877,
																				"name": "renameOnType",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4160,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3223,
																							"name": "renameOnType"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2878,
																				"name": "renderControlCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4161,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3224,
																							"name": "renderControlCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2880,
																				"name": "renderFinalNewline",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4163,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3226,
																							"name": "renderFinalNewline"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2879,
																				"name": "renderIndentGuides",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4162,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3225,
																							"name": "renderIndentGuides"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2881,
																				"name": "renderLineHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4164,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3227,
																							"name": "renderLineHighlight"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "all"
																								},
																								{
																									"type": "literal",
																									"value": "line"
																								},
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "gutter"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2882,
																				"name": "renderLineHighlightOnlyWhenFocus",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4165,
																						"character": 40
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3228,
																							"name": "renderLineHighlightOnlyWhenFocus"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2883,
																				"name": "renderValidationDecorations",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4166,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3229,
																							"name": "renderValidationDecorations"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "editable"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2884,
																				"name": "renderWhitespace",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4167,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3230,
																							"name": "renderWhitespace"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "all"
																								},
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "boundary"
																								},
																								{
																									"type": "literal",
																									"value": "selection"
																								},
																								{
																									"type": "literal",
																									"value": "trailing"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2885,
																				"name": "revealHorizontalRightPadding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4168,
																						"character": 36
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3231,
																							"name": "revealHorizontalRightPadding"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2886,
																				"name": "roundedSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4169,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3232,
																							"name": "roundedSelection"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2887,
																				"name": "rulers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4170,
																						"character": 14
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3233,
																							"name": "rulers"
																						},
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 2888,
																								"name": "__type",
																								"kind": 65536,
																								"kindString": "Type literal",
																								"flags": {}
																							}
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2890,
																				"name": "scrollBeyondLastColumn",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4172,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3235,
																							"name": "scrollBeyondLastColumn"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2891,
																				"name": "scrollBeyondLastLine",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4173,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3236,
																							"name": "scrollBeyondLastLine"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2892,
																				"name": "scrollPredominantAxis",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4174,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3237,
																							"name": "scrollPredominantAxis"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2889,
																				"name": "scrollbar",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4171,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3234,
																							"name": "scrollbar"
																						},
																						{
																							"type": "reference",
																							"id": 3082,
																							"name": "InternalEditorScrollbarOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2895,
																				"name": "selectOnLineNumbers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4177,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3240,
																							"name": "selectOnLineNumbers"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2893,
																				"name": "selectionClipboard",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4175,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3238,
																							"name": "selectionClipboard"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2894,
																				"name": "selectionHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4176,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3239,
																							"name": "selectionHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2898,
																				"name": "showDeprecated",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4180,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3266,
																							"name": "showDeprecated"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2896,
																				"name": "showFoldingControls",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4178,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3241,
																							"name": "showFoldingControls"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "always"
																								},
																								{
																									"type": "literal",
																									"value": "mouseover"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2897,
																				"name": "showUnused",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4179,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3242,
																							"name": "showUnused"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2901,
																				"name": "smartSelect",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4183,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3244,
																							"name": "smartSelect"
																						},
																						{
																							"type": "intrinsic",
																							"name": "any"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2902,
																				"name": "smoothScrolling",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4184,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3245,
																							"name": "smoothScrolling"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2900,
																				"name": "snippetSuggestions",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4182,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3243,
																							"name": "snippetSuggestions"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "top"
																								},
																								{
																									"type": "literal",
																									"value": "bottom"
																								},
																								{
																									"type": "literal",
																									"value": "inline"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2811,
																				"name": "stickyTabStops",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4094,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3246,
																							"name": "stickyTabStops"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2903,
																				"name": "stopRenderingLineAfter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4185,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3247,
																							"name": "stopRenderingLineAfter"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2904,
																				"name": "suggest",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4186,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3248,
																							"name": "suggest"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3096,
																											"name": "ISuggestOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2905,
																				"name": "suggestFontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4187,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3249,
																							"name": "suggestFontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2906,
																				"name": "suggestLineHeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4188,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3250,
																							"name": "suggestLineHeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2907,
																				"name": "suggestOnTriggerCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4189,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3251,
																							"name": "suggestOnTriggerCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2908,
																				"name": "suggestSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4190,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3252,
																							"name": "suggestSelection"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "first"
																								},
																								{
																									"type": "literal",
																									"value": "recentlyUsed"
																								},
																								{
																									"type": "literal",
																									"value": "recentlyUsedByPrefix"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2909,
																				"name": "tabCompletion",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4191,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3253,
																							"name": "tabCompletion"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "onlySnippets"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2924,
																				"name": "tabFocusMode",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4206,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3270,
																							"name": "tabFocusMode"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2910,
																				"name": "tabIndex",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4192,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3254,
																							"name": "tabIndex"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2837,
																				"name": "unfoldOnClickAfterEndOfLine",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4120,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3183,
																							"name": "unfoldOnClickAfterEndOfLine"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2911,
																				"name": "unusualLineTerminators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4193,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3255,
																							"name": "unusualLineTerminators"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "auto"
																								},
																								{
																									"type": "literal",
																									"value": "prompt"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2912,
																				"name": "useTabStops",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4194,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3256,
																							"name": "useTabStops"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2913,
																				"name": "wordSeparators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4195,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3257,
																							"name": "wordSeparators"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2914,
																				"name": "wordWrap",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4196,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3258,
																							"name": "wordWrap"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "wordWrapColumn"
																								},
																								{
																									"type": "literal",
																									"value": "bounded"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2915,
																				"name": "wordWrapBreakAfterCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4197,
																						"character": 36
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3259,
																							"name": "wordWrapBreakAfterCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2916,
																				"name": "wordWrapBreakBeforeCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4198,
																						"character": 37
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3260,
																							"name": "wordWrapBreakBeforeCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2917,
																				"name": "wordWrapColumn",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4199,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3261,
																							"name": "wordWrapColumn"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2918,
																				"name": "wordWrapOverride1",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4200,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3262,
																							"name": "wordWrapOverride1"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "inherit"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2919,
																				"name": "wordWrapOverride2",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4201,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3263,
																							"name": "wordWrapOverride2"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "inherit"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2920,
																				"name": "wrappingIndent",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4202,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3264,
																							"name": "wrappingIndent"
																						},
																						{
																							"type": "reference",
																							"id": 3136,
																							"name": "WrappingIndent"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2926,
																				"name": "wrappingInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4208,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3272,
																							"name": "wrappingInfo"
																						},
																						{
																							"type": "reference",
																							"id": 3141,
																							"name": "EditorWrappingInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 2921,
																				"name": "wrappingStrategy",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4203,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3265,
																							"name": "wrappingStrategy"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "simple"
																								},
																								{
																									"type": "literal",
																									"value": "advanced"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"kind": 1024,
																				"children": [
																					2800,
																					2801,
																					2803,
																					2802,
																					2804,
																					2805,
																					2806,
																					2807,
																					2808,
																					2810,
																					2809,
																					2812,
																					2813,
																					2814,
																					2815,
																					2816,
																					2817,
																					2818,
																					2819,
																					2820,
																					2821,
																					2822,
																					2823,
																					2824,
																					2825,
																					2873,
																					2826,
																					2827,
																					2828,
																					2922,
																					2829,
																					2830,
																					2831,
																					2832,
																					2833,
																					2834,
																					2836,
																					2835,
																					2838,
																					2839,
																					2840,
																					2841,
																					2842,
																					2843,
																					2844,
																					2845,
																					2846,
																					2847,
																					2848,
																					2849,
																					2850,
																					2899,
																					2925,
																					2851,
																					2852,
																					2853,
																					2854,
																					2855,
																					2856,
																					2857,
																					2858,
																					2859,
																					2860,
																					2861,
																					2862,
																					2863,
																					2864,
																					2865,
																					2866,
																					2867,
																					2868,
																					2869,
																					2870,
																					2871,
																					2872,
																					2923,
																					2874,
																					2875,
																					2876,
																					2877,
																					2878,
																					2880,
																					2879,
																					2881,
																					2882,
																					2883,
																					2884,
																					2885,
																					2886,
																					2887,
																					2890,
																					2891,
																					2892,
																					2889,
																					2895,
																					2893,
																					2894,
																					2898,
																					2896,
																					2897,
																					2901,
																					2902,
																					2900,
																					2811,
																					2903,
																					2904,
																					2905,
																					2906,
																					2907,
																					2908,
																					2909,
																					2924,
																					2910,
																					2837,
																					2911,
																					2912,
																					2913,
																					2914,
																					2915,
																					2916,
																					2917,
																					2918,
																					2919,
																					2920,
																					2926,
																					2921
																				]
																			}
																		]
																	}
																}
															}
														],
														"name": "ComputedEditorOptionValue"
													}
												],
												"name": "NonNullable"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2795
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3267,
									"character": 43
								}
							]
						},
						{
							"id": 2284,
							"name": "IContentSizeChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 2286,
									"name": "contentHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2110,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2288,
									"name": "contentHeightChanged",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2112,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2285,
									"name": "contentWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2109,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2287,
									"name": "contentWidthChanged",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2111,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2286,
										2288,
										2285,
										2287
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2108,
									"character": 45
								}
							]
						},
						{
							"id": 3444,
							"name": "IContentWidget",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A content widget renders inline with the text and can be easily placed 'near' an editor position."
							},
							"children": [
								{
									"id": 3445,
									"name": "allowEditorOverflow",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render this content widget in a location where it could overflow the editor's view dom node."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4344,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3446,
									"name": "suppressMouseDown",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4345,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3455,
									"name": "afterRender",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 3456,
											"name": "afterRender",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Optional function that is invoked after rendering the content\nwidget. Is being invoked with the selected position preference\nor `null` if not rendered."
											},
											"parameters": [
												{
													"id": 3457,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3436,
														"name": "ContentWidgetPositionPreference"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3453,
									"name": "beforeRender",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 3454,
											"name": "beforeRender",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Optional function that is invoked before rendering\nthe content widget. If a dimension is returned the editor will\nattempt to use it."
											},
											"type": {
												"type": "reference",
												"id": 2261,
												"name": "IDimension"
											}
										}
									]
								},
								{
									"id": 3449,
									"name": "getDomNode",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3450,
											"name": "getDomNode",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the dom node of the content widget."
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									]
								},
								{
									"id": 3447,
									"name": "getId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3448,
											"name": "getId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a unique identifier of the content widget."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 3451,
									"name": "getPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3452,
											"name": "getPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the placement of the content widget.\nIf null is returned, the content widget will be placed off screen."
											},
											"type": {
												"type": "reference",
												"id": 3440,
												"name": "IContentWidgetPosition"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3445,
										3446
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										3455,
										3453,
										3449,
										3447,
										3451
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4340,
									"character": 35
								}
							]
						},
						{
							"id": 3440,
							"name": "IContentWidgetPosition",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A position for rendering content widgets."
							},
							"children": [
								{
									"id": 3441,
									"name": "position",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Desired position for the content widget.\n`preference` will also affect the placement."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4325,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 308,
										"name": "IPosition"
									}
								},
								{
									"id": 3443,
									"name": "preference",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Placement preference for position, in order of preference."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4334,
											"character": 18
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3436,
											"name": "ContentWidgetPositionPreference"
										}
									}
								},
								{
									"id": 3442,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Optionally, a range can be provided to further\ndefine the position of the content widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4330,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3441,
										3443,
										3442
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4320,
									"character": 43
								}
							]
						},
						{
							"id": 1844,
							"name": "IContextKey",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1850,
									"name": "get",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1851,
											"name": "get",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									]
								},
								{
									"id": 1848,
									"name": "reset",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1849,
											"name": "reset",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 1845,
									"name": "set",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1846,
											"name": "set",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1847,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1850,
										1848,
										1845
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1231,
									"character": 32
								}
							],
							"typeParameter": [
								{
									"id": 1852,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							]
						},
						{
							"id": 2508,
							"name": "ICursorPositionChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An event describing that the cursor position has changed."
							},
							"children": [
								{
									"id": 2509,
									"name": "position",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Primary cursor's position."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2528,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								},
								{
									"id": 2511,
									"name": "reason",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Reason."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2536,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"id": 2500,
										"name": "CursorChangeReason"
									}
								},
								{
									"id": 2510,
									"name": "secondaryPositions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Secondary cursors' position."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2532,
											"character": 35
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 311,
											"name": "Position"
										}
									}
								},
								{
									"id": 2512,
									"name": "source",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Source of the call that caused the event."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2540,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2509,
										2511,
										2510,
										2512
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2524,
									"character": 48
								}
							]
						},
						{
							"id": 2513,
							"name": "ICursorSelectionChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An event describing that the cursor selection has changed."
							},
							"children": [
								{
									"id": 2516,
									"name": "modelVersionId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The model version id."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2558,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2518,
									"name": "oldModelVersionId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The model version id the that `oldSelections` refer to."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2566,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2517,
									"name": "oldSelections",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The old selections."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2562,
											"character": 30
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 485,
											"name": "Selection"
										}
									}
								},
								{
									"id": 2520,
									"name": "reason",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Reason."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2574,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"id": 2500,
										"name": "CursorChangeReason"
									}
								},
								{
									"id": 2515,
									"name": "secondarySelections",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The secondary selections."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2554,
											"character": 36
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 485,
											"name": "Selection"
										}
									}
								},
								{
									"id": 2514,
									"name": "selection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The primary selection."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2550,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"id": 485,
										"name": "Selection"
									}
								},
								{
									"id": 2519,
									"name": "source",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Source of the call that caused the event."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2570,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2516,
										2518,
										2517,
										2520,
										2515,
										2514,
										2519
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2546,
									"character": 49
								}
							]
						},
						{
							"id": 2301,
							"name": "ICursorState",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A (serializable) state of the cursors."
							},
							"children": [
								{
									"id": 2302,
									"name": "inSelectionMode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2134,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2304,
									"name": "position",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2136,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 308,
										"name": "IPosition"
									}
								},
								{
									"id": 2303,
									"name": "selectionStart",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2135,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 308,
										"name": "IPosition"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2302,
										2304,
										2303
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2133,
									"character": 33
								}
							]
						},
						{
							"id": 1974,
							"name": "ICursorStateComputer",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A callback that can compute the cursor state after applying a series of edit operations."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1587,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 1975,
									"name": "ICursorStateComputer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A callback that can compute the resulting cursors state after some edit operations have been executed."
									},
									"parameters": [
										{
											"id": 1976,
											"name": "inverseEditOperations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1971,
													"name": "IValidEditOperation"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 485,
											"name": "Selection"
										}
									}
								}
							]
						},
						{
							"id": 2240,
							"name": "ICursorStateComputerData",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A helper for computing cursor state after a command."
							},
							"children": [
								{
									"id": 2241,
									"name": "getInverseEditOperations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2242,
											"name": "getInverseEditOperations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the inverse edit operations of the added edit operations."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1971,
													"name": "IValidEditOperation"
												}
											}
										}
									]
								},
								{
									"id": 2243,
									"name": "getTrackedSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2244,
											"name": "getTrackedSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a previously tracked selection.",
												"returns": "The selection.\n"
											},
											"parameters": [
												{
													"id": 2245,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The unique identifier returned by `trackSelection`."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 485,
												"name": "Selection"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2241,
										2243
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2016,
									"character": 45
								}
							]
						},
						{
							"id": 1913,
							"name": "IDecorationOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1914,
									"name": "color",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "CSS color to render.\ne.g.: rgba(100, 100, 100, 0.5) or a color from the color registry"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1332,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1903,
												"name": "ThemeColor"
											}
										]
									}
								},
								{
									"id": 1915,
									"name": "darkColor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "CSS color to render.\ne.g.: rgba(100, 100, 100, 0.5) or a color from the color registry"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1337,
											"character": 17
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1903,
												"name": "ThemeColor"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1914,
										1915
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1327,
									"character": 39
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 1916,
									"name": "IModelDecorationOverviewRulerOptions"
								},
								{
									"type": "reference",
									"id": 1920,
									"name": "IModelDecorationMinimapOptions"
								}
							]
						},
						{
							"id": 4184,
							"name": "IDiffEditor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A rich diff editor."
							},
							"children": [
								{
									"id": 4217,
									"name": "onDidDispose",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 4218,
											"name": "onDidDispose",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the editor has been disposed."
											},
											"parameters": [
												{
													"id": 4219,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4220,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4221,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2327,
												"name": "IEditor.onDidDispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2326,
										"name": "IEditor.onDidDispose"
									}
								},
								{
									"id": 4187,
									"name": "onDidUpdateDiff",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 4188,
											"name": "onDidUpdateDiff",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the diff information computed by this diff editor has been updated."
											},
											"parameters": [
												{
													"id": 4189,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4190,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4191,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 4222,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4223,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Dispose the editor."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2332,
												"name": "IEditor.dispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2331,
										"name": "IEditor.dispose"
									}
								},
								{
									"id": 4231,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4232,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Brings browser focus to the editor text"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2344,
												"name": "IEditor.focus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2343,
										"name": "IEditor.focus"
									}
								},
								{
									"id": 4211,
									"name": "getDiffLineInformationForModified",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4212,
											"name": "getDiffLineInformationForModified",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get information based on computed diff about a line number from the modified model.\nIf the diff computation is not finished or the model is missing, will return null."
											},
											"parameters": [
												{
													"id": 4213,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4182,
												"name": "IDiffLineInformation"
											}
										}
									]
								},
								{
									"id": 4208,
									"name": "getDiffLineInformationForOriginal",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4209,
											"name": "getDiffLineInformationForOriginal",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get information based on computed diff about a line number from the original model.\nIf the diff computation is not finished or the model is missing, will return null."
											},
											"parameters": [
												{
													"id": 4210,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4182,
												"name": "IDiffLineInformation"
											}
										}
									]
								},
								{
									"id": 4185,
									"name": "getDomNode",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4186,
											"name": "getDomNode",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"tags": [
													{
														"tag": "see",
														"text": "ICodeEditor.getDomNode\n"
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									]
								},
								{
									"id": 4226,
									"name": "getEditorType",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4227,
											"name": "getEditorType",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the editor type. Please see `EditorType`.\nThis is to avoid an instanceof check"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2336,
												"name": "IEditor.getEditorType"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "IEditor.getEditorType"
									}
								},
								{
									"id": 4224,
									"name": "getId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4225,
											"name": "getId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a unique id for this editor instance."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2334,
												"name": "IEditor.getId"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "IEditor.getId"
									}
								},
								{
									"id": 4206,
									"name": "getLineChanges",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4207,
											"name": "getLineChanges",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the computed diff information."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2278,
													"name": "ILineChange"
												}
											}
										}
									]
								},
								{
									"id": 4197,
									"name": "getModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4198,
											"name": "getModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Type the getModel() of IEditor."
											},
											"type": {
												"type": "reference",
												"id": 2255,
												"name": "IDiffEditorModel"
											},
											"overwrites": {
												"type": "reference",
												"id": 2460,
												"name": "IEditor.getModel"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2459,
										"name": "IEditor.getModel"
									}
								},
								{
									"id": 4204,
									"name": "getModifiedEditor",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4205,
											"name": "getModifiedEditor",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the `modified` editor."
											},
											"type": {
												"type": "reference",
												"id": 3626,
												"name": "ICodeEditor"
											}
										}
									]
								},
								{
									"id": 4202,
									"name": "getOriginalEditor",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4203,
											"name": "getOriginalEditor",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the `original` editor."
											},
											"type": {
												"type": "reference",
												"id": 3626,
												"name": "ICodeEditor"
											}
										}
									]
								},
								{
									"id": 4240,
									"name": "getPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4241,
											"name": "getPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary position of the cursor."
											},
											"type": {
												"type": "reference",
												"id": 311,
												"name": "Position"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2358,
												"name": "IEditor.getPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2357,
										"name": "IEditor.getPosition"
									}
								},
								{
									"id": 4277,
									"name": "getSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4278,
											"name": "getSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary selection of the editor."
											},
											"type": {
												"type": "reference",
												"id": 485,
												"name": "Selection"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2395,
												"name": "IEditor.getSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2394,
										"name": "IEditor.getSelection"
									}
								},
								{
									"id": 4279,
									"name": "getSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4280,
											"name": "getSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all the selections of the editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 485,
													"name": "Selection"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2397,
												"name": "IEditor.getSelections"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2396,
										"name": "IEditor.getSelections"
									}
								},
								{
									"id": 4235,
									"name": "getSupportedActions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4236,
											"name": "getSupportedActions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all actions associated with this editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2292,
													"name": "IEditorAction"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2348,
												"name": "IEditor.getSupportedActions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "IEditor.getSupportedActions"
									}
								},
								{
									"id": 4237,
									"name": "getVisibleColumnFromPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4238,
											"name": "getVisibleColumnFromPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Given a position, returns a column number that takes tab-widths into account."
											},
											"parameters": [
												{
													"id": 4239,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2355,
												"name": "IEditor.getVisibleColumnFromPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2354,
										"name": "IEditor.getVisibleColumnFromPosition"
									}
								},
								{
									"id": 4233,
									"name": "hasTextFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4234,
											"name": "hasTextFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns true if the text inside this editor is focused (i.e. cursor is blinking)."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2346,
												"name": "IEditor.hasTextFocus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "IEditor.hasTextFocus"
									}
								},
								{
									"id": 4228,
									"name": "layout",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4229,
											"name": "layout",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Instructs the editor to remeasure its container. This method should\nbe called when the container of the editor gets resized.",
												"text": "If a dimension is passed in, the passed in value will be used.\n"
											},
											"parameters": [
												{
													"id": 4230,
													"name": "dimension",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2261,
														"name": "IDimension"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2341,
												"name": "IEditor.layout"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2340,
										"name": "IEditor.layout"
									}
								},
								{
									"id": 4194,
									"name": "restoreViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4195,
											"name": "restoreViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Restores the view state of the editor from a serializable object generated by `saveViewState`."
											},
											"parameters": [
												{
													"id": 4196,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2318,
														"name": "IDiffEditorViewState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"id": 2352,
												"name": "IEditor.restoreViewState"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2351,
										"name": "IEditor.restoreViewState"
									}
								},
								{
									"id": 4245,
									"name": "revealLine",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4246,
											"name": "revealLine",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line."
											},
											"parameters": [
												{
													"id": 4247,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4248,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2363,
												"name": "IEditor.revealLine"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2362,
										"name": "IEditor.revealLine"
									}
								},
								{
									"id": 4249,
									"name": "revealLineInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4250,
											"name": "revealLineInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically."
											},
											"parameters": [
												{
													"id": 4251,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4252,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2367,
												"name": "IEditor.revealLineInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2366,
										"name": "IEditor.revealLineInCenter"
									}
								},
								{
									"id": 4253,
									"name": "revealLineInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4254,
											"name": "revealLineInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4255,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4256,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2371,
												"name": "IEditor.revealLineInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2370,
										"name": "IEditor.revealLineInCenterIfOutsideViewport"
									}
								},
								{
									"id": 4257,
									"name": "revealLineNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4258,
											"name": "revealLineNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 4259,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4260,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2375,
												"name": "IEditor.revealLineNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2374,
										"name": "IEditor.revealLineNearTop"
									}
								},
								{
									"id": 4293,
									"name": "revealLines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4294,
											"name": "revealLines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines."
											},
											"parameters": [
												{
													"id": 4295,
													"name": "startLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4296,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4297,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2411,
												"name": "IEditor.revealLines"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2410,
										"name": "IEditor.revealLines"
									}
								},
								{
									"id": 4298,
									"name": "revealLinesInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4299,
											"name": "revealLinesInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically."
											},
											"parameters": [
												{
													"id": 4300,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4301,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4302,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2416,
												"name": "IEditor.revealLinesInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2415,
										"name": "IEditor.revealLinesInCenter"
									}
								},
								{
									"id": 4303,
									"name": "revealLinesInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4304,
											"name": "revealLinesInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4305,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4306,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4307,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2421,
												"name": "IEditor.revealLinesInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2420,
										"name": "IEditor.revealLinesInCenterIfOutsideViewport"
									}
								},
								{
									"id": 4308,
									"name": "revealLinesNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4309,
											"name": "revealLinesNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 4310,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4311,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4312,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2426,
												"name": "IEditor.revealLinesNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2425,
										"name": "IEditor.revealLinesNearTop"
									}
								},
								{
									"id": 4261,
									"name": "revealPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4262,
											"name": "revealPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position."
											},
											"parameters": [
												{
													"id": 4263,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 4264,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2379,
												"name": "IEditor.revealPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2378,
										"name": "IEditor.revealPosition"
									}
								},
								{
									"id": 4265,
									"name": "revealPositionInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4266,
											"name": "revealPositionInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically."
											},
											"parameters": [
												{
													"id": 4267,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 4268,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2383,
												"name": "IEditor.revealPositionInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2382,
										"name": "IEditor.revealPositionInCenter"
									}
								},
								{
									"id": 4269,
									"name": "revealPositionInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4270,
											"name": "revealPositionInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4271,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 4272,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2387,
												"name": "IEditor.revealPositionInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2386,
										"name": "IEditor.revealPositionInCenterIfOutsideViewport"
									}
								},
								{
									"id": 4273,
									"name": "revealPositionNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4274,
											"name": "revealPositionNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 4275,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 4276,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2391,
												"name": "IEditor.revealPositionNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2390,
										"name": "IEditor.revealPositionNearTop"
									}
								},
								{
									"id": 4313,
									"name": "revealRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4314,
											"name": "revealRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range."
											},
											"parameters": [
												{
													"id": 4315,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4316,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2431,
												"name": "IEditor.revealRange"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2430,
										"name": "IEditor.revealRange"
									}
								},
								{
									"id": 4321,
									"name": "revealRangeAtTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4322,
											"name": "revealRangeAtTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range at the top of the viewport."
											},
											"parameters": [
												{
													"id": 4323,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4324,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2439,
												"name": "IEditor.revealRangeAtTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2438,
										"name": "IEditor.revealRangeAtTop"
									}
								},
								{
									"id": 4317,
									"name": "revealRangeInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4318,
											"name": "revealRangeInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically."
											},
											"parameters": [
												{
													"id": 4319,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4320,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2435,
												"name": "IEditor.revealRangeInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2434,
										"name": "IEditor.revealRangeInCenter"
									}
								},
								{
									"id": 4325,
									"name": "revealRangeInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4326,
											"name": "revealRangeInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4327,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4328,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2443,
												"name": "IEditor.revealRangeInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2442,
										"name": "IEditor.revealRangeInCenterIfOutsideViewport"
									}
								},
								{
									"id": 4329,
									"name": "revealRangeNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4330,
											"name": "revealRangeNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 4331,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4332,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2447,
												"name": "IEditor.revealRangeNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2446,
										"name": "IEditor.revealRangeNearTop"
									}
								},
								{
									"id": 4333,
									"name": "revealRangeNearTopIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4334,
											"name": "revealRangeNearTopIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition. Only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 4335,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 4336,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2451,
												"name": "IEditor.revealRangeNearTopIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2450,
										"name": "IEditor.revealRangeNearTopIfOutsideViewport"
									}
								},
								{
									"id": 4192,
									"name": "saveViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4193,
											"name": "saveViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Saves current view state of the editor in a serializable object."
											},
											"type": {
												"type": "reference",
												"id": 2318,
												"name": "IDiffEditorViewState"
											},
											"overwrites": {
												"type": "reference",
												"id": 2350,
												"name": "IEditor.saveViewState"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2349,
										"name": "IEditor.saveViewState"
									}
								},
								{
									"id": 4199,
									"name": "setModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4200,
											"name": "setModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the current model attached to this editor.\nIf the previous model was created by the editor via the value key in the options\nliteral object, it will be destroyed. Otherwise, if the previous model was set\nvia setModel, or the model key in the options literal object, the previous model\nwill not be destroyed.\nIt is safe to call setModel(null) to simply detach the current model from the editor."
											},
											"parameters": [
												{
													"id": 4201,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2255,
														"name": "IDiffEditorModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"id": 2462,
												"name": "IEditor.setModel"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2461,
										"name": "IEditor.setModel"
									}
								},
								{
									"id": 4242,
									"name": "setPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4243,
											"name": "setPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary position of the cursor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4244,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "New primary cursor's position\n"
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2360,
												"name": "IEditor.setPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2359,
										"name": "IEditor.setPosition"
									}
								},
								{
									"id": 4281,
									"name": "setSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4282,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4283,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2399,
												"name": "IEditor.setSelection"
											}
										},
										{
											"id": 4284,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4285,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2401,
												"name": "IEditor.setSelection"
											}
										},
										{
											"id": 4286,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4287,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 480,
														"name": "ISelection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2403,
												"name": "IEditor.setSelection"
											}
										},
										{
											"id": 4288,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 4289,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 485,
														"name": "Selection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2405,
												"name": "IEditor.setSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2398,
										"name": "IEditor.setSelection"
									}
								},
								{
									"id": 4290,
									"name": "setSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4291,
											"name": "setSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the selections for all the cursors of the editor.\nCursors will be removed or added, as necessary."
											},
											"parameters": [
												{
													"id": 4292,
													"name": "selections",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 480,
																"name": "ISelection"
															}
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2408,
												"name": "IEditor.setSelections"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2407,
										"name": "IEditor.setSelections"
									}
								},
								{
									"id": 4337,
									"name": "trigger",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4338,
											"name": "trigger",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Directly trigger a handler or an editor action."
											},
											"parameters": [
												{
													"id": 4339,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4340,
													"name": "handlerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The id of the handler or the id of a contribution."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4341,
													"name": "payload",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Extra data to be sent to the handler.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 2455,
												"name": "IEditor.trigger"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 2454,
										"name": "IEditor.trigger"
									}
								},
								{
									"id": 4214,
									"name": "updateOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4215,
											"name": "updateOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Update the editor's options after the editor has been created."
											},
											"parameters": [
												{
													"id": 4216,
													"name": "newOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2656,
														"name": "IDiffEditorOptions"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"id": 2338,
												"name": "IEditor.updateOptions"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 2337,
										"name": "IEditor.updateOptions"
									}
								}
							],
							"groups": [
								{
									"title": "Events",
									"kind": 8388608,
									"children": [
										4217,
										4187
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4222,
										4231,
										4211,
										4208,
										4185,
										4226,
										4224,
										4206,
										4197,
										4204,
										4202,
										4240,
										4277,
										4279,
										4235,
										4237,
										4233,
										4228,
										4194,
										4245,
										4249,
										4253,
										4257,
										4293,
										4298,
										4303,
										4308,
										4261,
										4265,
										4269,
										4273,
										4313,
										4321,
										4317,
										4325,
										4329,
										4333,
										4192,
										4199,
										4242,
										4281,
										4290,
										4337,
										4214
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4932,
									"character": 32
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 2325,
									"name": "IEditor"
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 1670,
									"name": "IStandaloneDiffEditor"
								}
							]
						},
						{
							"id": 966,
							"name": "IDiffEditorConstructionOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The options to create a diff editor."
							},
							"children": [
								{
									"id": 1063,
									"name": "acceptSuggestionOnCommitCharacter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on provider defined characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3032,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2750,
										"name": "IDiffEditorOptions.acceptSuggestionOnCommitCharacter"
									}
								},
								{
									"id": 1062,
									"name": "acceptSuggestionOnEnter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on ENTER.\nDefaults to 'on'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3027,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "smart"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2749,
										"name": "IDiffEditorOptions.acceptSuggestionOnEnter"
									}
								},
								{
									"id": 1044,
									"name": "accessibilityPageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the number of lines in the editor that can be read out by a screen reader"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2943,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2731,
										"name": "IDiffEditorOptions.accessibilityPageSize"
									}
								},
								{
									"id": 1043,
									"name": "accessibilitySupport",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's accessibility support.\nDefaults to 'auto'. It is best to leave this to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2939,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2730,
										"name": "IDiffEditorOptions.accessibilitySupport"
									}
								},
								{
									"id": 981,
									"name": "ariaLabel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The aria label for the editor's textarea (when it is focused)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2623,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2668,
										"name": "IDiffEditorOptions.ariaLabel"
									}
								},
								{
									"id": 1052,
									"name": "autoClosingBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing brackets.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2978,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2739,
										"name": "IDiffEditorOptions.autoClosingBrackets"
									}
								},
								{
									"id": 1054,
									"name": "autoClosingOvertype",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for typing over closing quotes or brackets."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2987,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2527,
										"name": "EditorAutoClosingOvertypeStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2741,
										"name": "IDiffEditorOptions.autoClosingOvertype"
									}
								},
								{
									"id": 1053,
									"name": "autoClosingQuotes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing quotes.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2983,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2740,
										"name": "IDiffEditorOptions.autoClosingQuotes"
									}
								},
								{
									"id": 1056,
									"name": "autoIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\nDefaults to advanced."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2997,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "advanced"
											},
											{
												"type": "literal",
												"value": "full"
											},
											{
												"type": "literal",
												"value": "brackets"
											},
											{
												"type": "literal",
												"value": "keep"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2743,
										"name": "IDiffEditorOptions.autoIndent"
									}
								},
								{
									"id": 1055,
									"name": "autoSurround",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto surrounding.\nDefaults to always allowing auto surrounding."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2992,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2526,
										"name": "EditorAutoSurroundStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2742,
										"name": "IDiffEditorOptions.autoSurround"
									}
								},
								{
									"id": 1021,
									"name": "automaticLayout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor will install an interval to check if its container dom node size has changed.\nEnabling this might have a severe performance impact.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2825,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2708,
										"name": "IDiffEditorOptions.automaticLayout"
									}
								},
								{
									"id": 1077,
									"name": "codeActionsOnSaveTimeout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Timeout for running code actions on save."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3093,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2764,
										"name": "IDiffEditorOptions.codeActionsOnSaveTimeout"
									}
								},
								{
									"id": 1073,
									"name": "codeLens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show code lens\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3077,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2760,
										"name": "IDiffEditorOptions.codeLens"
									}
								},
								{
									"id": 1074,
									"name": "codeLensFontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font family. Defaults to editor font family."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3081,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2761,
										"name": "IDiffEditorOptions.codeLensFontFamily"
									}
								},
								{
									"id": 1075,
									"name": "codeLensFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font size. Default to 90% of the editor font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3085,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2762,
										"name": "IDiffEditorOptions.codeLensFontSize"
									}
								},
								{
									"id": 1033,
									"name": "colorDecorators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable inline color decorators and color picker rendering."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2890,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2720,
										"name": "IDiffEditorOptions.colorDecorators"
									}
								},
								{
									"id": 1039,
									"name": "columnSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the selection with the mouse and keys is doing column selection.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2919,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2726,
										"name": "IDiffEditorOptions.columnSelection"
									}
								},
								{
									"id": 1034,
									"name": "comments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behaviour of comments in the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2894,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2933,
										"name": "IEditorCommentsOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2721,
										"name": "IDiffEditorOptions.comments"
									}
								},
								{
									"id": 1035,
									"name": "contextmenu",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable custom contextmenu.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2899,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2722,
										"name": "IDiffEditorOptions.contextmenu"
									}
								},
								{
									"id": 1066,
									"name": "copyWithSyntaxHighlighting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Syntax highlighting is copied."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3044,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2753,
										"name": "IDiffEditorOptions.copyWithSyntaxHighlighting"
									}
								},
								{
									"id": 1008,
									"name": "cursorBlinking",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\nDefaults to 'blink'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2759,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "blink"
											},
											{
												"type": "literal",
												"value": "smooth"
											},
											{
												"type": "literal",
												"value": "phase"
											},
											{
												"type": "literal",
												"value": "expand"
											},
											{
												"type": "literal",
												"value": "solid"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2695,
										"name": "IDiffEditorOptions.cursorBlinking"
									}
								},
								{
									"id": 1011,
									"name": "cursorSmoothCaretAnimation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable smooth caret animation.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2774,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2698,
										"name": "IDiffEditorOptions.cursorSmoothCaretAnimation"
									}
								},
								{
									"id": 1012,
									"name": "cursorStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor style, either 'block' or 'line'.\nDefaults to 'line'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2779,
											"character": 19
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "block"
											},
											{
												"type": "literal",
												"value": "underline"
											},
											{
												"type": "literal",
												"value": "line-thin"
											},
											{
												"type": "literal",
												"value": "block-outline"
											},
											{
												"type": "literal",
												"value": "underline-thin"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2699,
										"name": "IDiffEditorOptions.cursorStyle"
									}
								},
								{
									"id": 987,
									"name": "cursorSurroundingLines",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the minimal number of visible leading and trailing lines surrounding the cursor.\nDefaults to 0."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2655,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2674,
										"name": "IDiffEditorOptions.cursorSurroundingLines"
									}
								},
								{
									"id": 988,
									"name": "cursorSurroundingLinesStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls when `cursorSurroundingLines` should be enforced\nDefaults to `default`, `cursorSurroundingLines` is not enforced when cursor position is changed\nby mouse."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2661,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "all"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2675,
										"name": "IDiffEditorOptions.cursorSurroundingLinesStyle"
									}
								},
								{
									"id": 1013,
									"name": "cursorWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of the cursor when cursorStyle is set to 'line'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2783,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2700,
										"name": "IDiffEditorOptions.cursorWidth"
									}
								},
								{
									"id": 1098,
									"name": "definitionLinkOpensInPeek",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the definition link opens element in the peek widget.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3191,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2785,
										"name": "IDiffEditorOptions.definitionLinkOpensInPeek"
									}
								},
								{
									"id": 976,
									"name": "diffCodeLens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the diff editor enable code lens?\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3240,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2663,
										"name": "IDiffEditorOptions.diffCodeLens"
									}
								},
								{
									"id": 979,
									"name": "diffWordWrap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the diff editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3254,
											"character": 20
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2666,
										"name": "IDiffEditorOptions.diffWordWrap"
									}
								},
								{
									"id": 968,
									"name": "dimension",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The initial editor dimension (to avoid measuring the container)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4549,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 2261,
										"name": "IDimension"
									}
								},
								{
									"id": 1015,
									"name": "disableLayerHinting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers.\nThe usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2794,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2702,
										"name": "IDiffEditorOptions.disableLayerHinting"
									}
								},
								{
									"id": 1016,
									"name": "disableMonospaceOptimizations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the optimizations for monospace fonts.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2799,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2703,
										"name": "IDiffEditorOptions.disableMonospaceOptimizations"
									}
								},
								{
									"id": 1060,
									"name": "dragAndDrop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if the editor should allow to move selections via drag and drop.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3017,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2747,
										"name": "IDiffEditorOptions.dragAndDrop"
									}
								},
								{
									"id": 1065,
									"name": "emptySelectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Copying without a selection copies the current line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3040,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2752,
										"name": "IDiffEditorOptions.emptySelectionClipboard"
									}
								},
								{
									"id": 970,
									"name": "enableSplitViewResizing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Allow the user to resize the diff editor split view.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3210,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2657,
										"name": "IDiffEditorOptions.enableSplitViewResizing"
									}
								},
								{
									"id": 997,
									"name": "extraEditorClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Class name to be added to the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2708,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2684,
										"name": "IDiffEditorOptions.extraEditorClassName"
									}
								},
								{
									"id": 1037,
									"name": "fastScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "FastScrolling mulitplier speed when pressing `Alt`\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2909,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2724,
										"name": "IDiffEditorOptions.fastScrollSensitivity"
									}
								},
								{
									"id": 1004,
									"name": "find",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior of the find widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2739,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 2951,
										"name": "IEditorFindOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2691,
										"name": "IDiffEditorOptions.find"
									}
								},
								{
									"id": 1005,
									"name": "fixedOverflowWidgets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Display overflow widgets as `fixed`.\nDefaults to `false`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2744,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2692,
										"name": "IDiffEditorOptions.fixedOverflowWidgets"
									}
								},
								{
									"id": 1078,
									"name": "folding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable code folding.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3098,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2765,
										"name": "IDiffEditorOptions.folding"
									}
								},
								{
									"id": 1080,
									"name": "foldingHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlight for folded regions.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3108,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2767,
										"name": "IDiffEditorOptions.foldingHighlight"
									}
								},
								{
									"id": 1079,
									"name": "foldingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\nDefaults to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3103,
											"character": 23
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "indentation"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2766,
										"name": "IDiffEditorOptions.foldingStrategy"
									}
								},
								{
									"id": 1091,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font family"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3161,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2778,
										"name": "IDiffEditorOptions.fontFamily"
									}
								},
								{
									"id": 1014,
									"name": "fontLigatures",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable font ligatures.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2788,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2701,
										"name": "IDiffEditorOptions.fontLigatures"
									}
								},
								{
									"id": 1093,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3169,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2780,
										"name": "IDiffEditorOptions.fontSize"
									}
								},
								{
									"id": 1092,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font weight"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3165,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2779,
										"name": "IDiffEditorOptions.fontWeight"
									}
								},
								{
									"id": 1059,
									"name": "formatOnPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on paste.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3012,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2746,
										"name": "IDiffEditorOptions.formatOnPaste"
									}
								},
								{
									"id": 1058,
									"name": "formatOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on type.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3007,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2745,
										"name": "IDiffEditorOptions.formatOnType"
									}
								},
								{
									"id": 993,
									"name": "glyphMargin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the rendering of the glyph margin.\nDefaults to true in vscode and to false in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2686,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2680,
										"name": "IDiffEditorOptions.glyphMargin"
									}
								},
								{
									"id": 1047,
									"name": "gotoLocation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2955,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2959,
										"name": "IGotoLocationOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2734,
										"name": "IDiffEditorOptions.gotoLocation"
									}
								},
								{
									"id": 1017,
									"name": "hideCursorInOverviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the cursor be hidden in the overview ruler.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2804,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2704,
										"name": "IDiffEditorOptions.hideCursorInOverviewRuler"
									}
								},
								{
									"id": 1087,
									"name": "highlightActiveIndentGuide",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of the active indent guide.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3143,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2774,
										"name": "IDiffEditorOptions.highlightActiveIndentGuide"
									}
								},
								{
									"id": 1031,
									"name": "hover",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's hover."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2881,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 2972,
										"name": "IEditorHoverOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2718,
										"name": "IDiffEditorOptions.hover"
									}
								},
								{
									"id": 973,
									"name": "ignoreTrimWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Compute the diff by ignoring leading/trailing whitespace\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3225,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2660,
										"name": "IDiffEditorOptions.ignoreTrimWhitespace"
									}
								},
								{
									"id": 980,
									"name": "inDiffEditor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This editor is used inside a diff editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2619,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2667,
										"name": "IDiffEditorOptions.inDiffEditor"
									}
								},
								{
									"id": 1100,
									"name": "inlineHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the inline hints."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3199,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3020,
										"name": "IEditorInlineHintsOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2787,
										"name": "IDiffEditorOptions.inlineHints"
									}
								},
								{
									"id": 977,
									"name": "isInEmbeddedEditor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Is the diff editor inside another editor\nDefaults to false"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3245,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2664,
										"name": "IDiffEditorOptions.isInEmbeddedEditor"
									}
								},
								{
									"id": 1095,
									"name": "letterSpacing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The letter spacing"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3177,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2782,
										"name": "IDiffEditorOptions.letterSpacing"
									}
								},
								{
									"id": 1076,
									"name": "lightbulb",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the code action lightbulb."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3089,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3017,
										"name": "IEditorLightbulbOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2763,
										"name": "IDiffEditorOptions.lightbulb"
									}
								},
								{
									"id": 994,
									"name": "lineDecorationsWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width reserved for line decorations (in px).\nLine decorations are placed between line numbers and the editor content.\nYou can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\nDefaults to 10."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2693,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2681,
										"name": "IDiffEditorOptions.lineDecorationsWidth"
									}
								},
								{
									"id": 1094,
									"name": "lineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3173,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2781,
										"name": "IDiffEditorOptions.lineHeight"
									}
								},
								{
									"id": 986,
									"name": "lineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the rendering of line numbers.\nIf it is a function, it will be invoked when rendering a line number and the return value will be rendered.\nOtherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\nOtherwise, line numbers will not be rendered.\nDefaults to `on`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2650,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3049,
										"name": "LineNumbersType"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2673,
										"name": "IDiffEditorOptions.lineNumbers"
									}
								},
								{
									"id": 992,
									"name": "lineNumbersMinChars",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2681,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2679,
										"name": "IDiffEditorOptions.lineNumbersMinChars"
									}
								},
								{
									"id": 999,
									"name": "linkedEditing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable linked editing.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2718,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2686,
										"name": "IDiffEditorOptions.linkedEditing"
									}
								},
								{
									"id": 1032,
									"name": "links",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable detecting links and making them clickable.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2886,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2719,
										"name": "IDiffEditorOptions.links"
									}
								},
								{
									"id": 1083,
									"name": "matchBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of matching brackets.\nDefaults to 'always'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3123,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "never"
											},
											{
												"type": "literal",
												"value": "near"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2770,
										"name": "IDiffEditorOptions.matchBrackets"
									}
								},
								{
									"id": 972,
									"name": "maxComputationTime",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Timeout in milliseconds after which diff computation is cancelled.\nDefaults to 5000."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3220,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2659,
										"name": "IDiffEditorOptions.maxComputationTime"
									}
								},
								{
									"id": 1003,
									"name": "minimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the minimap."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2735,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3025,
										"name": "IEditorMinimapOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2690,
										"name": "IDiffEditorOptions.minimap"
									}
								},
								{
									"id": 1010,
									"name": "mouseStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the mouse pointer style, either 'text' or 'default' or 'copy'\nDefaults to 'text'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2769,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "text"
											},
											{
												"type": "literal",
												"value": "copy"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2697,
										"name": "IDiffEditorOptions.mouseStyle"
									}
								},
								{
									"id": 1036,
									"name": "mouseWheelScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\nDefaults to 1."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2904,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2723,
										"name": "IDiffEditorOptions.mouseWheelScrollSensitivity"
									}
								},
								{
									"id": 1009,
									"name": "mouseWheelZoom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2764,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2696,
										"name": "IDiffEditorOptions.mouseWheelZoom"
									}
								},
								{
									"id": 1041,
									"name": "multiCursorMergeOverlapping",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Merge overlapping selections.\nDefaults to true"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2929,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2728,
										"name": "IDiffEditorOptions.multiCursorMergeOverlapping"
									}
								},
								{
									"id": 1040,
									"name": "multiCursorModifier",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The modifier to be used to add multiple cursors with the mouse.\nDefaults to 'alt'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2924,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ctrlCmd"
											},
											{
												"type": "literal",
												"value": "alt"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2727,
										"name": "IDiffEditorOptions.multiCursorModifier"
									}
								},
								{
									"id": 1042,
									"name": "multiCursorPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the behaviour when pasting a text with the line count equal to the cursor count.\nDefaults to 'spread'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2934,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "spread"
											},
											{
												"type": "literal",
												"value": "full"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2729,
										"name": "IDiffEditorOptions.multiCursorPaste"
									}
								},
								{
									"id": 1072,
									"name": "occurrencesHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable semantic occurrences highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3072,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2759,
										"name": "IDiffEditorOptions.occurrencesHighlight"
									}
								},
								{
									"id": 975,
									"name": "originalEditable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Original model should be editable?\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3235,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2662,
										"name": "IDiffEditorOptions.originalEditable"
									}
								},
								{
									"id": 969,
									"name": "overflowWidgetsDomNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Place overflow widgets inside an external DOM node.\nDefaults to an internal DOM node."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4554,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								},
								{
									"id": 1007,
									"name": "overviewRulerBorder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if a border should be drawn around the overview ruler.\nDefaults to `true`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2754,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2694,
										"name": "IDiffEditorOptions.overviewRulerBorder"
									}
								},
								{
									"id": 1006,
									"name": "overviewRulerLanes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The number of vertical lanes the overview ruler should render.\nDefaults to 3."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2749,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2693,
										"name": "IDiffEditorOptions.overviewRulerLanes"
									}
								},
								{
									"id": 1050,
									"name": "padding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the spacing around the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2969,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3034,
										"name": "IEditorPaddingOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2737,
										"name": "IDiffEditorOptions.padding"
									}
								},
								{
									"id": 1051,
									"name": "parameterHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Parameter hint options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2973,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 3040,
										"name": "IEditorParameterHintOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2738,
										"name": "IDiffEditorOptions.parameterHints"
									}
								},
								{
									"id": 1097,
									"name": "peekWidgetDefaultFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether to focus the inline editor in the peek widget by default.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3186,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "tree"
											},
											{
												"type": "literal",
												"value": "editor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2784,
										"name": "IDiffEditorOptions.peekWidgetDefaultFocus"
									}
								},
								{
									"id": 1048,
									"name": "quickSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable quick suggestions (shadow suggestions)\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2960,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"id": 3044,
												"name": "IQuickSuggestionsOptions"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2735,
										"name": "IDiffEditorOptions.quickSuggestions"
									}
								},
								{
									"id": 1049,
									"name": "quickSuggestionsDelay",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Quick suggestions show delay (in ms)\nDefaults to 10 (ms)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2965,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2736,
										"name": "IDiffEditorOptions.quickSuggestionsDelay"
									}
								},
								{
									"id": 998,
									"name": "readOnly",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor be read only.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2713,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2685,
										"name": "IDiffEditorOptions.readOnly"
									}
								},
								{
									"id": 1000,
									"name": "renameOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "deprecated, use linkedEditing instead"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2722,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2687,
										"name": "IDiffEditorOptions.renameOnType"
									}
								},
								{
									"id": 1085,
									"name": "renderControlCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of control characters.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3133,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2772,
										"name": "IDiffEditorOptions.renderControlCharacters"
									}
								},
								{
									"id": 989,
									"name": "renderFinalNewline",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render last line number when the file ends with a newline.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2666,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2676,
										"name": "IDiffEditorOptions.renderFinalNewline"
									}
								},
								{
									"id": 1086,
									"name": "renderIndentGuides",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of indent guides.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3138,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2773,
										"name": "IDiffEditorOptions.renderIndentGuides"
									}
								},
								{
									"id": 974,
									"name": "renderIndicators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render +/- indicators for added/deleted changes.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3230,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2661,
										"name": "IDiffEditorOptions.renderIndicators"
									}
								},
								{
									"id": 1088,
									"name": "renderLineHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of current line highlight.\nDefaults to all."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3148,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "gutter"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2775,
										"name": "IDiffEditorOptions.renderLineHighlight"
									}
								},
								{
									"id": 1089,
									"name": "renderLineHighlightOnlyWhenFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control if the current line highlight should be rendered only the editor is focused.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3153,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2776,
										"name": "IDiffEditorOptions.renderLineHighlightOnlyWhenFocus"
									}
								},
								{
									"id": 978,
									"name": "renderOverviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Is the diff editor should render overview ruler\nDefaults to true"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3250,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2665,
										"name": "IDiffEditorOptions.renderOverviewRuler"
									}
								},
								{
									"id": 971,
									"name": "renderSideBySide",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render the differences in two side-by-side editors.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3215,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2658,
										"name": "IDiffEditorOptions.renderSideBySide"
									}
								},
								{
									"id": 1001,
									"name": "renderValidationDecorations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor render validation decorations.\nDefaults to editable."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2727,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "editable"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2688,
										"name": "IDiffEditorOptions.renderValidationDecorations"
									}
								},
								{
									"id": 1084,
									"name": "renderWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of whitespace.\nDefaults to none."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3128,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "boundary"
											},
											{
												"type": "literal",
												"value": "selection"
											},
											{
												"type": "literal",
												"value": "trailing"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2771,
										"name": "IDiffEditorOptions.renderWhitespace"
									}
								},
								{
									"id": 995,
									"name": "revealHorizontalRightPadding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\nThis virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\nDefaults to 30 (px)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2699,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2682,
										"name": "IDiffEditorOptions.revealHorizontalRightPadding"
									}
								},
								{
									"id": 996,
									"name": "roundedSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render the editor selection with rounded borders.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2704,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2683,
										"name": "IDiffEditorOptions.roundedSelection"
									}
								},
								{
									"id": 983,
									"name": "rulers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render vertical lines at the specified columns.\nDefaults to empty array."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2632,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "reference",
													"id": 3065,
													"name": "IRulerOption"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2670,
										"name": "IDiffEditorOptions.rulers"
									}
								},
								{
									"id": 1019,
									"name": "scrollBeyondLastColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go beyond the last column by a number of columns.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2814,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2706,
										"name": "IDiffEditorOptions.scrollBeyondLastColumn"
									}
								},
								{
									"id": 1018,
									"name": "scrollBeyondLastLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go one screen size after the last line.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2809,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2705,
										"name": "IDiffEditorOptions.scrollBeyondLastLine"
									}
								},
								{
									"id": 1038,
									"name": "scrollPredominantAxis",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2914,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2725,
										"name": "IDiffEditorOptions.scrollPredominantAxis"
									}
								},
								{
									"id": 1002,
									"name": "scrollbar",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the scrollbars."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2731,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3068,
										"name": "IEditorScrollbarOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2689,
										"name": "IDiffEditorOptions.scrollbar"
									}
								},
								{
									"id": 991,
									"name": "selectOnLineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the corresponding line be selected when clicking on the line number?\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2676,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2678,
										"name": "IDiffEditorOptions.selectOnLineNumbers"
									}
								},
								{
									"id": 985,
									"name": "selectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable Linux primary clipboard.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2642,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2672,
										"name": "IDiffEditorOptions.selectionClipboard"
									}
								},
								{
									"id": 1071,
									"name": "selectionHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable selection highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3067,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2758,
										"name": "IDiffEditorOptions.selectionHighlight"
									}
								},
								{
									"id": 1099,
									"name": "showDeprecated",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls strikethrough deprecated variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3195,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2786,
										"name": "IDiffEditorOptions.showDeprecated"
									}
								},
								{
									"id": 1081,
									"name": "showFoldingControls",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\nDefaults to 'mouseover'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3113,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "mouseover"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2768,
										"name": "IDiffEditorOptions.showFoldingControls"
									}
								},
								{
									"id": 1096,
									"name": "showUnused",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls fading out of unused variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3181,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2783,
										"name": "IDiffEditorOptions.showUnused"
									}
								},
								{
									"id": 1046,
									"name": "smartSelect",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Smart select opptions;"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2951,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3133,
										"name": "ISmartSelectOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2733,
										"name": "IDiffEditorOptions.smartSelect"
									}
								},
								{
									"id": 1020,
									"name": "smoothScrolling",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor animates scrolling to a position.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2819,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2707,
										"name": "IDiffEditorOptions.smoothScrolling"
									}
								},
								{
									"id": 1064,
									"name": "snippetSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable snippet suggestions. Default to 'true'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3036,
											"character": 26
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "top"
											},
											{
												"type": "literal",
												"value": "bottom"
											},
											{
												"type": "literal",
												"value": "inline"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2751,
										"name": "IDiffEditorOptions.snippetSuggestions"
									}
								},
								{
									"id": 1057,
									"name": "stickyTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Emulate selection behaviour of tab characters when using spaces for indentation.\nThis means selection will stick to tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3002,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2744,
										"name": "IDiffEditorOptions.stickyTabStops"
									}
								},
								{
									"id": 1030,
									"name": "stopRenderingLineAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Performance guard: Stop rendering a line after x characters.\nDefaults to 10000.\nUse -1 to never stop rendering"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2877,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2717,
										"name": "IDiffEditorOptions.stopRenderingLineAfter"
									}
								},
								{
									"id": 1045,
									"name": "suggest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Suggest options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2947,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3096,
										"name": "ISuggestOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2732,
										"name": "IDiffEditorOptions.suggest"
									}
								},
								{
									"id": 1068,
									"name": "suggestFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size for the suggest widget.\nDefaults to the editor font size."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3053,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2755,
										"name": "IDiffEditorOptions.suggestFontSize"
									}
								},
								{
									"id": 1069,
									"name": "suggestLineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height for the suggest widget.\nDefaults to the editor line height."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3058,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2756,
										"name": "IDiffEditorOptions.suggestLineHeight"
									}
								},
								{
									"id": 1061,
									"name": "suggestOnTriggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the suggestion box to pop-up on trigger characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3022,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2748,
										"name": "IDiffEditorOptions.suggestOnTriggerCharacters"
									}
								},
								{
									"id": 1067,
									"name": "suggestSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The history mode for suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3048,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "first"
											},
											{
												"type": "literal",
												"value": "recentlyUsed"
											},
											{
												"type": "literal",
												"value": "recentlyUsedByPrefix"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2754,
										"name": "IDiffEditorOptions.suggestSelection"
									}
								},
								{
									"id": 1070,
									"name": "tabCompletion",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable tab completion."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3062,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "onlySnippets"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2757,
										"name": "IDiffEditorOptions.tabCompletion"
									}
								},
								{
									"id": 982,
									"name": "tabIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The `tabindex` property of the editor's textarea"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2627,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2669,
										"name": "IDiffEditorOptions.tabIndex"
									}
								},
								{
									"id": 967,
									"name": "theme",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Initial theme to be used for rendering.\nThe current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black'.\nYou can create custom themes via `monaco.editor.defineTheme`.\nTo switch a theme, use `monaco.editor.setTheme`"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1210,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1082,
									"name": "unfoldOnClickAfterEndOfLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether clicking on the empty content after a folded line will unfold the line.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3118,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2769,
										"name": "IDiffEditorOptions.unfoldOnClickAfterEndOfLine"
									}
								},
								{
									"id": 990,
									"name": "unusualLineTerminators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Remove unusual line terminators like LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\nDefaults to 'prompt'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2671,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "prompt"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2677,
										"name": "IDiffEditorOptions.unusualLineTerminators"
									}
								},
								{
									"id": 1090,
									"name": "useTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Inserting and deleting whitespace follows tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3157,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2777,
										"name": "IDiffEditorOptions.useTabStops"
									}
								},
								{
									"id": 984,
									"name": "wordSeparators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A string containing the word separators used when doing word navigation.\nDefaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2637,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2671,
										"name": "IDiffEditorOptions.wordSeparators"
									}
								},
								{
									"id": 1022,
									"name": "wordWrap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to \"off\"."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2834,
											"character": 16
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "wordWrapColumn"
											},
											{
												"type": "literal",
												"value": "bounded"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2709,
										"name": "IDiffEditorOptions.wordWrap"
									}
								},
								{
									"id": 1029,
									"name": "wordWrapBreakAfterCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced after these characters.\nDefaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2871,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2716,
										"name": "IDiffEditorOptions.wordWrapBreakAfterCharacters"
									}
								},
								{
									"id": 1028,
									"name": "wordWrapBreakBeforeCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced before these characters.\nDefaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2866,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2715,
										"name": "IDiffEditorOptions.wordWrapBreakBeforeCharacters"
									}
								},
								{
									"id": 1025,
									"name": "wordWrapColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to 80."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2851,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2712,
										"name": "IDiffEditorOptions.wordWrapColumn"
									}
								},
								{
									"id": 1023,
									"name": "wordWrapOverride1",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrap` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2838,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2710,
										"name": "IDiffEditorOptions.wordWrapOverride1"
									}
								},
								{
									"id": 1024,
									"name": "wordWrapOverride2",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrapOverride1` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2842,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2711,
										"name": "IDiffEditorOptions.wordWrapOverride2"
									}
								},
								{
									"id": 1026,
									"name": "wrappingIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\nDefaults to 'same' in vscode and to 'none' in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2856,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "same"
											},
											{
												"type": "literal",
												"value": "indent"
											},
											{
												"type": "literal",
												"value": "deepIndent"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2713,
										"name": "IDiffEditorOptions.wrappingIndent"
									}
								},
								{
									"id": 1027,
									"name": "wrappingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the wrapping strategy to use.\nDefaults to 'simple'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2861,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "simple"
											},
											{
												"type": "literal",
												"value": "advanced"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2714,
										"name": "IDiffEditorOptions.wrappingStrategy"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1063,
										1062,
										1044,
										1043,
										981,
										1052,
										1054,
										1053,
										1056,
										1055,
										1021,
										1077,
										1073,
										1074,
										1075,
										1033,
										1039,
										1034,
										1035,
										1066,
										1008,
										1011,
										1012,
										987,
										988,
										1013,
										1098,
										976,
										979,
										968,
										1015,
										1016,
										1060,
										1065,
										970,
										997,
										1037,
										1004,
										1005,
										1078,
										1080,
										1079,
										1091,
										1014,
										1093,
										1092,
										1059,
										1058,
										993,
										1047,
										1017,
										1087,
										1031,
										973,
										980,
										1100,
										977,
										1095,
										1076,
										994,
										1094,
										986,
										992,
										999,
										1032,
										1083,
										972,
										1003,
										1010,
										1036,
										1009,
										1041,
										1040,
										1042,
										1072,
										975,
										969,
										1007,
										1006,
										1050,
										1051,
										1097,
										1048,
										1049,
										998,
										1000,
										1085,
										989,
										1086,
										974,
										1088,
										1089,
										978,
										971,
										1001,
										1084,
										995,
										996,
										983,
										1019,
										1018,
										1038,
										1002,
										991,
										985,
										1071,
										1099,
										1081,
										1096,
										1046,
										1020,
										1064,
										1057,
										1030,
										1045,
										1068,
										1069,
										1061,
										1067,
										1070,
										982,
										967,
										1082,
										990,
										1090,
										984,
										1022,
										1029,
										1028,
										1025,
										1023,
										1024,
										1026,
										1027
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1203,
									"character": 51
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 2656,
									"name": "IDiffEditorOptions"
								}
							]
						},
						{
							"id": 2255,
							"name": "IDiffEditorModel",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A model for the diff editor."
							},
							"children": [
								{
									"id": 2257,
									"name": "modified",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Modified model."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2059,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2002,
										"name": "ITextModel"
									}
								},
								{
									"id": 2256,
									"name": "original",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Original model."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2055,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2002,
										"name": "ITextModel"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2257,
										2256
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2051,
									"character": 37
								}
							]
						},
						{
							"id": 2656,
							"name": "IDiffEditorOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for the diff editor."
							},
							"children": [
								{
									"id": 2750,
									"name": "acceptSuggestionOnCommitCharacter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on provider defined characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3032,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2618,
										"name": "IEditorOptions.acceptSuggestionOnCommitCharacter"
									}
								},
								{
									"id": 2749,
									"name": "acceptSuggestionOnEnter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on ENTER.\nDefaults to 'on'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3027,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "smart"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2617,
										"name": "IEditorOptions.acceptSuggestionOnEnter"
									}
								},
								{
									"id": 2731,
									"name": "accessibilityPageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the number of lines in the editor that can be read out by a screen reader"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2943,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2599,
										"name": "IEditorOptions.accessibilityPageSize"
									}
								},
								{
									"id": 2730,
									"name": "accessibilitySupport",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's accessibility support.\nDefaults to 'auto'. It is best to leave this to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2939,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2598,
										"name": "IEditorOptions.accessibilitySupport"
									}
								},
								{
									"id": 2668,
									"name": "ariaLabel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The aria label for the editor's textarea (when it is focused)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2623,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2536,
										"name": "IEditorOptions.ariaLabel"
									}
								},
								{
									"id": 2739,
									"name": "autoClosingBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing brackets.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2978,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2607,
										"name": "IEditorOptions.autoClosingBrackets"
									}
								},
								{
									"id": 2741,
									"name": "autoClosingOvertype",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for typing over closing quotes or brackets."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2987,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2527,
										"name": "EditorAutoClosingOvertypeStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2609,
										"name": "IEditorOptions.autoClosingOvertype"
									}
								},
								{
									"id": 2740,
									"name": "autoClosingQuotes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing quotes.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2983,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2608,
										"name": "IEditorOptions.autoClosingQuotes"
									}
								},
								{
									"id": 2743,
									"name": "autoIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\nDefaults to advanced."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2997,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "advanced"
											},
											{
												"type": "literal",
												"value": "full"
											},
											{
												"type": "literal",
												"value": "brackets"
											},
											{
												"type": "literal",
												"value": "keep"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2611,
										"name": "IEditorOptions.autoIndent"
									}
								},
								{
									"id": 2742,
									"name": "autoSurround",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto surrounding.\nDefaults to always allowing auto surrounding."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2992,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2526,
										"name": "EditorAutoSurroundStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2610,
										"name": "IEditorOptions.autoSurround"
									}
								},
								{
									"id": 2708,
									"name": "automaticLayout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor will install an interval to check if its container dom node size has changed.\nEnabling this might have a severe performance impact.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2825,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2576,
										"name": "IEditorOptions.automaticLayout"
									}
								},
								{
									"id": 2764,
									"name": "codeActionsOnSaveTimeout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Timeout for running code actions on save."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3093,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2632,
										"name": "IEditorOptions.codeActionsOnSaveTimeout"
									}
								},
								{
									"id": 2760,
									"name": "codeLens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show code lens\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3077,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2628,
										"name": "IEditorOptions.codeLens"
									}
								},
								{
									"id": 2761,
									"name": "codeLensFontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font family. Defaults to editor font family."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3081,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2629,
										"name": "IEditorOptions.codeLensFontFamily"
									}
								},
								{
									"id": 2762,
									"name": "codeLensFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font size. Default to 90% of the editor font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3085,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2630,
										"name": "IEditorOptions.codeLensFontSize"
									}
								},
								{
									"id": 2720,
									"name": "colorDecorators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable inline color decorators and color picker rendering."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2890,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2588,
										"name": "IEditorOptions.colorDecorators"
									}
								},
								{
									"id": 2726,
									"name": "columnSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the selection with the mouse and keys is doing column selection.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2919,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2594,
										"name": "IEditorOptions.columnSelection"
									}
								},
								{
									"id": 2721,
									"name": "comments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behaviour of comments in the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2894,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2933,
										"name": "IEditorCommentsOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2589,
										"name": "IEditorOptions.comments"
									}
								},
								{
									"id": 2722,
									"name": "contextmenu",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable custom contextmenu.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2899,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2590,
										"name": "IEditorOptions.contextmenu"
									}
								},
								{
									"id": 2753,
									"name": "copyWithSyntaxHighlighting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Syntax highlighting is copied."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3044,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2621,
										"name": "IEditorOptions.copyWithSyntaxHighlighting"
									}
								},
								{
									"id": 2695,
									"name": "cursorBlinking",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\nDefaults to 'blink'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2759,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "blink"
											},
											{
												"type": "literal",
												"value": "smooth"
											},
											{
												"type": "literal",
												"value": "phase"
											},
											{
												"type": "literal",
												"value": "expand"
											},
											{
												"type": "literal",
												"value": "solid"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2563,
										"name": "IEditorOptions.cursorBlinking"
									}
								},
								{
									"id": 2698,
									"name": "cursorSmoothCaretAnimation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable smooth caret animation.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2774,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2566,
										"name": "IEditorOptions.cursorSmoothCaretAnimation"
									}
								},
								{
									"id": 2699,
									"name": "cursorStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor style, either 'block' or 'line'.\nDefaults to 'line'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2779,
											"character": 19
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "block"
											},
											{
												"type": "literal",
												"value": "underline"
											},
											{
												"type": "literal",
												"value": "line-thin"
											},
											{
												"type": "literal",
												"value": "block-outline"
											},
											{
												"type": "literal",
												"value": "underline-thin"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2567,
										"name": "IEditorOptions.cursorStyle"
									}
								},
								{
									"id": 2674,
									"name": "cursorSurroundingLines",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the minimal number of visible leading and trailing lines surrounding the cursor.\nDefaults to 0."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2655,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2542,
										"name": "IEditorOptions.cursorSurroundingLines"
									}
								},
								{
									"id": 2675,
									"name": "cursorSurroundingLinesStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls when `cursorSurroundingLines` should be enforced\nDefaults to `default`, `cursorSurroundingLines` is not enforced when cursor position is changed\nby mouse."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2661,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "all"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2543,
										"name": "IEditorOptions.cursorSurroundingLinesStyle"
									}
								},
								{
									"id": 2700,
									"name": "cursorWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of the cursor when cursorStyle is set to 'line'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2783,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2568,
										"name": "IEditorOptions.cursorWidth"
									}
								},
								{
									"id": 2785,
									"name": "definitionLinkOpensInPeek",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the definition link opens element in the peek widget.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3191,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2653,
										"name": "IEditorOptions.definitionLinkOpensInPeek"
									}
								},
								{
									"id": 2663,
									"name": "diffCodeLens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the diff editor enable code lens?\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3240,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2666,
									"name": "diffWordWrap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the diff editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3254,
											"character": 20
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									}
								},
								{
									"id": 2702,
									"name": "disableLayerHinting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers.\nThe usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2794,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2570,
										"name": "IEditorOptions.disableLayerHinting"
									}
								},
								{
									"id": 2703,
									"name": "disableMonospaceOptimizations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the optimizations for monospace fonts.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2799,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2571,
										"name": "IEditorOptions.disableMonospaceOptimizations"
									}
								},
								{
									"id": 2747,
									"name": "dragAndDrop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if the editor should allow to move selections via drag and drop.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3017,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2615,
										"name": "IEditorOptions.dragAndDrop"
									}
								},
								{
									"id": 2752,
									"name": "emptySelectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Copying without a selection copies the current line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3040,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2620,
										"name": "IEditorOptions.emptySelectionClipboard"
									}
								},
								{
									"id": 2657,
									"name": "enableSplitViewResizing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Allow the user to resize the diff editor split view.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3210,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2684,
									"name": "extraEditorClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Class name to be added to the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2708,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2552,
										"name": "IEditorOptions.extraEditorClassName"
									}
								},
								{
									"id": 2724,
									"name": "fastScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "FastScrolling mulitplier speed when pressing `Alt`\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2909,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2592,
										"name": "IEditorOptions.fastScrollSensitivity"
									}
								},
								{
									"id": 2691,
									"name": "find",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior of the find widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2739,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 2951,
										"name": "IEditorFindOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2559,
										"name": "IEditorOptions.find"
									}
								},
								{
									"id": 2692,
									"name": "fixedOverflowWidgets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Display overflow widgets as `fixed`.\nDefaults to `false`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2744,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2560,
										"name": "IEditorOptions.fixedOverflowWidgets"
									}
								},
								{
									"id": 2765,
									"name": "folding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable code folding.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3098,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2633,
										"name": "IEditorOptions.folding"
									}
								},
								{
									"id": 2767,
									"name": "foldingHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlight for folded regions.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3108,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2635,
										"name": "IEditorOptions.foldingHighlight"
									}
								},
								{
									"id": 2766,
									"name": "foldingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\nDefaults to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3103,
											"character": 23
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "indentation"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2634,
										"name": "IEditorOptions.foldingStrategy"
									}
								},
								{
									"id": 2778,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font family"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3161,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2646,
										"name": "IEditorOptions.fontFamily"
									}
								},
								{
									"id": 2701,
									"name": "fontLigatures",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable font ligatures.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2788,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2569,
										"name": "IEditorOptions.fontLigatures"
									}
								},
								{
									"id": 2780,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3169,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2648,
										"name": "IEditorOptions.fontSize"
									}
								},
								{
									"id": 2779,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font weight"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3165,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2647,
										"name": "IEditorOptions.fontWeight"
									}
								},
								{
									"id": 2746,
									"name": "formatOnPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on paste.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3012,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2614,
										"name": "IEditorOptions.formatOnPaste"
									}
								},
								{
									"id": 2745,
									"name": "formatOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on type.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3007,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2613,
										"name": "IEditorOptions.formatOnType"
									}
								},
								{
									"id": 2680,
									"name": "glyphMargin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the rendering of the glyph margin.\nDefaults to true in vscode and to false in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2686,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2548,
										"name": "IEditorOptions.glyphMargin"
									}
								},
								{
									"id": 2734,
									"name": "gotoLocation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2955,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2959,
										"name": "IGotoLocationOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2602,
										"name": "IEditorOptions.gotoLocation"
									}
								},
								{
									"id": 2704,
									"name": "hideCursorInOverviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the cursor be hidden in the overview ruler.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2804,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2572,
										"name": "IEditorOptions.hideCursorInOverviewRuler"
									}
								},
								{
									"id": 2774,
									"name": "highlightActiveIndentGuide",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of the active indent guide.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3143,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2642,
										"name": "IEditorOptions.highlightActiveIndentGuide"
									}
								},
								{
									"id": 2718,
									"name": "hover",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's hover."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2881,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 2972,
										"name": "IEditorHoverOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2586,
										"name": "IEditorOptions.hover"
									}
								},
								{
									"id": 2660,
									"name": "ignoreTrimWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Compute the diff by ignoring leading/trailing whitespace\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3225,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2667,
									"name": "inDiffEditor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This editor is used inside a diff editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2619,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2535,
										"name": "IEditorOptions.inDiffEditor"
									}
								},
								{
									"id": 2787,
									"name": "inlineHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the inline hints."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3199,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3020,
										"name": "IEditorInlineHintsOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2655,
										"name": "IEditorOptions.inlineHints"
									}
								},
								{
									"id": 2664,
									"name": "isInEmbeddedEditor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Is the diff editor inside another editor\nDefaults to false"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3245,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2782,
									"name": "letterSpacing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The letter spacing"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3177,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2650,
										"name": "IEditorOptions.letterSpacing"
									}
								},
								{
									"id": 2763,
									"name": "lightbulb",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the code action lightbulb."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3089,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3017,
										"name": "IEditorLightbulbOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2631,
										"name": "IEditorOptions.lightbulb"
									}
								},
								{
									"id": 2681,
									"name": "lineDecorationsWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width reserved for line decorations (in px).\nLine decorations are placed between line numbers and the editor content.\nYou can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\nDefaults to 10."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2693,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2549,
										"name": "IEditorOptions.lineDecorationsWidth"
									}
								},
								{
									"id": 2781,
									"name": "lineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3173,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2649,
										"name": "IEditorOptions.lineHeight"
									}
								},
								{
									"id": 2673,
									"name": "lineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the rendering of line numbers.\nIf it is a function, it will be invoked when rendering a line number and the return value will be rendered.\nOtherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\nOtherwise, line numbers will not be rendered.\nDefaults to `on`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2650,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3049,
										"name": "LineNumbersType"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2541,
										"name": "IEditorOptions.lineNumbers"
									}
								},
								{
									"id": 2679,
									"name": "lineNumbersMinChars",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2681,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2547,
										"name": "IEditorOptions.lineNumbersMinChars"
									}
								},
								{
									"id": 2686,
									"name": "linkedEditing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable linked editing.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2718,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2554,
										"name": "IEditorOptions.linkedEditing"
									}
								},
								{
									"id": 2719,
									"name": "links",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable detecting links and making them clickable.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2886,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2587,
										"name": "IEditorOptions.links"
									}
								},
								{
									"id": 2770,
									"name": "matchBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of matching brackets.\nDefaults to 'always'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3123,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "never"
											},
											{
												"type": "literal",
												"value": "near"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2638,
										"name": "IEditorOptions.matchBrackets"
									}
								},
								{
									"id": 2659,
									"name": "maxComputationTime",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Timeout in milliseconds after which diff computation is cancelled.\nDefaults to 5000."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3220,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2690,
									"name": "minimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the minimap."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2735,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3025,
										"name": "IEditorMinimapOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2558,
										"name": "IEditorOptions.minimap"
									}
								},
								{
									"id": 2697,
									"name": "mouseStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the mouse pointer style, either 'text' or 'default' or 'copy'\nDefaults to 'text'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2769,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "text"
											},
											{
												"type": "literal",
												"value": "copy"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2565,
										"name": "IEditorOptions.mouseStyle"
									}
								},
								{
									"id": 2723,
									"name": "mouseWheelScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\nDefaults to 1."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2904,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2591,
										"name": "IEditorOptions.mouseWheelScrollSensitivity"
									}
								},
								{
									"id": 2696,
									"name": "mouseWheelZoom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2764,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2564,
										"name": "IEditorOptions.mouseWheelZoom"
									}
								},
								{
									"id": 2728,
									"name": "multiCursorMergeOverlapping",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Merge overlapping selections.\nDefaults to true"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2929,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2596,
										"name": "IEditorOptions.multiCursorMergeOverlapping"
									}
								},
								{
									"id": 2727,
									"name": "multiCursorModifier",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The modifier to be used to add multiple cursors with the mouse.\nDefaults to 'alt'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2924,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ctrlCmd"
											},
											{
												"type": "literal",
												"value": "alt"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2595,
										"name": "IEditorOptions.multiCursorModifier"
									}
								},
								{
									"id": 2729,
									"name": "multiCursorPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the behaviour when pasting a text with the line count equal to the cursor count.\nDefaults to 'spread'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2934,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "spread"
											},
											{
												"type": "literal",
												"value": "full"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2597,
										"name": "IEditorOptions.multiCursorPaste"
									}
								},
								{
									"id": 2759,
									"name": "occurrencesHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable semantic occurrences highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3072,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2627,
										"name": "IEditorOptions.occurrencesHighlight"
									}
								},
								{
									"id": 2662,
									"name": "originalEditable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Original model should be editable?\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3235,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2694,
									"name": "overviewRulerBorder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if a border should be drawn around the overview ruler.\nDefaults to `true`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2754,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2562,
										"name": "IEditorOptions.overviewRulerBorder"
									}
								},
								{
									"id": 2693,
									"name": "overviewRulerLanes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The number of vertical lanes the overview ruler should render.\nDefaults to 3."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2749,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2561,
										"name": "IEditorOptions.overviewRulerLanes"
									}
								},
								{
									"id": 2737,
									"name": "padding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the spacing around the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2969,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3034,
										"name": "IEditorPaddingOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2605,
										"name": "IEditorOptions.padding"
									}
								},
								{
									"id": 2738,
									"name": "parameterHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Parameter hint options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2973,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 3040,
										"name": "IEditorParameterHintOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2606,
										"name": "IEditorOptions.parameterHints"
									}
								},
								{
									"id": 2784,
									"name": "peekWidgetDefaultFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether to focus the inline editor in the peek widget by default.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3186,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "tree"
											},
											{
												"type": "literal",
												"value": "editor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2652,
										"name": "IEditorOptions.peekWidgetDefaultFocus"
									}
								},
								{
									"id": 2735,
									"name": "quickSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable quick suggestions (shadow suggestions)\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2960,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"id": 3044,
												"name": "IQuickSuggestionsOptions"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2603,
										"name": "IEditorOptions.quickSuggestions"
									}
								},
								{
									"id": 2736,
									"name": "quickSuggestionsDelay",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Quick suggestions show delay (in ms)\nDefaults to 10 (ms)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2965,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2604,
										"name": "IEditorOptions.quickSuggestionsDelay"
									}
								},
								{
									"id": 2685,
									"name": "readOnly",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor be read only.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2713,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2553,
										"name": "IEditorOptions.readOnly"
									}
								},
								{
									"id": 2687,
									"name": "renameOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "deprecated, use linkedEditing instead"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2722,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2555,
										"name": "IEditorOptions.renameOnType"
									}
								},
								{
									"id": 2772,
									"name": "renderControlCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of control characters.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3133,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2640,
										"name": "IEditorOptions.renderControlCharacters"
									}
								},
								{
									"id": 2676,
									"name": "renderFinalNewline",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render last line number when the file ends with a newline.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2666,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2544,
										"name": "IEditorOptions.renderFinalNewline"
									}
								},
								{
									"id": 2773,
									"name": "renderIndentGuides",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of indent guides.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3138,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2641,
										"name": "IEditorOptions.renderIndentGuides"
									}
								},
								{
									"id": 2661,
									"name": "renderIndicators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render +/- indicators for added/deleted changes.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3230,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2775,
									"name": "renderLineHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of current line highlight.\nDefaults to all."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3148,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "gutter"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2643,
										"name": "IEditorOptions.renderLineHighlight"
									}
								},
								{
									"id": 2776,
									"name": "renderLineHighlightOnlyWhenFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control if the current line highlight should be rendered only the editor is focused.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3153,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2644,
										"name": "IEditorOptions.renderLineHighlightOnlyWhenFocus"
									}
								},
								{
									"id": 2665,
									"name": "renderOverviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Is the diff editor should render overview ruler\nDefaults to true"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3250,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2658,
									"name": "renderSideBySide",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render the differences in two side-by-side editors.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3215,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2688,
									"name": "renderValidationDecorations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor render validation decorations.\nDefaults to editable."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2727,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "editable"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2556,
										"name": "IEditorOptions.renderValidationDecorations"
									}
								},
								{
									"id": 2771,
									"name": "renderWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of whitespace.\nDefaults to none."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3128,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "boundary"
											},
											{
												"type": "literal",
												"value": "selection"
											},
											{
												"type": "literal",
												"value": "trailing"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2639,
										"name": "IEditorOptions.renderWhitespace"
									}
								},
								{
									"id": 2682,
									"name": "revealHorizontalRightPadding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\nThis virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\nDefaults to 30 (px)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2699,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2550,
										"name": "IEditorOptions.revealHorizontalRightPadding"
									}
								},
								{
									"id": 2683,
									"name": "roundedSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render the editor selection with rounded borders.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2704,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2551,
										"name": "IEditorOptions.roundedSelection"
									}
								},
								{
									"id": 2670,
									"name": "rulers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render vertical lines at the specified columns.\nDefaults to empty array."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2632,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "reference",
													"id": 3065,
													"name": "IRulerOption"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2538,
										"name": "IEditorOptions.rulers"
									}
								},
								{
									"id": 2706,
									"name": "scrollBeyondLastColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go beyond the last column by a number of columns.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2814,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2574,
										"name": "IEditorOptions.scrollBeyondLastColumn"
									}
								},
								{
									"id": 2705,
									"name": "scrollBeyondLastLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go one screen size after the last line.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2809,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2573,
										"name": "IEditorOptions.scrollBeyondLastLine"
									}
								},
								{
									"id": 2725,
									"name": "scrollPredominantAxis",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2914,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2593,
										"name": "IEditorOptions.scrollPredominantAxis"
									}
								},
								{
									"id": 2689,
									"name": "scrollbar",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the scrollbars."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2731,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3068,
										"name": "IEditorScrollbarOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2557,
										"name": "IEditorOptions.scrollbar"
									}
								},
								{
									"id": 2678,
									"name": "selectOnLineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the corresponding line be selected when clicking on the line number?\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2676,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2546,
										"name": "IEditorOptions.selectOnLineNumbers"
									}
								},
								{
									"id": 2672,
									"name": "selectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable Linux primary clipboard.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2642,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2540,
										"name": "IEditorOptions.selectionClipboard"
									}
								},
								{
									"id": 2758,
									"name": "selectionHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable selection highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3067,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2626,
										"name": "IEditorOptions.selectionHighlight"
									}
								},
								{
									"id": 2786,
									"name": "showDeprecated",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls strikethrough deprecated variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3195,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2654,
										"name": "IEditorOptions.showDeprecated"
									}
								},
								{
									"id": 2768,
									"name": "showFoldingControls",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\nDefaults to 'mouseover'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3113,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "mouseover"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2636,
										"name": "IEditorOptions.showFoldingControls"
									}
								},
								{
									"id": 2783,
									"name": "showUnused",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls fading out of unused variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3181,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2651,
										"name": "IEditorOptions.showUnused"
									}
								},
								{
									"id": 2733,
									"name": "smartSelect",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Smart select opptions;"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2951,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3133,
										"name": "ISmartSelectOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2601,
										"name": "IEditorOptions.smartSelect"
									}
								},
								{
									"id": 2707,
									"name": "smoothScrolling",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor animates scrolling to a position.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2819,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2575,
										"name": "IEditorOptions.smoothScrolling"
									}
								},
								{
									"id": 2751,
									"name": "snippetSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable snippet suggestions. Default to 'true'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3036,
											"character": 26
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "top"
											},
											{
												"type": "literal",
												"value": "bottom"
											},
											{
												"type": "literal",
												"value": "inline"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2619,
										"name": "IEditorOptions.snippetSuggestions"
									}
								},
								{
									"id": 2744,
									"name": "stickyTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Emulate selection behaviour of tab characters when using spaces for indentation.\nThis means selection will stick to tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3002,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2612,
										"name": "IEditorOptions.stickyTabStops"
									}
								},
								{
									"id": 2717,
									"name": "stopRenderingLineAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Performance guard: Stop rendering a line after x characters.\nDefaults to 10000.\nUse -1 to never stop rendering"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2877,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2585,
										"name": "IEditorOptions.stopRenderingLineAfter"
									}
								},
								{
									"id": 2732,
									"name": "suggest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Suggest options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2947,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3096,
										"name": "ISuggestOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2600,
										"name": "IEditorOptions.suggest"
									}
								},
								{
									"id": 2755,
									"name": "suggestFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size for the suggest widget.\nDefaults to the editor font size."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3053,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2623,
										"name": "IEditorOptions.suggestFontSize"
									}
								},
								{
									"id": 2756,
									"name": "suggestLineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height for the suggest widget.\nDefaults to the editor line height."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3058,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2624,
										"name": "IEditorOptions.suggestLineHeight"
									}
								},
								{
									"id": 2748,
									"name": "suggestOnTriggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the suggestion box to pop-up on trigger characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3022,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2616,
										"name": "IEditorOptions.suggestOnTriggerCharacters"
									}
								},
								{
									"id": 2754,
									"name": "suggestSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The history mode for suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3048,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "first"
											},
											{
												"type": "literal",
												"value": "recentlyUsed"
											},
											{
												"type": "literal",
												"value": "recentlyUsedByPrefix"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2622,
										"name": "IEditorOptions.suggestSelection"
									}
								},
								{
									"id": 2757,
									"name": "tabCompletion",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable tab completion."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3062,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "onlySnippets"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2625,
										"name": "IEditorOptions.tabCompletion"
									}
								},
								{
									"id": 2669,
									"name": "tabIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The `tabindex` property of the editor's textarea"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2627,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2537,
										"name": "IEditorOptions.tabIndex"
									}
								},
								{
									"id": 2769,
									"name": "unfoldOnClickAfterEndOfLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether clicking on the empty content after a folded line will unfold the line.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3118,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2637,
										"name": "IEditorOptions.unfoldOnClickAfterEndOfLine"
									}
								},
								{
									"id": 2677,
									"name": "unusualLineTerminators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Remove unusual line terminators like LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\nDefaults to 'prompt'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2671,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "prompt"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2545,
										"name": "IEditorOptions.unusualLineTerminators"
									}
								},
								{
									"id": 2777,
									"name": "useTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Inserting and deleting whitespace follows tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3157,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2645,
										"name": "IEditorOptions.useTabStops"
									}
								},
								{
									"id": 2671,
									"name": "wordSeparators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A string containing the word separators used when doing word navigation.\nDefaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2637,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2539,
										"name": "IEditorOptions.wordSeparators"
									}
								},
								{
									"id": 2709,
									"name": "wordWrap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to \"off\"."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2834,
											"character": 16
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "wordWrapColumn"
											},
											{
												"type": "literal",
												"value": "bounded"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2577,
										"name": "IEditorOptions.wordWrap"
									}
								},
								{
									"id": 2716,
									"name": "wordWrapBreakAfterCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced after these characters.\nDefaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2871,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2584,
										"name": "IEditorOptions.wordWrapBreakAfterCharacters"
									}
								},
								{
									"id": 2715,
									"name": "wordWrapBreakBeforeCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced before these characters.\nDefaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2866,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2583,
										"name": "IEditorOptions.wordWrapBreakBeforeCharacters"
									}
								},
								{
									"id": 2712,
									"name": "wordWrapColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to 80."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2851,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2580,
										"name": "IEditorOptions.wordWrapColumn"
									}
								},
								{
									"id": 2710,
									"name": "wordWrapOverride1",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrap` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2838,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2578,
										"name": "IEditorOptions.wordWrapOverride1"
									}
								},
								{
									"id": 2711,
									"name": "wordWrapOverride2",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrapOverride1` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2842,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2579,
										"name": "IEditorOptions.wordWrapOverride2"
									}
								},
								{
									"id": 2713,
									"name": "wrappingIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\nDefaults to 'same' in vscode and to 'none' in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2856,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "same"
											},
											{
												"type": "literal",
												"value": "indent"
											},
											{
												"type": "literal",
												"value": "deepIndent"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2581,
										"name": "IEditorOptions.wrappingIndent"
									}
								},
								{
									"id": 2714,
									"name": "wrappingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the wrapping strategy to use.\nDefaults to 'simple'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2861,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "simple"
											},
											{
												"type": "literal",
												"value": "advanced"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2582,
										"name": "IEditorOptions.wrappingStrategy"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2750,
										2749,
										2731,
										2730,
										2668,
										2739,
										2741,
										2740,
										2743,
										2742,
										2708,
										2764,
										2760,
										2761,
										2762,
										2720,
										2726,
										2721,
										2722,
										2753,
										2695,
										2698,
										2699,
										2674,
										2675,
										2700,
										2785,
										2663,
										2666,
										2702,
										2703,
										2747,
										2752,
										2657,
										2684,
										2724,
										2691,
										2692,
										2765,
										2767,
										2766,
										2778,
										2701,
										2780,
										2779,
										2746,
										2745,
										2680,
										2734,
										2704,
										2774,
										2718,
										2660,
										2667,
										2787,
										2664,
										2782,
										2763,
										2681,
										2781,
										2673,
										2679,
										2686,
										2719,
										2770,
										2659,
										2690,
										2697,
										2723,
										2696,
										2728,
										2727,
										2729,
										2759,
										2662,
										2694,
										2693,
										2737,
										2738,
										2784,
										2735,
										2736,
										2685,
										2687,
										2772,
										2676,
										2773,
										2661,
										2775,
										2776,
										2665,
										2658,
										2688,
										2771,
										2682,
										2683,
										2670,
										2706,
										2705,
										2725,
										2689,
										2678,
										2672,
										2758,
										2786,
										2768,
										2783,
										2733,
										2707,
										2751,
										2744,
										2717,
										2732,
										2755,
										2756,
										2748,
										2754,
										2757,
										2669,
										2769,
										2677,
										2777,
										2671,
										2709,
										2716,
										2715,
										2712,
										2710,
										2711,
										2713,
										2714
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3205,
									"character": 39
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 2534,
									"name": "IEditorOptions"
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 966,
									"name": "IDiffEditorConstructionOptions"
								}
							]
						},
						{
							"id": 2318,
							"name": "IDiffEditorViewState",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "(Serializable) View state for the diff editor."
							},
							"children": [
								{
									"id": 2320,
									"name": "modified",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2168,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2311,
										"name": "ICodeEditorViewState"
									}
								},
								{
									"id": 2319,
									"name": "original",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2167,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2311,
										"name": "ICodeEditorViewState"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2320,
										2319
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2166,
									"character": 41
								}
							]
						},
						{
							"id": 4182,
							"name": "IDiffLineInformation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Information about a line in the diff editor"
							},
							"children": [
								{
									"id": 4183,
									"name": "equivalentLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4926,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4183
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4925,
									"character": 41
								}
							]
						},
						{
							"id": 759,
							"name": "IDiffNavigator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 760,
									"name": "canNavigate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 761,
											"name": "canNavigate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 766,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 767,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 762,
									"name": "next",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 763,
											"name": "next",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 764,
									"name": "previous",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 765,
											"name": "previous",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										760,
										766,
										762,
										764
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 843,
									"character": 35
								}
							]
						},
						{
							"id": 768,
							"name": "IDiffNavigatorOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 771,
									"name": "alwaysRevealFirst",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 874,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 769,
									"name": "followsCaret",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 872,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 770,
									"name": "ignoreCharChanges",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 873,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										771,
										769,
										770
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 871,
									"character": 42
								}
							]
						},
						{
							"id": 2261,
							"name": "IDimension",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 2263,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2078,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2262,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2077,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2263,
										2262
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2076,
									"character": 31
								}
							]
						},
						{
							"id": 2225,
							"name": "IEditOperationBuilder",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A builder and helper for edit operations for a command."
							},
							"children": [
								{
									"id": 2226,
									"name": "addEditOperation",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2227,
											"name": "addEditOperation",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add a new edit operation (a replace operation)."
											},
											"parameters": [
												{
													"id": 2228,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The range to replace (delete). May be empty to represent a simple insert."
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2229,
													"name": "text",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The text to replace with. May be null to represent a simple delete.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2230,
													"name": "forceMoveMarkers",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2231,
									"name": "addTrackedEditOperation",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2232,
											"name": "addTrackedEditOperation",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add a new edit operation (a replace operation).\nThe inverse edits will be accessible in `ICursorStateComputerData.getInverseEditOperations()`"
											},
											"parameters": [
												{
													"id": 2233,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The range to replace (delete). May be empty to represent a simple insert."
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2234,
													"name": "text",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The text to replace with. May be null to represent a simple delete.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2235,
													"name": "forceMoveMarkers",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2236,
									"name": "trackSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2237,
											"name": "trackSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Track `selection` when applying edit operations.\nA best effort will be made to not grow/expand the selection.\nAn empty selection will clamp to a nearby character.",
												"returns": "A unique identifier.\n"
											},
											"parameters": [
												{
													"id": 2238,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The selection to track."
													},
													"type": {
														"type": "reference",
														"id": 485,
														"name": "Selection"
													}
												},
												{
													"id": 2239,
													"name": "trackPreviousOnEmpty",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, and the selection is empty, indicates whether the selection\n          should clamp to the previous or the next character."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2226,
										2231,
										2236
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1987,
									"character": 42
								}
							]
						},
						{
							"id": 2325,
							"name": "IEditor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An editor."
							},
							"children": [
								{
									"id": 2326,
									"name": "onDidDispose",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 2327,
											"name": "onDidDispose",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the editor has been disposed."
											},
											"parameters": [
												{
													"id": 2328,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2329,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2330,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 2331,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2332,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Dispose the editor."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2343,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2344,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Brings browser focus to the editor text"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2335,
									"name": "getEditorType",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2336,
											"name": "getEditorType",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the editor type. Please see `EditorType`.\nThis is to avoid an instanceof check"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2333,
									"name": "getId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2334,
											"name": "getId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a unique id for this editor instance."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2459,
									"name": "getModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2460,
											"name": "getModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the current model attached to this editor."
											},
											"type": {
												"type": "reference",
												"id": 2300,
												"name": "IEditorModel"
											}
										}
									]
								},
								{
									"id": 2357,
									"name": "getPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2358,
											"name": "getPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary position of the cursor."
											},
											"type": {
												"type": "reference",
												"id": 311,
												"name": "Position"
											}
										}
									]
								},
								{
									"id": 2394,
									"name": "getSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2395,
											"name": "getSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary selection of the editor."
											},
											"type": {
												"type": "reference",
												"id": 485,
												"name": "Selection"
											}
										}
									]
								},
								{
									"id": 2396,
									"name": "getSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2397,
											"name": "getSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all the selections of the editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 485,
													"name": "Selection"
												}
											}
										}
									]
								},
								{
									"id": 2347,
									"name": "getSupportedActions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2348,
											"name": "getSupportedActions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all actions associated with this editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2292,
													"name": "IEditorAction"
												}
											}
										}
									]
								},
								{
									"id": 2354,
									"name": "getVisibleColumnFromPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2355,
											"name": "getVisibleColumnFromPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Given a position, returns a column number that takes tab-widths into account."
											},
											"parameters": [
												{
													"id": 2356,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2345,
									"name": "hasTextFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2346,
											"name": "hasTextFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns true if the text inside this editor is focused (i.e. cursor is blinking)."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 2340,
									"name": "layout",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2341,
											"name": "layout",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Instructs the editor to remeasure its container. This method should\nbe called when the container of the editor gets resized.",
												"text": "If a dimension is passed in, the passed in value will be used.\n"
											},
											"parameters": [
												{
													"id": 2342,
													"name": "dimension",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2261,
														"name": "IDimension"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2351,
									"name": "restoreViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2352,
											"name": "restoreViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Restores the view state of the editor from a serializable object generated by `saveViewState`."
											},
											"parameters": [
												{
													"id": 2353,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2321,
														"name": "IEditorViewState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2362,
									"name": "revealLine",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2363,
											"name": "revealLine",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line."
											},
											"parameters": [
												{
													"id": 2364,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2365,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2366,
									"name": "revealLineInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2367,
											"name": "revealLineInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically."
											},
											"parameters": [
												{
													"id": 2368,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2369,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2370,
									"name": "revealLineInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2371,
											"name": "revealLineInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 2372,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2373,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2374,
									"name": "revealLineNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2375,
											"name": "revealLineNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 2376,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2377,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2410,
									"name": "revealLines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2411,
											"name": "revealLines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines."
											},
											"parameters": [
												{
													"id": 2412,
													"name": "startLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2413,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2414,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2415,
									"name": "revealLinesInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2416,
											"name": "revealLinesInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically."
											},
											"parameters": [
												{
													"id": 2417,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2418,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2419,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2420,
									"name": "revealLinesInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2421,
											"name": "revealLinesInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 2422,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2423,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2424,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2425,
									"name": "revealLinesNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2426,
											"name": "revealLinesNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 2427,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2428,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2429,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2378,
									"name": "revealPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2379,
											"name": "revealPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position."
											},
											"parameters": [
												{
													"id": 2380,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 2381,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2382,
									"name": "revealPositionInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2383,
											"name": "revealPositionInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically."
											},
											"parameters": [
												{
													"id": 2384,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 2385,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2386,
									"name": "revealPositionInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2387,
											"name": "revealPositionInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 2388,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 2389,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2390,
									"name": "revealPositionNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2391,
											"name": "revealPositionNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 2392,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 2393,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2430,
									"name": "revealRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2431,
											"name": "revealRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range."
											},
											"parameters": [
												{
													"id": 2432,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2433,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2438,
									"name": "revealRangeAtTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2439,
											"name": "revealRangeAtTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range at the top of the viewport."
											},
											"parameters": [
												{
													"id": 2440,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2441,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2434,
									"name": "revealRangeInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2435,
											"name": "revealRangeInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically."
											},
											"parameters": [
												{
													"id": 2436,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2437,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2442,
									"name": "revealRangeInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2443,
											"name": "revealRangeInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 2444,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2445,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2446,
									"name": "revealRangeNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2447,
											"name": "revealRangeNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 2448,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2449,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2450,
									"name": "revealRangeNearTopIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2451,
											"name": "revealRangeNearTopIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition. Only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 2452,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2453,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2349,
									"name": "saveViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2350,
											"name": "saveViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Saves current view state of the editor in a serializable object."
											},
											"type": {
												"type": "reference",
												"id": 2321,
												"name": "IEditorViewState"
											}
										}
									]
								},
								{
									"id": 2461,
									"name": "setModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2462,
											"name": "setModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the current model attached to this editor.\nIf the previous model was created by the editor via the value key in the options\nliteral object, it will be destroyed. Otherwise, if the previous model was set\nvia setModel, or the model key in the options literal object, the previous model\nwill not be destroyed.\nIt is safe to call setModel(null) to simply detach the current model from the editor."
											},
											"parameters": [
												{
													"id": 2463,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2300,
														"name": "IEditorModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2359,
									"name": "setPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2360,
											"name": "setPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary position of the cursor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 2361,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "New primary cursor's position\n"
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2398,
									"name": "setSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2399,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 2400,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										},
										{
											"id": 2401,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 2402,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										},
										{
											"id": 2403,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 2404,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 480,
														"name": "ISelection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										},
										{
											"id": 2405,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 2406,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 485,
														"name": "Selection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2407,
									"name": "setSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2408,
											"name": "setSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the selections for all the cursors of the editor.\nCursors will be removed or added, as necessary."
											},
											"parameters": [
												{
													"id": 2409,
													"name": "selections",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 480,
																"name": "ISelection"
															}
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2454,
									"name": "trigger",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2455,
											"name": "trigger",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Directly trigger a handler or an editor action."
											},
											"parameters": [
												{
													"id": 2456,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2457,
													"name": "handlerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The id of the handler or the id of a contribution."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2458,
													"name": "payload",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Extra data to be sent to the handler.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2337,
									"name": "updateOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2338,
											"name": "updateOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Update the editor's options after the editor has been created."
											},
											"parameters": [
												{
													"id": 2339,
													"name": "newOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2534,
														"name": "IEditorOptions"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Events",
									"kind": 8388608,
									"children": [
										2326
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2331,
										2343,
										2335,
										2333,
										2459,
										2357,
										2394,
										2396,
										2347,
										2354,
										2345,
										2340,
										2351,
										2362,
										2366,
										2370,
										2374,
										2410,
										2415,
										2420,
										2425,
										2378,
										2382,
										2386,
										2390,
										2430,
										2438,
										2434,
										2442,
										2446,
										2450,
										2349,
										2461,
										2359,
										2398,
										2407,
										2454,
										2337
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2184,
									"character": 28
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 3626,
									"name": "ICodeEditor"
								},
								{
									"type": "reference",
									"id": 4184,
									"name": "IDiffEditor"
								}
							]
						},
						{
							"id": 2292,
							"name": "IEditorAction",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 2295,
									"name": "alias",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2123,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2293,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2121,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2294,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2122,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2296,
									"name": "isSupported",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2297,
											"name": "isSupported",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 2298,
									"name": "run",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2299,
											"name": "run",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2295,
										2293,
										2294
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2296,
										2298
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2120,
									"character": 34
								}
							]
						},
						{
							"id": 2933,
							"name": "IEditorCommentsOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor comments"
							},
							"children": [
								{
									"id": 2935,
									"name": "ignoreEmptyLines",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Ignore empty lines when inserting line comments.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3290,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2934,
									"name": "insertSpace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Insert a space after the line comment token and inside the block comments tokens.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3285,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2935,
										2934
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3280,
									"character": 43
								}
							]
						},
						{
							"id": 3502,
							"name": "IEditorConstructionOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 3588,
									"name": "acceptSuggestionOnCommitCharacter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on provider defined characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3032,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2618,
										"name": "IEditorOptions.acceptSuggestionOnCommitCharacter"
									}
								},
								{
									"id": 3587,
									"name": "acceptSuggestionOnEnter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on ENTER.\nDefaults to 'on'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3027,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "smart"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2617,
										"name": "IEditorOptions.acceptSuggestionOnEnter"
									}
								},
								{
									"id": 3569,
									"name": "accessibilityPageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the number of lines in the editor that can be read out by a screen reader"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2943,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2599,
										"name": "IEditorOptions.accessibilityPageSize"
									}
								},
								{
									"id": 3568,
									"name": "accessibilitySupport",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's accessibility support.\nDefaults to 'auto'. It is best to leave this to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2939,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2598,
										"name": "IEditorOptions.accessibilitySupport"
									}
								},
								{
									"id": 3506,
									"name": "ariaLabel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The aria label for the editor's textarea (when it is focused)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2623,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2536,
										"name": "IEditorOptions.ariaLabel"
									}
								},
								{
									"id": 3577,
									"name": "autoClosingBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing brackets.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2978,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2607,
										"name": "IEditorOptions.autoClosingBrackets"
									}
								},
								{
									"id": 3579,
									"name": "autoClosingOvertype",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for typing over closing quotes or brackets."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2987,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2527,
										"name": "EditorAutoClosingOvertypeStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2609,
										"name": "IEditorOptions.autoClosingOvertype"
									}
								},
								{
									"id": 3578,
									"name": "autoClosingQuotes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing quotes.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2983,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2608,
										"name": "IEditorOptions.autoClosingQuotes"
									}
								},
								{
									"id": 3581,
									"name": "autoIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\nDefaults to advanced."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2997,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "advanced"
											},
											{
												"type": "literal",
												"value": "full"
											},
											{
												"type": "literal",
												"value": "brackets"
											},
											{
												"type": "literal",
												"value": "keep"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2611,
										"name": "IEditorOptions.autoIndent"
									}
								},
								{
									"id": 3580,
									"name": "autoSurround",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto surrounding.\nDefaults to always allowing auto surrounding."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2992,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2526,
										"name": "EditorAutoSurroundStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2610,
										"name": "IEditorOptions.autoSurround"
									}
								},
								{
									"id": 3546,
									"name": "automaticLayout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor will install an interval to check if its container dom node size has changed.\nEnabling this might have a severe performance impact.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2825,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2576,
										"name": "IEditorOptions.automaticLayout"
									}
								},
								{
									"id": 3602,
									"name": "codeActionsOnSaveTimeout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Timeout for running code actions on save."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3093,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2632,
										"name": "IEditorOptions.codeActionsOnSaveTimeout"
									}
								},
								{
									"id": 3598,
									"name": "codeLens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show code lens\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3077,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2628,
										"name": "IEditorOptions.codeLens"
									}
								},
								{
									"id": 3599,
									"name": "codeLensFontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font family. Defaults to editor font family."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3081,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2629,
										"name": "IEditorOptions.codeLensFontFamily"
									}
								},
								{
									"id": 3600,
									"name": "codeLensFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font size. Default to 90% of the editor font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3085,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2630,
										"name": "IEditorOptions.codeLensFontSize"
									}
								},
								{
									"id": 3558,
									"name": "colorDecorators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable inline color decorators and color picker rendering."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2890,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2588,
										"name": "IEditorOptions.colorDecorators"
									}
								},
								{
									"id": 3564,
									"name": "columnSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the selection with the mouse and keys is doing column selection.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2919,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2594,
										"name": "IEditorOptions.columnSelection"
									}
								},
								{
									"id": 3559,
									"name": "comments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behaviour of comments in the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2894,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2933,
										"name": "IEditorCommentsOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2589,
										"name": "IEditorOptions.comments"
									}
								},
								{
									"id": 3560,
									"name": "contextmenu",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable custom contextmenu.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2899,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2590,
										"name": "IEditorOptions.contextmenu"
									}
								},
								{
									"id": 3591,
									"name": "copyWithSyntaxHighlighting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Syntax highlighting is copied."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3044,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2621,
										"name": "IEditorOptions.copyWithSyntaxHighlighting"
									}
								},
								{
									"id": 3533,
									"name": "cursorBlinking",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\nDefaults to 'blink'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2759,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "blink"
											},
											{
												"type": "literal",
												"value": "smooth"
											},
											{
												"type": "literal",
												"value": "phase"
											},
											{
												"type": "literal",
												"value": "expand"
											},
											{
												"type": "literal",
												"value": "solid"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2563,
										"name": "IEditorOptions.cursorBlinking"
									}
								},
								{
									"id": 3536,
									"name": "cursorSmoothCaretAnimation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable smooth caret animation.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2774,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2566,
										"name": "IEditorOptions.cursorSmoothCaretAnimation"
									}
								},
								{
									"id": 3537,
									"name": "cursorStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor style, either 'block' or 'line'.\nDefaults to 'line'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2779,
											"character": 19
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "block"
											},
											{
												"type": "literal",
												"value": "underline"
											},
											{
												"type": "literal",
												"value": "line-thin"
											},
											{
												"type": "literal",
												"value": "block-outline"
											},
											{
												"type": "literal",
												"value": "underline-thin"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2567,
										"name": "IEditorOptions.cursorStyle"
									}
								},
								{
									"id": 3512,
									"name": "cursorSurroundingLines",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the minimal number of visible leading and trailing lines surrounding the cursor.\nDefaults to 0."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2655,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2542,
										"name": "IEditorOptions.cursorSurroundingLines"
									}
								},
								{
									"id": 3513,
									"name": "cursorSurroundingLinesStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls when `cursorSurroundingLines` should be enforced\nDefaults to `default`, `cursorSurroundingLines` is not enforced when cursor position is changed\nby mouse."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2661,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "all"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2543,
										"name": "IEditorOptions.cursorSurroundingLinesStyle"
									}
								},
								{
									"id": 3538,
									"name": "cursorWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of the cursor when cursorStyle is set to 'line'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2783,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2568,
										"name": "IEditorOptions.cursorWidth"
									}
								},
								{
									"id": 3623,
									"name": "definitionLinkOpensInPeek",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the definition link opens element in the peek widget.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3191,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2653,
										"name": "IEditorOptions.definitionLinkOpensInPeek"
									}
								},
								{
									"id": 3503,
									"name": "dimension",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The initial editor dimension (to avoid measuring the container)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4537,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 2261,
										"name": "IDimension"
									}
								},
								{
									"id": 3540,
									"name": "disableLayerHinting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers.\nThe usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2794,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2570,
										"name": "IEditorOptions.disableLayerHinting"
									}
								},
								{
									"id": 3541,
									"name": "disableMonospaceOptimizations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the optimizations for monospace fonts.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2799,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2571,
										"name": "IEditorOptions.disableMonospaceOptimizations"
									}
								},
								{
									"id": 3585,
									"name": "dragAndDrop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if the editor should allow to move selections via drag and drop.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3017,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2615,
										"name": "IEditorOptions.dragAndDrop"
									}
								},
								{
									"id": 3590,
									"name": "emptySelectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Copying without a selection copies the current line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3040,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2620,
										"name": "IEditorOptions.emptySelectionClipboard"
									}
								},
								{
									"id": 3522,
									"name": "extraEditorClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Class name to be added to the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2708,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2552,
										"name": "IEditorOptions.extraEditorClassName"
									}
								},
								{
									"id": 3562,
									"name": "fastScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "FastScrolling mulitplier speed when pressing `Alt`\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2909,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2592,
										"name": "IEditorOptions.fastScrollSensitivity"
									}
								},
								{
									"id": 3529,
									"name": "find",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior of the find widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2739,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 2951,
										"name": "IEditorFindOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2559,
										"name": "IEditorOptions.find"
									}
								},
								{
									"id": 3530,
									"name": "fixedOverflowWidgets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Display overflow widgets as `fixed`.\nDefaults to `false`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2744,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2560,
										"name": "IEditorOptions.fixedOverflowWidgets"
									}
								},
								{
									"id": 3603,
									"name": "folding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable code folding.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3098,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2633,
										"name": "IEditorOptions.folding"
									}
								},
								{
									"id": 3605,
									"name": "foldingHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlight for folded regions.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3108,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2635,
										"name": "IEditorOptions.foldingHighlight"
									}
								},
								{
									"id": 3604,
									"name": "foldingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\nDefaults to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3103,
											"character": 23
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "indentation"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2634,
										"name": "IEditorOptions.foldingStrategy"
									}
								},
								{
									"id": 3616,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font family"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3161,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2646,
										"name": "IEditorOptions.fontFamily"
									}
								},
								{
									"id": 3539,
									"name": "fontLigatures",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable font ligatures.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2788,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2569,
										"name": "IEditorOptions.fontLigatures"
									}
								},
								{
									"id": 3618,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3169,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2648,
										"name": "IEditorOptions.fontSize"
									}
								},
								{
									"id": 3617,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font weight"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3165,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2647,
										"name": "IEditorOptions.fontWeight"
									}
								},
								{
									"id": 3584,
									"name": "formatOnPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on paste.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3012,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2614,
										"name": "IEditorOptions.formatOnPaste"
									}
								},
								{
									"id": 3583,
									"name": "formatOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on type.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3007,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2613,
										"name": "IEditorOptions.formatOnType"
									}
								},
								{
									"id": 3518,
									"name": "glyphMargin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the rendering of the glyph margin.\nDefaults to true in vscode and to false in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2686,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2548,
										"name": "IEditorOptions.glyphMargin"
									}
								},
								{
									"id": 3572,
									"name": "gotoLocation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2955,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2959,
										"name": "IGotoLocationOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2602,
										"name": "IEditorOptions.gotoLocation"
									}
								},
								{
									"id": 3542,
									"name": "hideCursorInOverviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the cursor be hidden in the overview ruler.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2804,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2572,
										"name": "IEditorOptions.hideCursorInOverviewRuler"
									}
								},
								{
									"id": 3612,
									"name": "highlightActiveIndentGuide",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of the active indent guide.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3143,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2642,
										"name": "IEditorOptions.highlightActiveIndentGuide"
									}
								},
								{
									"id": 3556,
									"name": "hover",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's hover."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2881,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 2972,
										"name": "IEditorHoverOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2586,
										"name": "IEditorOptions.hover"
									}
								},
								{
									"id": 3505,
									"name": "inDiffEditor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This editor is used inside a diff editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2619,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2535,
										"name": "IEditorOptions.inDiffEditor"
									}
								},
								{
									"id": 3625,
									"name": "inlineHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the inline hints."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3199,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3020,
										"name": "IEditorInlineHintsOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2655,
										"name": "IEditorOptions.inlineHints"
									}
								},
								{
									"id": 3620,
									"name": "letterSpacing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The letter spacing"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3177,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2650,
										"name": "IEditorOptions.letterSpacing"
									}
								},
								{
									"id": 3601,
									"name": "lightbulb",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the code action lightbulb."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3089,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3017,
										"name": "IEditorLightbulbOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2631,
										"name": "IEditorOptions.lightbulb"
									}
								},
								{
									"id": 3519,
									"name": "lineDecorationsWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width reserved for line decorations (in px).\nLine decorations are placed between line numbers and the editor content.\nYou can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\nDefaults to 10."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2693,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2549,
										"name": "IEditorOptions.lineDecorationsWidth"
									}
								},
								{
									"id": 3619,
									"name": "lineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3173,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2649,
										"name": "IEditorOptions.lineHeight"
									}
								},
								{
									"id": 3511,
									"name": "lineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the rendering of line numbers.\nIf it is a function, it will be invoked when rendering a line number and the return value will be rendered.\nOtherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\nOtherwise, line numbers will not be rendered.\nDefaults to `on`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2650,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3049,
										"name": "LineNumbersType"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2541,
										"name": "IEditorOptions.lineNumbers"
									}
								},
								{
									"id": 3517,
									"name": "lineNumbersMinChars",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2681,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2547,
										"name": "IEditorOptions.lineNumbersMinChars"
									}
								},
								{
									"id": 3524,
									"name": "linkedEditing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable linked editing.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2718,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2554,
										"name": "IEditorOptions.linkedEditing"
									}
								},
								{
									"id": 3557,
									"name": "links",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable detecting links and making them clickable.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2886,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2587,
										"name": "IEditorOptions.links"
									}
								},
								{
									"id": 3608,
									"name": "matchBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of matching brackets.\nDefaults to 'always'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3123,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "never"
											},
											{
												"type": "literal",
												"value": "near"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2638,
										"name": "IEditorOptions.matchBrackets"
									}
								},
								{
									"id": 3528,
									"name": "minimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the minimap."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2735,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3025,
										"name": "IEditorMinimapOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2558,
										"name": "IEditorOptions.minimap"
									}
								},
								{
									"id": 3535,
									"name": "mouseStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the mouse pointer style, either 'text' or 'default' or 'copy'\nDefaults to 'text'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2769,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "text"
											},
											{
												"type": "literal",
												"value": "copy"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2565,
										"name": "IEditorOptions.mouseStyle"
									}
								},
								{
									"id": 3561,
									"name": "mouseWheelScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\nDefaults to 1."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2904,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2591,
										"name": "IEditorOptions.mouseWheelScrollSensitivity"
									}
								},
								{
									"id": 3534,
									"name": "mouseWheelZoom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2764,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2564,
										"name": "IEditorOptions.mouseWheelZoom"
									}
								},
								{
									"id": 3566,
									"name": "multiCursorMergeOverlapping",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Merge overlapping selections.\nDefaults to true"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2929,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2596,
										"name": "IEditorOptions.multiCursorMergeOverlapping"
									}
								},
								{
									"id": 3565,
									"name": "multiCursorModifier",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The modifier to be used to add multiple cursors with the mouse.\nDefaults to 'alt'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2924,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ctrlCmd"
											},
											{
												"type": "literal",
												"value": "alt"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2595,
										"name": "IEditorOptions.multiCursorModifier"
									}
								},
								{
									"id": 3567,
									"name": "multiCursorPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the behaviour when pasting a text with the line count equal to the cursor count.\nDefaults to 'spread'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2934,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "spread"
											},
											{
												"type": "literal",
												"value": "full"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2597,
										"name": "IEditorOptions.multiCursorPaste"
									}
								},
								{
									"id": 3597,
									"name": "occurrencesHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable semantic occurrences highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3072,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2627,
										"name": "IEditorOptions.occurrencesHighlight"
									}
								},
								{
									"id": 3504,
									"name": "overflowWidgetsDomNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Place overflow widgets inside an external DOM node.\nDefaults to an internal DOM node."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4542,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								},
								{
									"id": 3532,
									"name": "overviewRulerBorder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if a border should be drawn around the overview ruler.\nDefaults to `true`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2754,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2562,
										"name": "IEditorOptions.overviewRulerBorder"
									}
								},
								{
									"id": 3531,
									"name": "overviewRulerLanes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The number of vertical lanes the overview ruler should render.\nDefaults to 3."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2749,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2561,
										"name": "IEditorOptions.overviewRulerLanes"
									}
								},
								{
									"id": 3575,
									"name": "padding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the spacing around the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2969,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3034,
										"name": "IEditorPaddingOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2605,
										"name": "IEditorOptions.padding"
									}
								},
								{
									"id": 3576,
									"name": "parameterHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Parameter hint options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2973,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 3040,
										"name": "IEditorParameterHintOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2606,
										"name": "IEditorOptions.parameterHints"
									}
								},
								{
									"id": 3622,
									"name": "peekWidgetDefaultFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether to focus the inline editor in the peek widget by default.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3186,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "tree"
											},
											{
												"type": "literal",
												"value": "editor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2652,
										"name": "IEditorOptions.peekWidgetDefaultFocus"
									}
								},
								{
									"id": 3573,
									"name": "quickSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable quick suggestions (shadow suggestions)\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2960,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"id": 3044,
												"name": "IQuickSuggestionsOptions"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2603,
										"name": "IEditorOptions.quickSuggestions"
									}
								},
								{
									"id": 3574,
									"name": "quickSuggestionsDelay",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Quick suggestions show delay (in ms)\nDefaults to 10 (ms)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2965,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2604,
										"name": "IEditorOptions.quickSuggestionsDelay"
									}
								},
								{
									"id": 3523,
									"name": "readOnly",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor be read only.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2713,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2553,
										"name": "IEditorOptions.readOnly"
									}
								},
								{
									"id": 3525,
									"name": "renameOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "deprecated, use linkedEditing instead"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2722,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2555,
										"name": "IEditorOptions.renameOnType"
									}
								},
								{
									"id": 3610,
									"name": "renderControlCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of control characters.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3133,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2640,
										"name": "IEditorOptions.renderControlCharacters"
									}
								},
								{
									"id": 3514,
									"name": "renderFinalNewline",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render last line number when the file ends with a newline.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2666,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2544,
										"name": "IEditorOptions.renderFinalNewline"
									}
								},
								{
									"id": 3611,
									"name": "renderIndentGuides",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of indent guides.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3138,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2641,
										"name": "IEditorOptions.renderIndentGuides"
									}
								},
								{
									"id": 3613,
									"name": "renderLineHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of current line highlight.\nDefaults to all."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3148,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "gutter"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2643,
										"name": "IEditorOptions.renderLineHighlight"
									}
								},
								{
									"id": 3614,
									"name": "renderLineHighlightOnlyWhenFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control if the current line highlight should be rendered only the editor is focused.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3153,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2644,
										"name": "IEditorOptions.renderLineHighlightOnlyWhenFocus"
									}
								},
								{
									"id": 3526,
									"name": "renderValidationDecorations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor render validation decorations.\nDefaults to editable."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2727,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "editable"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2556,
										"name": "IEditorOptions.renderValidationDecorations"
									}
								},
								{
									"id": 3609,
									"name": "renderWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of whitespace.\nDefaults to none."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3128,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "boundary"
											},
											{
												"type": "literal",
												"value": "selection"
											},
											{
												"type": "literal",
												"value": "trailing"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2639,
										"name": "IEditorOptions.renderWhitespace"
									}
								},
								{
									"id": 3520,
									"name": "revealHorizontalRightPadding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\nThis virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\nDefaults to 30 (px)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2699,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2550,
										"name": "IEditorOptions.revealHorizontalRightPadding"
									}
								},
								{
									"id": 3521,
									"name": "roundedSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render the editor selection with rounded borders.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2704,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2551,
										"name": "IEditorOptions.roundedSelection"
									}
								},
								{
									"id": 3508,
									"name": "rulers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render vertical lines at the specified columns.\nDefaults to empty array."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2632,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "reference",
													"id": 3065,
													"name": "IRulerOption"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2538,
										"name": "IEditorOptions.rulers"
									}
								},
								{
									"id": 3544,
									"name": "scrollBeyondLastColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go beyond the last column by a number of columns.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2814,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2574,
										"name": "IEditorOptions.scrollBeyondLastColumn"
									}
								},
								{
									"id": 3543,
									"name": "scrollBeyondLastLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go one screen size after the last line.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2809,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2573,
										"name": "IEditorOptions.scrollBeyondLastLine"
									}
								},
								{
									"id": 3563,
									"name": "scrollPredominantAxis",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2914,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2593,
										"name": "IEditorOptions.scrollPredominantAxis"
									}
								},
								{
									"id": 3527,
									"name": "scrollbar",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the scrollbars."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2731,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3068,
										"name": "IEditorScrollbarOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2557,
										"name": "IEditorOptions.scrollbar"
									}
								},
								{
									"id": 3516,
									"name": "selectOnLineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the corresponding line be selected when clicking on the line number?\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2676,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2546,
										"name": "IEditorOptions.selectOnLineNumbers"
									}
								},
								{
									"id": 3510,
									"name": "selectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable Linux primary clipboard.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2642,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2540,
										"name": "IEditorOptions.selectionClipboard"
									}
								},
								{
									"id": 3596,
									"name": "selectionHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable selection highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3067,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2626,
										"name": "IEditorOptions.selectionHighlight"
									}
								},
								{
									"id": 3624,
									"name": "showDeprecated",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls strikethrough deprecated variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3195,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2654,
										"name": "IEditorOptions.showDeprecated"
									}
								},
								{
									"id": 3606,
									"name": "showFoldingControls",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\nDefaults to 'mouseover'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3113,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "mouseover"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2636,
										"name": "IEditorOptions.showFoldingControls"
									}
								},
								{
									"id": 3621,
									"name": "showUnused",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls fading out of unused variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3181,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2651,
										"name": "IEditorOptions.showUnused"
									}
								},
								{
									"id": 3571,
									"name": "smartSelect",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Smart select opptions;"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2951,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3133,
										"name": "ISmartSelectOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2601,
										"name": "IEditorOptions.smartSelect"
									}
								},
								{
									"id": 3545,
									"name": "smoothScrolling",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor animates scrolling to a position.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2819,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2575,
										"name": "IEditorOptions.smoothScrolling"
									}
								},
								{
									"id": 3589,
									"name": "snippetSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable snippet suggestions. Default to 'true'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3036,
											"character": 26
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "top"
											},
											{
												"type": "literal",
												"value": "bottom"
											},
											{
												"type": "literal",
												"value": "inline"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2619,
										"name": "IEditorOptions.snippetSuggestions"
									}
								},
								{
									"id": 3582,
									"name": "stickyTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Emulate selection behaviour of tab characters when using spaces for indentation.\nThis means selection will stick to tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3002,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2612,
										"name": "IEditorOptions.stickyTabStops"
									}
								},
								{
									"id": 3555,
									"name": "stopRenderingLineAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Performance guard: Stop rendering a line after x characters.\nDefaults to 10000.\nUse -1 to never stop rendering"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2877,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2585,
										"name": "IEditorOptions.stopRenderingLineAfter"
									}
								},
								{
									"id": 3570,
									"name": "suggest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Suggest options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2947,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3096,
										"name": "ISuggestOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2600,
										"name": "IEditorOptions.suggest"
									}
								},
								{
									"id": 3593,
									"name": "suggestFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size for the suggest widget.\nDefaults to the editor font size."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3053,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2623,
										"name": "IEditorOptions.suggestFontSize"
									}
								},
								{
									"id": 3594,
									"name": "suggestLineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height for the suggest widget.\nDefaults to the editor line height."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3058,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2624,
										"name": "IEditorOptions.suggestLineHeight"
									}
								},
								{
									"id": 3586,
									"name": "suggestOnTriggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the suggestion box to pop-up on trigger characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3022,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2616,
										"name": "IEditorOptions.suggestOnTriggerCharacters"
									}
								},
								{
									"id": 3592,
									"name": "suggestSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The history mode for suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3048,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "first"
											},
											{
												"type": "literal",
												"value": "recentlyUsed"
											},
											{
												"type": "literal",
												"value": "recentlyUsedByPrefix"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2622,
										"name": "IEditorOptions.suggestSelection"
									}
								},
								{
									"id": 3595,
									"name": "tabCompletion",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable tab completion."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3062,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "onlySnippets"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2625,
										"name": "IEditorOptions.tabCompletion"
									}
								},
								{
									"id": 3507,
									"name": "tabIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The `tabindex` property of the editor's textarea"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2627,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2537,
										"name": "IEditorOptions.tabIndex"
									}
								},
								{
									"id": 3607,
									"name": "unfoldOnClickAfterEndOfLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether clicking on the empty content after a folded line will unfold the line.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3118,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2637,
										"name": "IEditorOptions.unfoldOnClickAfterEndOfLine"
									}
								},
								{
									"id": 3515,
									"name": "unusualLineTerminators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Remove unusual line terminators like LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\nDefaults to 'prompt'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2671,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "prompt"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2545,
										"name": "IEditorOptions.unusualLineTerminators"
									}
								},
								{
									"id": 3615,
									"name": "useTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Inserting and deleting whitespace follows tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3157,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2645,
										"name": "IEditorOptions.useTabStops"
									}
								},
								{
									"id": 3509,
									"name": "wordSeparators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A string containing the word separators used when doing word navigation.\nDefaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2637,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2539,
										"name": "IEditorOptions.wordSeparators"
									}
								},
								{
									"id": 3547,
									"name": "wordWrap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to \"off\"."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2834,
											"character": 16
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "wordWrapColumn"
											},
											{
												"type": "literal",
												"value": "bounded"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2577,
										"name": "IEditorOptions.wordWrap"
									}
								},
								{
									"id": 3554,
									"name": "wordWrapBreakAfterCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced after these characters.\nDefaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2871,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2584,
										"name": "IEditorOptions.wordWrapBreakAfterCharacters"
									}
								},
								{
									"id": 3553,
									"name": "wordWrapBreakBeforeCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced before these characters.\nDefaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2866,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2583,
										"name": "IEditorOptions.wordWrapBreakBeforeCharacters"
									}
								},
								{
									"id": 3550,
									"name": "wordWrapColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to 80."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2851,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2580,
										"name": "IEditorOptions.wordWrapColumn"
									}
								},
								{
									"id": 3548,
									"name": "wordWrapOverride1",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrap` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2838,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2578,
										"name": "IEditorOptions.wordWrapOverride1"
									}
								},
								{
									"id": 3549,
									"name": "wordWrapOverride2",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrapOverride1` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2842,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2579,
										"name": "IEditorOptions.wordWrapOverride2"
									}
								},
								{
									"id": 3551,
									"name": "wrappingIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\nDefaults to 'same' in vscode and to 'none' in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2856,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "same"
											},
											{
												"type": "literal",
												"value": "indent"
											},
											{
												"type": "literal",
												"value": "deepIndent"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2581,
										"name": "IEditorOptions.wrappingIndent"
									}
								},
								{
									"id": 3552,
									"name": "wrappingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the wrapping strategy to use.\nDefaults to 'simple'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2861,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "simple"
											},
											{
												"type": "literal",
												"value": "advanced"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2582,
										"name": "IEditorOptions.wrappingStrategy"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3588,
										3587,
										3569,
										3568,
										3506,
										3577,
										3579,
										3578,
										3581,
										3580,
										3546,
										3602,
										3598,
										3599,
										3600,
										3558,
										3564,
										3559,
										3560,
										3591,
										3533,
										3536,
										3537,
										3512,
										3513,
										3538,
										3623,
										3503,
										3540,
										3541,
										3585,
										3590,
										3522,
										3562,
										3529,
										3530,
										3603,
										3605,
										3604,
										3616,
										3539,
										3618,
										3617,
										3584,
										3583,
										3518,
										3572,
										3542,
										3612,
										3556,
										3505,
										3625,
										3620,
										3601,
										3519,
										3619,
										3511,
										3517,
										3524,
										3557,
										3608,
										3528,
										3535,
										3561,
										3534,
										3566,
										3565,
										3567,
										3597,
										3504,
										3532,
										3531,
										3575,
										3576,
										3622,
										3573,
										3574,
										3523,
										3525,
										3610,
										3514,
										3611,
										3613,
										3614,
										3526,
										3609,
										3520,
										3521,
										3508,
										3544,
										3543,
										3563,
										3527,
										3516,
										3510,
										3596,
										3624,
										3606,
										3621,
										3571,
										3545,
										3589,
										3582,
										3555,
										3570,
										3593,
										3594,
										3586,
										3592,
										3595,
										3507,
										3607,
										3515,
										3615,
										3509,
										3547,
										3554,
										3553,
										3550,
										3548,
										3549,
										3551,
										3552
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4533,
									"character": 47
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 2534,
									"name": "IEditorOptions"
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 827,
									"name": "IStandaloneEditorConstructionOptions"
								}
							]
						},
						{
							"id": 2464,
							"name": "IEditorContribution",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An editor contribution that gets created every time a new editor gets created and gets disposed when the editor gets disposed."
							},
							"children": [
								{
									"id": 2465,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2466,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Dispose this contribution."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2469,
									"name": "restoreViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 2470,
											"name": "restoreViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Restore view state."
											},
											"parameters": [
												{
													"id": 2471,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2467,
									"name": "saveViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 2468,
											"name": "saveViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Store view state."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2465,
										2469,
										2467
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2382,
									"character": 40
								}
							]
						},
						{
							"id": 2951,
							"name": "IEditorFindOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor find widget"
							},
							"children": [
								{
									"id": 2955,
									"name": "addExtraSpaceOnTop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3371,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2954,
									"name": "autoFindInSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if Find in Selection flag is turned on in the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3370,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "never"
											},
											{
												"type": "literal",
												"value": "multiline"
											}
										]
									}
								},
								{
									"id": 2952,
									"name": "cursorMoveOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the cursor should move to find matches while typing."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3362,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2956,
									"name": "loop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3375,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2953,
									"name": "seedSearchStringFromSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if we seed search string in the Find Widget with editor selection."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3366,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2955,
										2954,
										2952,
										2956,
										2953
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3358,
									"character": 39
								}
							]
						},
						{
							"id": 2972,
							"name": "IEditorHoverOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor hover"
							},
							"children": [
								{
									"id": 2974,
									"name": "delay",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Delay for showing the hover.\nDefaults to 300."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3414,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2973,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the hover.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3409,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2975,
									"name": "sticky",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Is the hover sticky such that it can be clicked and its contents selected?\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3419,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2974,
										2973,
										2975
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3404,
									"character": 40
								}
							]
						},
						{
							"id": 3020,
							"name": "IEditorInlineHintsOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor inlineHints"
							},
							"children": [
								{
									"id": 3021,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the inline hints.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3559,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3023,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Font family of inline hints.\nDefaults to editor font family."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3569,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3022,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Font size of inline hints.\nDefault to 90% of the editor font size."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3564,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3021,
										3023,
										3022
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3554,
									"character": 46
								}
							]
						},
						{
							"id": 3017,
							"name": "IEditorLightbulbOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor lightbulb"
							},
							"children": [
								{
									"id": 3018,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the lightbulb code action.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3546,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3018
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3541,
									"character": 44
								}
							]
						},
						{
							"id": 3025,
							"name": "IEditorMinimapOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor minimap"
							},
							"children": [
								{
									"id": 3026,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the rendering of the minimap.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3582,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3031,
									"name": "maxColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Limit the width of the minimap to render at most a certain number of columns.\nDefaults to 120."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3607,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3030,
									"name": "renderCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render the actual text on a line (as opposed to color blocks).\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3602,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3032,
									"name": "scale",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Relative size of the font in the minimap. Defaults to 1."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3611,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3029,
									"name": "showSlider",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the rendering of the minimap slider.\nDefaults to 'mouseover'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3597,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "mouseover"
											}
										]
									}
								},
								{
									"id": 3027,
									"name": "side",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the side of the minimap in editor.\nDefaults to 'right'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3587,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "right"
											},
											{
												"type": "literal",
												"value": "left"
											}
										]
									}
								},
								{
									"id": 3028,
									"name": "size",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the minimap rendering mode.\nDefaults to 'actual'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3592,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "proportional"
											},
											{
												"type": "literal",
												"value": "fill"
											},
											{
												"type": "literal",
												"value": "fit"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3026,
										3031,
										3030,
										3032,
										3029,
										3027,
										3028
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3577,
									"character": 42
								}
							]
						},
						{
							"id": 3493,
							"name": "IEditorMouseEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A mouse event originating from the editor."
							},
							"children": [
								{
									"id": 3494,
									"name": "event",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4516,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 280,
										"name": "IMouseEvent"
									}
								},
								{
									"id": 3495,
									"name": "target",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4517,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"id": 3486,
										"name": "IMouseTarget"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3494,
										3495
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4515,
									"character": 38
								}
							]
						},
						{
							"id": 2927,
							"name": "IEditorOption",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 2930,
									"name": "defaultValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3274,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "V"
									}
								},
								{
									"id": 2928,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3272,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"name": "K1"
									}
								},
								{
									"id": 2929,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3273,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2930,
										2928,
										2929
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3271,
									"character": 34
								}
							],
							"typeParameter": [
								{
									"id": 2931,
									"name": "K1",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3146,
										"name": "EditorOption"
									}
								},
								{
									"id": 2932,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							]
						},
						{
							"id": 2534,
							"name": "IEditorOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for the editor."
							},
							"children": [
								{
									"id": 2618,
									"name": "acceptSuggestionOnCommitCharacter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on provider defined characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3032,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2617,
									"name": "acceptSuggestionOnEnter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on ENTER.\nDefaults to 'on'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3027,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "smart"
											}
										]
									}
								},
								{
									"id": 2599,
									"name": "accessibilityPageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the number of lines in the editor that can be read out by a screen reader"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2943,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2598,
									"name": "accessibilitySupport",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's accessibility support.\nDefaults to 'auto'. It is best to leave this to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2939,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											}
										]
									}
								},
								{
									"id": 2536,
									"name": "ariaLabel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The aria label for the editor's textarea (when it is focused)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2623,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2607,
									"name": "autoClosingBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing brackets.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2978,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									}
								},
								{
									"id": 2609,
									"name": "autoClosingOvertype",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for typing over closing quotes or brackets."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2987,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2527,
										"name": "EditorAutoClosingOvertypeStrategy"
									}
								},
								{
									"id": 2608,
									"name": "autoClosingQuotes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing quotes.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2983,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									}
								},
								{
									"id": 2611,
									"name": "autoIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\nDefaults to advanced."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2997,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "advanced"
											},
											{
												"type": "literal",
												"value": "full"
											},
											{
												"type": "literal",
												"value": "brackets"
											},
											{
												"type": "literal",
												"value": "keep"
											}
										]
									}
								},
								{
									"id": 2610,
									"name": "autoSurround",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto surrounding.\nDefaults to always allowing auto surrounding."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2992,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2526,
										"name": "EditorAutoSurroundStrategy"
									}
								},
								{
									"id": 2576,
									"name": "automaticLayout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor will install an interval to check if its container dom node size has changed.\nEnabling this might have a severe performance impact.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2825,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2632,
									"name": "codeActionsOnSaveTimeout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Timeout for running code actions on save."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3093,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2628,
									"name": "codeLens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show code lens\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3077,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2629,
									"name": "codeLensFontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font family. Defaults to editor font family."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3081,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2630,
									"name": "codeLensFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font size. Default to 90% of the editor font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3085,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2588,
									"name": "colorDecorators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable inline color decorators and color picker rendering."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2890,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2594,
									"name": "columnSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the selection with the mouse and keys is doing column selection.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2919,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2589,
									"name": "comments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behaviour of comments in the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2894,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2933,
										"name": "IEditorCommentsOptions"
									}
								},
								{
									"id": 2590,
									"name": "contextmenu",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable custom contextmenu.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2899,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2621,
									"name": "copyWithSyntaxHighlighting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Syntax highlighting is copied."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3044,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2563,
									"name": "cursorBlinking",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\nDefaults to 'blink'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2759,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "blink"
											},
											{
												"type": "literal",
												"value": "smooth"
											},
											{
												"type": "literal",
												"value": "phase"
											},
											{
												"type": "literal",
												"value": "expand"
											},
											{
												"type": "literal",
												"value": "solid"
											}
										]
									}
								},
								{
									"id": 2566,
									"name": "cursorSmoothCaretAnimation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable smooth caret animation.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2774,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2567,
									"name": "cursorStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor style, either 'block' or 'line'.\nDefaults to 'line'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2779,
											"character": 19
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "block"
											},
											{
												"type": "literal",
												"value": "underline"
											},
											{
												"type": "literal",
												"value": "line-thin"
											},
											{
												"type": "literal",
												"value": "block-outline"
											},
											{
												"type": "literal",
												"value": "underline-thin"
											}
										]
									}
								},
								{
									"id": 2542,
									"name": "cursorSurroundingLines",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the minimal number of visible leading and trailing lines surrounding the cursor.\nDefaults to 0."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2655,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2543,
									"name": "cursorSurroundingLinesStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls when `cursorSurroundingLines` should be enforced\nDefaults to `default`, `cursorSurroundingLines` is not enforced when cursor position is changed\nby mouse."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2661,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "all"
											}
										]
									}
								},
								{
									"id": 2568,
									"name": "cursorWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of the cursor when cursorStyle is set to 'line'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2783,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2653,
									"name": "definitionLinkOpensInPeek",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the definition link opens element in the peek widget.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3191,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2570,
									"name": "disableLayerHinting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers.\nThe usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2794,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2571,
									"name": "disableMonospaceOptimizations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the optimizations for monospace fonts.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2799,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2615,
									"name": "dragAndDrop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if the editor should allow to move selections via drag and drop.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3017,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2620,
									"name": "emptySelectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Copying without a selection copies the current line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3040,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2552,
									"name": "extraEditorClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Class name to be added to the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2708,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2592,
									"name": "fastScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "FastScrolling mulitplier speed when pressing `Alt`\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2909,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2559,
									"name": "find",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior of the find widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2739,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 2951,
										"name": "IEditorFindOptions"
									}
								},
								{
									"id": 2560,
									"name": "fixedOverflowWidgets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Display overflow widgets as `fixed`.\nDefaults to `false`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2744,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2633,
									"name": "folding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable code folding.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3098,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2635,
									"name": "foldingHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlight for folded regions.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3108,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2634,
									"name": "foldingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\nDefaults to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3103,
											"character": 23
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "indentation"
											}
										]
									}
								},
								{
									"id": 2646,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font family"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3161,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2569,
									"name": "fontLigatures",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable font ligatures.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2788,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								},
								{
									"id": 2648,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3169,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2647,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font weight"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3165,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2614,
									"name": "formatOnPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on paste.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3012,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2613,
									"name": "formatOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on type.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3007,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2548,
									"name": "glyphMargin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the rendering of the glyph margin.\nDefaults to true in vscode and to false in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2686,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2602,
									"name": "gotoLocation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2955,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2959,
										"name": "IGotoLocationOptions"
									}
								},
								{
									"id": 2572,
									"name": "hideCursorInOverviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the cursor be hidden in the overview ruler.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2804,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2642,
									"name": "highlightActiveIndentGuide",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of the active indent guide.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3143,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2586,
									"name": "hover",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's hover."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2881,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 2972,
										"name": "IEditorHoverOptions"
									}
								},
								{
									"id": 2535,
									"name": "inDiffEditor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This editor is used inside a diff editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2619,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2655,
									"name": "inlineHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the inline hints."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3199,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3020,
										"name": "IEditorInlineHintsOptions"
									}
								},
								{
									"id": 2650,
									"name": "letterSpacing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The letter spacing"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3177,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2631,
									"name": "lightbulb",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the code action lightbulb."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3089,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3017,
										"name": "IEditorLightbulbOptions"
									}
								},
								{
									"id": 2549,
									"name": "lineDecorationsWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width reserved for line decorations (in px).\nLine decorations are placed between line numbers and the editor content.\nYou can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\nDefaults to 10."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2693,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 2649,
									"name": "lineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3173,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2541,
									"name": "lineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the rendering of line numbers.\nIf it is a function, it will be invoked when rendering a line number and the return value will be rendered.\nOtherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\nOtherwise, line numbers will not be rendered.\nDefaults to `on`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2650,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3049,
										"name": "LineNumbersType"
									}
								},
								{
									"id": 2547,
									"name": "lineNumbersMinChars",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2681,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2554,
									"name": "linkedEditing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable linked editing.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2718,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2587,
									"name": "links",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable detecting links and making them clickable.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2886,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2638,
									"name": "matchBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of matching brackets.\nDefaults to 'always'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3123,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "never"
											},
											{
												"type": "literal",
												"value": "near"
											}
										]
									}
								},
								{
									"id": 2558,
									"name": "minimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the minimap."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2735,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3025,
										"name": "IEditorMinimapOptions"
									}
								},
								{
									"id": 2565,
									"name": "mouseStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the mouse pointer style, either 'text' or 'default' or 'copy'\nDefaults to 'text'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2769,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "text"
											},
											{
												"type": "literal",
												"value": "copy"
											}
										]
									}
								},
								{
									"id": 2591,
									"name": "mouseWheelScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\nDefaults to 1."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2904,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2564,
									"name": "mouseWheelZoom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2764,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2596,
									"name": "multiCursorMergeOverlapping",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Merge overlapping selections.\nDefaults to true"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2929,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2595,
									"name": "multiCursorModifier",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The modifier to be used to add multiple cursors with the mouse.\nDefaults to 'alt'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2924,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ctrlCmd"
											},
											{
												"type": "literal",
												"value": "alt"
											}
										]
									}
								},
								{
									"id": 2597,
									"name": "multiCursorPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the behaviour when pasting a text with the line count equal to the cursor count.\nDefaults to 'spread'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2934,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "spread"
											},
											{
												"type": "literal",
												"value": "full"
											}
										]
									}
								},
								{
									"id": 2627,
									"name": "occurrencesHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable semantic occurrences highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3072,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2562,
									"name": "overviewRulerBorder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if a border should be drawn around the overview ruler.\nDefaults to `true`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2754,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2561,
									"name": "overviewRulerLanes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The number of vertical lanes the overview ruler should render.\nDefaults to 3."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2749,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2605,
									"name": "padding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the spacing around the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2969,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3034,
										"name": "IEditorPaddingOptions"
									}
								},
								{
									"id": 2606,
									"name": "parameterHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Parameter hint options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2973,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 3040,
										"name": "IEditorParameterHintOptions"
									}
								},
								{
									"id": 2652,
									"name": "peekWidgetDefaultFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether to focus the inline editor in the peek widget by default.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3186,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "tree"
											},
											{
												"type": "literal",
												"value": "editor"
											}
										]
									}
								},
								{
									"id": 2603,
									"name": "quickSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable quick suggestions (shadow suggestions)\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2960,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"id": 3044,
												"name": "IQuickSuggestionsOptions"
											}
										]
									}
								},
								{
									"id": 2604,
									"name": "quickSuggestionsDelay",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Quick suggestions show delay (in ms)\nDefaults to 10 (ms)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2965,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2553,
									"name": "readOnly",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor be read only.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2713,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2555,
									"name": "renameOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "deprecated, use linkedEditing instead"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2722,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2640,
									"name": "renderControlCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of control characters.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3133,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2544,
									"name": "renderFinalNewline",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render last line number when the file ends with a newline.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2666,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2641,
									"name": "renderIndentGuides",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of indent guides.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3138,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2643,
									"name": "renderLineHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of current line highlight.\nDefaults to all."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3148,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "gutter"
											}
										]
									}
								},
								{
									"id": 2644,
									"name": "renderLineHighlightOnlyWhenFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control if the current line highlight should be rendered only the editor is focused.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3153,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2556,
									"name": "renderValidationDecorations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor render validation decorations.\nDefaults to editable."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2727,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "editable"
											}
										]
									}
								},
								{
									"id": 2639,
									"name": "renderWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of whitespace.\nDefaults to none."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3128,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "boundary"
											},
											{
												"type": "literal",
												"value": "selection"
											},
											{
												"type": "literal",
												"value": "trailing"
											}
										]
									}
								},
								{
									"id": 2550,
									"name": "revealHorizontalRightPadding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\nThis virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\nDefaults to 30 (px)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2699,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2551,
									"name": "roundedSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render the editor selection with rounded borders.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2704,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2538,
									"name": "rulers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render vertical lines at the specified columns.\nDefaults to empty array."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2632,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "reference",
													"id": 3065,
													"name": "IRulerOption"
												}
											]
										}
									}
								},
								{
									"id": 2574,
									"name": "scrollBeyondLastColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go beyond the last column by a number of columns.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2814,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2573,
									"name": "scrollBeyondLastLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go one screen size after the last line.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2809,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2593,
									"name": "scrollPredominantAxis",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2914,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2557,
									"name": "scrollbar",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the scrollbars."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2731,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3068,
										"name": "IEditorScrollbarOptions"
									}
								},
								{
									"id": 2546,
									"name": "selectOnLineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the corresponding line be selected when clicking on the line number?\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2676,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2540,
									"name": "selectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable Linux primary clipboard.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2642,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2626,
									"name": "selectionHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable selection highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3067,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2654,
									"name": "showDeprecated",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls strikethrough deprecated variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3195,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2636,
									"name": "showFoldingControls",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\nDefaults to 'mouseover'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3113,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "mouseover"
											}
										]
									}
								},
								{
									"id": 2651,
									"name": "showUnused",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls fading out of unused variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3181,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2601,
									"name": "smartSelect",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Smart select opptions;"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2951,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3133,
										"name": "ISmartSelectOptions"
									}
								},
								{
									"id": 2575,
									"name": "smoothScrolling",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor animates scrolling to a position.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2819,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2619,
									"name": "snippetSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable snippet suggestions. Default to 'true'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3036,
											"character": 26
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "top"
											},
											{
												"type": "literal",
												"value": "bottom"
											},
											{
												"type": "literal",
												"value": "inline"
											}
										]
									}
								},
								{
									"id": 2612,
									"name": "stickyTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Emulate selection behaviour of tab characters when using spaces for indentation.\nThis means selection will stick to tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3002,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2585,
									"name": "stopRenderingLineAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Performance guard: Stop rendering a line after x characters.\nDefaults to 10000.\nUse -1 to never stop rendering"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2877,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2600,
									"name": "suggest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Suggest options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2947,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3096,
										"name": "ISuggestOptions"
									}
								},
								{
									"id": 2623,
									"name": "suggestFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size for the suggest widget.\nDefaults to the editor font size."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3053,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2624,
									"name": "suggestLineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height for the suggest widget.\nDefaults to the editor line height."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3058,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2616,
									"name": "suggestOnTriggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the suggestion box to pop-up on trigger characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3022,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2622,
									"name": "suggestSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The history mode for suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3048,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "first"
											},
											{
												"type": "literal",
												"value": "recentlyUsed"
											},
											{
												"type": "literal",
												"value": "recentlyUsedByPrefix"
											}
										]
									}
								},
								{
									"id": 2625,
									"name": "tabCompletion",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable tab completion."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3062,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "onlySnippets"
											}
										]
									}
								},
								{
									"id": 2537,
									"name": "tabIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The `tabindex` property of the editor's textarea"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2627,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2637,
									"name": "unfoldOnClickAfterEndOfLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether clicking on the empty content after a folded line will unfold the line.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3118,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2545,
									"name": "unusualLineTerminators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Remove unusual line terminators like LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\nDefaults to 'prompt'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2671,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "prompt"
											}
										]
									}
								},
								{
									"id": 2645,
									"name": "useTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Inserting and deleting whitespace follows tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3157,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2539,
									"name": "wordSeparators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A string containing the word separators used when doing word navigation.\nDefaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2637,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2577,
									"name": "wordWrap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to \"off\"."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2834,
											"character": 16
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "wordWrapColumn"
											},
											{
												"type": "literal",
												"value": "bounded"
											}
										]
									}
								},
								{
									"id": 2584,
									"name": "wordWrapBreakAfterCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced after these characters.\nDefaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2871,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2583,
									"name": "wordWrapBreakBeforeCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced before these characters.\nDefaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2866,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2580,
									"name": "wordWrapColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to 80."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2851,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2578,
									"name": "wordWrapOverride1",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrap` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2838,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									}
								},
								{
									"id": 2579,
									"name": "wordWrapOverride2",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrapOverride1` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2842,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									}
								},
								{
									"id": 2581,
									"name": "wrappingIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\nDefaults to 'same' in vscode and to 'none' in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2856,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "same"
											},
											{
												"type": "literal",
												"value": "indent"
											},
											{
												"type": "literal",
												"value": "deepIndent"
											}
										]
									}
								},
								{
									"id": 2582,
									"name": "wrappingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the wrapping strategy to use.\nDefaults to 'simple'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2861,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "simple"
											},
											{
												"type": "literal",
												"value": "advanced"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2618,
										2617,
										2599,
										2598,
										2536,
										2607,
										2609,
										2608,
										2611,
										2610,
										2576,
										2632,
										2628,
										2629,
										2630,
										2588,
										2594,
										2589,
										2590,
										2621,
										2563,
										2566,
										2567,
										2542,
										2543,
										2568,
										2653,
										2570,
										2571,
										2615,
										2620,
										2552,
										2592,
										2559,
										2560,
										2633,
										2635,
										2634,
										2646,
										2569,
										2648,
										2647,
										2614,
										2613,
										2548,
										2602,
										2572,
										2642,
										2586,
										2535,
										2655,
										2650,
										2631,
										2549,
										2649,
										2541,
										2547,
										2554,
										2587,
										2638,
										2558,
										2565,
										2591,
										2564,
										2596,
										2595,
										2597,
										2627,
										2562,
										2561,
										2605,
										2606,
										2652,
										2603,
										2604,
										2553,
										2555,
										2640,
										2544,
										2641,
										2643,
										2644,
										2556,
										2639,
										2550,
										2551,
										2538,
										2574,
										2573,
										2593,
										2557,
										2546,
										2540,
										2626,
										2654,
										2636,
										2651,
										2601,
										2575,
										2619,
										2612,
										2585,
										2600,
										2623,
										2624,
										2616,
										2622,
										2625,
										2537,
										2637,
										2545,
										2645,
										2539,
										2577,
										2584,
										2583,
										2580,
										2578,
										2579,
										2581,
										2582
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2615,
									"character": 35
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 2656,
									"name": "IDiffEditorOptions"
								},
								{
									"type": "reference",
									"id": 3502,
									"name": "IEditorConstructionOptions"
								}
							]
						},
						{
							"id": 1853,
							"name": "IEditorOverrideServices",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1237,
									"character": 44
								}
							],
							"indexSignature": {
								"id": 1854,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1855,
										"name": "index",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 3034,
							"name": "IEditorPaddingOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor padding"
							},
							"children": [
								{
									"id": 3036,
									"name": "bottom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Spacing between bottom edge of editor and last line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3627,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3035,
									"name": "top",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Spacing between top edge of editor and first line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3623,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3036,
										3035
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3619,
									"character": 42
								}
							]
						},
						{
							"id": 3040,
							"name": "IEditorParameterHintOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for parameter hints"
							},
							"children": [
								{
									"id": 3042,
									"name": "cycle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable cycling of parameter hints.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3648,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3041,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable parameter hints.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3643,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3042,
										3041
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3638,
									"character": 48
								}
							]
						},
						{
							"id": 3068,
							"name": "IEditorScrollbarOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor scrollbars"
							},
							"children": [
								{
									"id": 3076,
									"name": "alwaysConsumeMouseWheel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Always consume mouse wheel events (always call preventDefault() and stopPropagation() on the browser events).\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3727,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3069,
									"name": "arrowSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The size of arrows (if displayed).\nDefaults to 11."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3692,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3075,
									"name": "handleMouseWheel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Listen to mouse wheel events and react to them by scrolling.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3722,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3071,
									"name": "horizontal",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render horizontal scrollbar.\nDefaults to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3702,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "visible"
											},
											{
												"type": "literal",
												"value": "hidden"
											}
										]
									}
								},
								{
									"id": 3074,
									"name": "horizontalHasArrows",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render arrows at the left and right of the horizontal scrollbar.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3717,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3077,
									"name": "horizontalScrollbarSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Height in pixels for the horizontal scrollbar.\nDefaults to 10 (px)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3732,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3080,
									"name": "horizontalSliderSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Height in pixels for the horizontal slider.\nDefaults to `horizontalScrollbarSize`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3747,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3081,
									"name": "scrollByPage",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Scroll gutter clicks move by page vs jump to position.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3752,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3072,
									"name": "useShadows",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Cast horizontal and vertical shadows when the content is scrolled.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3707,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3070,
									"name": "vertical",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render vertical scrollbar.\nDefaults to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3697,
											"character": 16
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "visible"
											},
											{
												"type": "literal",
												"value": "hidden"
											}
										]
									}
								},
								{
									"id": 3073,
									"name": "verticalHasArrows",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render arrows at the top and bottom of the vertical scrollbar.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3712,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3078,
									"name": "verticalScrollbarSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Width in pixels for the vertical scrollbar.\nDefaults to 10 (px)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3737,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3079,
									"name": "verticalSliderSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Width in pixels for the vertical slider.\nDefaults to `verticalScrollbarSize`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3742,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3076,
										3069,
										3075,
										3071,
										3074,
										3077,
										3080,
										3081,
										3072,
										3070,
										3073,
										3078,
										3079
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3687,
									"character": 44
								}
							]
						},
						{
							"id": 815,
							"name": "IGlobalEditorOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Options which apply for all editors."
							},
							"children": [
								{
									"id": 818,
									"name": "detectIndentation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether `tabSize` and `insertSpaces` will be automatically detected when a file is opened based on the file contents.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1119,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 817,
									"name": "insertSpaces",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Insert spaces when pressing `Tab`.\nThis setting is overridden based on the file contents when `detectIndentation` is on.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1114,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 820,
									"name": "largeFileOptimizations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Special handling for large files to disable certain memory intensive features.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1129,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 825,
									"name": "maxTokenizationLineLength",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Lines above this length will not be tokenized for performance reasons.\nDefaults to 20000."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1156,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 823,
									"name": "semanticHighlighting.enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the semanticHighlighting is shown for the languages that support it.\ntrue: semanticHighlighting is enabled for all themes\nfalse: semanticHighlighting is disabled for all themes\n'configuredByTheme': semanticHighlighting is controlled by the current color theme's semanticHighlighting setting.\nDefaults to 'byTheme'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1138,
											"character": 55
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": "configuredByTheme"
											}
										]
									}
								},
								{
									"id": 824,
									"name": "stablePeek",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Keep peek editors open even when double clicking their content or when hitting `Escape`.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1151,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 816,
									"name": "tabSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The number of spaces a tab is equal to.\nThis setting is overridden based on the file contents when `detectIndentation` is on.\nDefaults to 4."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1108,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 826,
									"name": "theme",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Theme to be used for rendering.\nThe current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black'.\nYou can create custom themes via `monaco.editor.defineTheme`.\nTo switch a theme, use `monaco.editor.setTheme`"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1163,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 819,
									"name": "trimAutoWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Remove trailing auto inserted whitespace.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1124,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 821,
									"name": "wordBasedSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether completions should be computed based on words in the document.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1134,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 822,
									"name": "wordBasedSuggestionsOnlySameLanguage",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether word based completions should be included from opened documents of the same language or any language."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1138,
											"character": 44
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										818,
										817,
										820,
										825,
										823,
										824,
										816,
										826,
										819,
										821,
										822
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1102,
									"character": 41
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 827,
									"name": "IStandaloneEditorConstructionOptions"
								}
							]
						},
						{
							"id": 2959,
							"name": "IGotoLocationOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for go to location"
							},
							"children": [
								{
									"id": 2968,
									"name": "alternativeDeclarationCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3394,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2966,
									"name": "alternativeDefinitionCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3392,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2969,
									"name": "alternativeImplementationCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3395,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2970,
									"name": "alternativeReferenceCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3396,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2967,
									"name": "alternativeTypeDefinitionCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3393,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2960,
									"name": "multiple",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3386,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2958,
										"name": "GoToLocationValues"
									}
								},
								{
									"id": 2963,
									"name": "multipleDeclarations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3389,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"id": 2958,
										"name": "GoToLocationValues"
									}
								},
								{
									"id": 2961,
									"name": "multipleDefinitions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3387,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2958,
										"name": "GoToLocationValues"
									}
								},
								{
									"id": 2964,
									"name": "multipleImplementations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3390,
											"character": 31
										}
									],
									"type": {
										"type": "reference",
										"id": 2958,
										"name": "GoToLocationValues"
									}
								},
								{
									"id": 2965,
									"name": "multipleReferences",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3391,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"id": 2958,
										"name": "GoToLocationValues"
									}
								},
								{
									"id": 2962,
									"name": "multipleTypeDefinitions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3388,
											"character": 31
										}
									],
									"type": {
										"type": "reference",
										"id": 2958,
										"name": "GoToLocationValues"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2968,
										2966,
										2969,
										2970,
										2967,
										2960,
										2963,
										2961,
										2964,
										2965,
										2962
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3385,
									"character": 41
								}
							]
						},
						{
							"id": 1967,
							"name": "IIdentifiedSingleEditOperation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A single edit operation, that has an identifier."
							},
							"children": [
								{
									"id": 1970,
									"name": "forceMoveMarkers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This indicates that this operation has \"insert\" semantics.\ni.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1570,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1968,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The range to replace. This can be empty to emulate a simple insert."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1561,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 1969,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The text to replace with. This can be null to emulate a simple delete."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1565,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1970,
										1968,
										1969
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1557,
									"character": 51
								}
							]
						},
						{
							"id": 2278,
							"name": "ILineChange",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A line change"
							},
							"children": [
								{
									"id": 2279,
									"name": "charChanges",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2105,
											"character": 28
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2269,
											"name": "ICharChange"
										}
									}
								},
								{
									"id": 2283,
									"name": "modifiedEndLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2088,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2268,
										"name": "IChange.modifiedEndLineNumber"
									}
								},
								{
									"id": 2282,
									"name": "modifiedStartLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2087,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2267,
										"name": "IChange.modifiedStartLineNumber"
									}
								},
								{
									"id": 2281,
									"name": "originalEndLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2086,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2266,
										"name": "IChange.originalEndLineNumber"
									}
								},
								{
									"id": 2280,
									"name": "originalStartLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2085,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2265,
										"name": "IChange.originalStartLineNumber"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2279,
										2283,
										2282,
										2281,
										2280
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2104,
									"character": 32
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 2264,
									"name": "IChange"
								}
							]
						},
						{
							"id": 1856,
							"name": "IMarker",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1860,
									"name": "code",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1245,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1861,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1863,
															"name": "target",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 1247,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"id": 68,
																"name": "Uri"
															}
														},
														{
															"id": 1862,
															"name": "value",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 1246,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1863,
																1862
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1869,
									"name": "endColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1254,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1868,
									"name": "endLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1253,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1864,
									"name": "message",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1249,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1857,
									"name": "owner",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1242,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1870,
									"name": "relatedInformation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1255,
											"character": 26
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1886,
											"name": "IRelatedInformation"
										}
									}
								},
								{
									"id": 1858,
									"name": "resource",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1243,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 1859,
									"name": "severity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1244,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 41,
										"name": "MarkerSeverity"
									}
								},
								{
									"id": 1865,
									"name": "source",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1250,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1867,
									"name": "startColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1252,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1866,
									"name": "startLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1251,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1871,
									"name": "tags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1256,
											"character": 12
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 38,
											"name": "MarkerTag"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1860,
										1869,
										1868,
										1864,
										1857,
										1870,
										1858,
										1859,
										1865,
										1867,
										1866,
										1871
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1241,
									"character": 28
								}
							]
						},
						{
							"id": 1872,
							"name": "IMarkerData",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A structure defining a problem/warning/etc."
							},
							"children": [
								{
									"id": 1873,
									"name": "code",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1263,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1874,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1876,
															"name": "target",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 1265,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"id": 68,
																"name": "Uri"
															}
														},
														{
															"id": 1875,
															"name": "value",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 1264,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1876,
																1875
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1883,
									"name": "endColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1273,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1882,
									"name": "endLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1272,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1878,
									"name": "message",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1268,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1884,
									"name": "relatedInformation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1274,
											"character": 26
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1886,
											"name": "IRelatedInformation"
										}
									}
								},
								{
									"id": 1877,
									"name": "severity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1267,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 41,
										"name": "MarkerSeverity"
									}
								},
								{
									"id": 1879,
									"name": "source",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1269,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1881,
									"name": "startColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1271,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1880,
									"name": "startLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1270,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1885,
									"name": "tags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1275,
											"character": 12
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 38,
											"name": "MarkerTag"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1873,
										1883,
										1882,
										1878,
										1884,
										1877,
										1879,
										1881,
										1880,
										1885
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1262,
									"character": 32
								}
							]
						},
						{
							"id": 2258,
							"name": "IModelChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An event describing that an editor has had its model reset (i.e. `editor.setModel()`)."
							},
							"children": [
								{
									"id": 2260,
									"name": "newModelUrl",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The `uri` of the new model or null."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2073,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 2259,
									"name": "oldModelUrl",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The `uri` of the previous model or null."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2069,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2260,
										2259
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2065,
									"character": 39
								}
							]
						},
						{
							"id": 2480,
							"name": "IModelContentChange",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 2481,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The range that got replaced."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2429,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 2483,
									"name": "rangeLength",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The length of the range that got replaced."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2437,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2482,
									"name": "rangeOffset",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The offset of the range that got replaced."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2433,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2484,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The new text for the range."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2441,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2481,
										2483,
										2482,
										2484
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2425,
									"character": 40
								}
							]
						},
						{
							"id": 2485,
							"name": "IModelContentChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An event describing a change in the text of a model."
							},
							"children": [
								{
									"id": 2486,
									"name": "changes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2448,
											"character": 24
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2480,
											"name": "IModelContentChange"
										}
									}
								},
								{
									"id": 2487,
									"name": "eol",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The (new) end-of-line character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2452,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2491,
									"name": "isFlush",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Flag that indicates that all decorations were lost with this edit.\nThe model has been reset to a new value."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2469,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2490,
									"name": "isRedoing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Flag that indicates that this event was generated while redoing."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2464,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2489,
									"name": "isUndoing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Flag that indicates that this event was generated while undoing."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2460,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2488,
									"name": "versionId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The new version id the model has transitioned to."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2456,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2486,
										2487,
										2491,
										2490,
										2489,
										2488
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2447,
									"character": 46
								}
							]
						},
						{
							"id": 1944,
							"name": "IModelDecoration",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A decoration in the model."
							},
							"children": [
								{
									"id": 1945,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Identifier for a decoration."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1455,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1948,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Options associated with this decoration."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1467,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"id": 1924,
										"name": "IModelDecorationOptions"
									}
								},
								{
									"id": 1946,
									"name": "ownerId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Identifier for a decoration's owner."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1459,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1947,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Range that this decoration covers."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1463,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1945,
										1948,
										1946,
										1947
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1451,
									"character": 37
								}
							]
						},
						{
							"id": 1920,
							"name": "IModelDecorationMinimapOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Options for rendering a model decoration in the overview ruler."
							},
							"children": [
								{
									"id": 1922,
									"name": "color",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "CSS color to render.\ne.g.: rgba(100, 100, 100, 0.5) or a color from the color registry"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1332,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1903,
												"name": "ThemeColor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1914,
										"name": "IDecorationOptions.color"
									}
								},
								{
									"id": 1923,
									"name": "darkColor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "CSS color to render.\ne.g.: rgba(100, 100, 100, 0.5) or a color from the color registry"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1337,
											"character": 17
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1903,
												"name": "ThemeColor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "IDecorationOptions.darkColor"
									}
								},
								{
									"id": 1921,
									"name": "position",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The position in the overview ruler."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1357,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 1910,
										"name": "MinimapPosition"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1922,
										1923,
										1921
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1353,
									"character": 51
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 1913,
									"name": "IDecorationOptions"
								}
							]
						},
						{
							"id": 1924,
							"name": "IModelDecorationOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Options for a model decoration."
							},
							"children": [
								{
									"id": 1940,
									"name": "afterContentClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, the decoration will be rendered after the text with this CSS class name."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1431,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1939,
									"name": "beforeContentClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, the decoration will be rendered before the text with this CSS class name."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1427,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1926,
									"name": "className",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "CSS class name describing the decoration."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1372,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1935,
									"name": "firstLineDecorationClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, the decoration will be rendered in the lines decorations with this CSS class name, but only for the first line in case of line wrapping."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1409,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1933,
									"name": "glyphMarginClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, the decoration will be rendered in the glyph margin with this CSS class name."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1401,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1927,
									"name": "glyphMarginHoverMessage",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Message to be rendered when hovering over the glyph margin decoration."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1376,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 255,
												"name": "IMarkdownString"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 255,
													"name": "IMarkdownString"
												}
											}
										]
									}
								},
								{
									"id": 1928,
									"name": "hoverMessage",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Array of MarkdownString to render as the decoration message."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1380,
											"character": 20
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 255,
												"name": "IMarkdownString"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 255,
													"name": "IMarkdownString"
												}
											}
										]
									}
								},
								{
									"id": 1937,
									"name": "inlineClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, the decoration will be rendered inline with the text with this CSS class name.\nPlease use this only for CSS rules that must impact the text. For example, use `className`\nto have a background color decoration."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1419,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1938,
									"name": "inlineClassNameAffectsLetterSpacing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If there is an `inlineClassName` which affects letter spacing."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1423,
											"character": 43
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1929,
									"name": "isWholeLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the decoration expand to encompass a whole line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1384,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1934,
									"name": "linesDecorationsClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, the decoration will be rendered in the lines decorations with this CSS class name."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1405,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1936,
									"name": "marginClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, the decoration will be rendered in the margin (covering its full width) with this CSS class name."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1413,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1932,
									"name": "minimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, render this decoration in the minimap."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1397,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 1920,
										"name": "IModelDecorationMinimapOptions"
									}
								},
								{
									"id": 1931,
									"name": "overviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, render this decoration in the overview ruler."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1393,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"id": 1916,
										"name": "IModelDecorationOverviewRulerOptions"
									}
								},
								{
									"id": 1925,
									"name": "stickiness",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Customize the growing behavior of the decoration when typing at the edges of the decoration.\nDefaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1368,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 1997,
										"name": "TrackedRangeStickiness"
									}
								},
								{
									"id": 1930,
									"name": "zIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Specifies the stack order of a decoration.\nA decoration with greater stack order is always in front of a decoration with a lower stack order."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1389,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1940,
										1939,
										1926,
										1935,
										1933,
										1927,
										1928,
										1937,
										1938,
										1929,
										1934,
										1936,
										1932,
										1931,
										1925,
										1930
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1363,
									"character": 44
								}
							]
						},
						{
							"id": 1916,
							"name": "IModelDecorationOverviewRulerOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Options for rendering a model decoration in the overview ruler."
							},
							"children": [
								{
									"id": 1918,
									"name": "color",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "CSS color to render.\ne.g.: rgba(100, 100, 100, 0.5) or a color from the color registry"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1332,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1903,
												"name": "ThemeColor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1914,
										"name": "IDecorationOptions.color"
									}
								},
								{
									"id": 1919,
									"name": "darkColor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "CSS color to render.\ne.g.: rgba(100, 100, 100, 0.5) or a color from the color registry"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1337,
											"character": 17
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1903,
												"name": "ThemeColor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "IDecorationOptions.darkColor"
									}
								},
								{
									"id": 1917,
									"name": "position",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The position in the overview ruler."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1347,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 1905,
										"name": "OverviewRulerLane"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1918,
										1919,
										1917
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1343,
									"character": 57
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 1913,
									"name": "IDecorationOptions"
								}
							]
						},
						{
							"id": 2492,
							"name": "IModelDecorationsChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An event describing that model decorations have changed."
							},
							"children": [
								{
									"id": 2493,
									"name": "affectsMinimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2476,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2494,
									"name": "affectsOverviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2477,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2493,
										2494
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2475,
									"character": 50
								}
							]
						},
						{
							"id": 1941,
							"name": "IModelDeltaDecoration",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "New model decorations."
							},
							"children": [
								{
									"id": 1943,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Options associated with this decoration."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1445,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 1924,
										"name": "IModelDecorationOptions"
									}
								},
								{
									"id": 1942,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Range that this decoration covers."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1441,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1943,
										1942
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1437,
									"character": 42
								}
							]
						},
						{
							"id": 2476,
							"name": "IModelLanguageChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An event describing that the current mode associated with a model has changed."
							},
							"children": [
								{
									"id": 2478,
									"name": "newLanguage",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "New language"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2416,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2477,
									"name": "oldLanguage",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Previous language"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2412,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2478,
										2477
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2408,
									"character": 47
								}
							]
						},
						{
							"id": 2479,
							"name": "IModelLanguageConfigurationChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An event describing that the language configuration associated with a model has changed."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2422,
									"character": 60
								}
							]
						},
						{
							"id": 2495,
							"name": "IModelOptionsChangedEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 2497,
									"name": "indentSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2482,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2498,
									"name": "insertSpaces",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2483,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2496,
									"name": "tabSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2481,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2499,
									"name": "trimAutoWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2484,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2497,
										2498,
										2496,
										2499
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2480,
									"character": 46
								}
							]
						},
						{
							"id": 3486,
							"name": "IMouseTarget",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Target hit with the mouse in the editor."
							},
							"children": [
								{
									"id": 3492,
									"name": "detail",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Some extra detail."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4509,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 3487,
									"name": "element",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The target element"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4489,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								},
								{
									"id": 3490,
									"name": "mouseColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Desired mouse column (e.g. when position.column gets clamped to text length -- clicking after text on a line)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4501,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3489,
									"name": "position",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The 'approximate' editor position"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4497,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								},
								{
									"id": 3491,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The 'approximate' editor range"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4505,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								},
								{
									"id": 3488,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The target type"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4493,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"id": 3471,
										"name": "MouseTargetType"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3492,
										3487,
										3490,
										3489,
										3491,
										3488
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4485,
									"character": 33
								}
							]
						},
						{
							"id": 2289,
							"name": "INewScrollPosition",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 2290,
									"name": "scrollLeft",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2116,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2291,
									"name": "scrollTop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2117,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2290,
										2291
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2115,
									"character": 39
								}
							]
						},
						{
							"id": 3464,
							"name": "IOverlayWidget",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An overlay widgets renders on top of the text."
							},
							"children": [
								{
									"id": 3467,
									"name": "getDomNode",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3468,
											"name": "getDomNode",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the dom node of the overlay widget."
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									]
								},
								{
									"id": 3465,
									"name": "getId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3466,
											"name": "getId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a unique identifier of the overlay widget."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 3469,
									"name": "getPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3470,
											"name": "getPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the placement of the overlay widget.\nIf null is returned, the overlay widget is responsible to place itself."
											},
											"type": {
												"type": "reference",
												"id": 3462,
												"name": "IOverlayWidgetPosition"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										3467,
										3465,
										3469
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4404,
									"character": 35
								}
							]
						},
						{
							"id": 3462,
							"name": "IOverlayWidgetPosition",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A position for rendering overlay widgets."
							},
							"children": [
								{
									"id": 3463,
									"name": "preference",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The position preference for the overlay widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4398,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 3458,
										"name": "OverlayWidgetPositionPreference"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3463
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4394,
									"character": 43
								}
							]
						},
						{
							"id": 3496,
							"name": "IPartialEditorMouseEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 3497,
									"name": "event",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4521,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 280,
										"name": "IMouseEvent"
									}
								},
								{
									"id": 3498,
									"name": "target",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4522,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"id": 3486,
										"name": "IMouseTarget"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3497,
										3498
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4520,
									"character": 45
								}
							]
						},
						{
							"id": 3499,
							"name": "IPasteEvent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A paste event originating from the editor."
							},
							"children": [
								{
									"id": 3501,
									"name": "mode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4530,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3500,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4529,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3501,
										3500
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4528,
									"character": 32
								}
							]
						},
						{
							"id": 3044,
							"name": "IQuickSuggestionsOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for quick suggestions"
							},
							"children": [
								{
									"id": 3046,
									"name": "comments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3658,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3045,
									"name": "other",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3657,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3047,
									"name": "strings",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3659,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3046,
										3045,
										3047
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3656,
									"character": 45
								}
							]
						},
						{
							"id": 1886,
							"name": "IRelatedInformation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {},
							"children": [
								{
									"id": 1892,
									"name": "endColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1287,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1891,
									"name": "endLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1286,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1888,
									"name": "message",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1283,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1887,
									"name": "resource",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1282,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 1890,
									"name": "startColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1285,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1889,
									"name": "startLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1284,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1892,
										1891,
										1888,
										1887,
										1890,
										1889
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1281,
									"character": 40
								}
							]
						},
						{
							"id": 3065,
							"name": "IRulerOption",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 3067,
									"name": "color",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3681,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3066,
									"name": "column",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3680,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3067,
										3066
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3679,
									"character": 33
								}
							]
						},
						{
							"id": 1963,
							"name": "ISingleEditOperation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A single edit operation, that acts as a simple replace.\ni.e. Replace text at `range` with `text` in model."
							},
							"children": [
								{
									"id": 1966,
									"name": "forceMoveMarkers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This indicates that this operation has \"insert\" semantics.\ni.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1551,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1964,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The range to replace. This can be empty to emulate a simple insert."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1542,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 1965,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The text to replace with. This can be null to emulate a simple delete."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1546,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1966,
										1964,
										1965
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1538,
									"character": 41
								}
							]
						},
						{
							"id": 3133,
							"name": "ISmartSelectOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 3134,
									"name": "selectLeadingAndTrailingWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3920,
											"character": 42
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3134
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3919,
									"character": 40
								}
							]
						},
						{
							"id": 1101,
							"name": "IStandaloneCodeEditor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1225,
									"name": "onContextMenu",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1226,
											"name": "onContextMenu",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"contextmenu\"."
											},
											"parameters": [
												{
													"id": 1227,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1228,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1229,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1230,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3493,
																				"name": "IEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3735,
												"name": "ICodeEditor.onContextMenu"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3734,
										"name": "ICodeEditor.onContextMenu"
									}
								},
								{
									"id": 1202,
									"name": "onDidAttemptReadOnlyEdit",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1203,
											"name": "onDidAttemptReadOnlyEdit",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when editing failed because the editor is read-only."
											},
											"parameters": [
												{
													"id": 1204,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1205,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1206,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3712,
												"name": "ICodeEditor.onDidAttemptReadOnlyEdit"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3711,
										"name": "ICodeEditor.onDidAttemptReadOnlyEdit"
									}
								},
								{
									"id": 1177,
									"name": "onDidBlurEditorText",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1178,
											"name": "onDidBlurEditorText",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the text inside this editor lost focus (i.e. cursor stops blinking)."
											},
											"parameters": [
												{
													"id": 1179,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1180,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1181,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3687,
												"name": "ICodeEditor.onDidBlurEditorText"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3686,
										"name": "ICodeEditor.onDidBlurEditorText"
									}
								},
								{
									"id": 1187,
									"name": "onDidBlurEditorWidget",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1188,
											"name": "onDidBlurEditorWidget",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the text inside this editor or an editor widget lost focus."
											},
											"parameters": [
												{
													"id": 1189,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1190,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1191,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3697,
												"name": "ICodeEditor.onDidBlurEditorWidget"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3696,
										"name": "ICodeEditor.onDidBlurEditorWidget"
									}
								},
								{
									"id": 1142,
									"name": "onDidChangeConfiguration",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1143,
											"name": "onDidChangeConfiguration",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the configuration of the editor has changed. (e.g. `editor.updateOptions()`)"
											},
											"parameters": [
												{
													"id": 1144,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1145,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1146,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1147,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2788,
																				"name": "ConfigurationChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3652,
												"name": "ICodeEditor.onDidChangeConfiguration"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3651,
										"name": "ICodeEditor.onDidChangeConfiguration"
									}
								},
								{
									"id": 1148,
									"name": "onDidChangeCursorPosition",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1149,
											"name": "onDidChangeCursorPosition",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the cursor position has changed."
											},
											"parameters": [
												{
													"id": 1150,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1151,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1152,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1153,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2508,
																				"name": "ICursorPositionChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3658,
												"name": "ICodeEditor.onDidChangeCursorPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3657,
										"name": "ICodeEditor.onDidChangeCursorPosition"
									}
								},
								{
									"id": 1154,
									"name": "onDidChangeCursorSelection",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1155,
											"name": "onDidChangeCursorSelection",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the cursor selection has changed."
											},
											"parameters": [
												{
													"id": 1156,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1157,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1158,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1159,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2513,
																				"name": "ICursorSelectionChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3664,
												"name": "ICodeEditor.onDidChangeCursorSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3663,
										"name": "ICodeEditor.onDidChangeCursorSelection"
									}
								},
								{
									"id": 1160,
									"name": "onDidChangeModel",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1161,
											"name": "onDidChangeModel",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the model of this editor has changed (e.g. `editor.setModel()`)."
											},
											"parameters": [
												{
													"id": 1162,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1163,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1164,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1165,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2258,
																				"name": "IModelChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3670,
												"name": "ICodeEditor.onDidChangeModel"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3669,
										"name": "ICodeEditor.onDidChangeModel"
									}
								},
								{
									"id": 1118,
									"name": "onDidChangeModelContent",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1119,
											"name": "onDidChangeModelContent",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the content of the current model has changed."
											},
											"parameters": [
												{
													"id": 1120,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1121,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1122,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1123,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2485,
																				"name": "IModelContentChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3628,
												"name": "ICodeEditor.onDidChangeModelContent"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3627,
										"name": "ICodeEditor.onDidChangeModelContent"
									}
								},
								{
									"id": 1166,
									"name": "onDidChangeModelDecorations",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1167,
											"name": "onDidChangeModelDecorations",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the decorations of the current model have changed."
											},
											"parameters": [
												{
													"id": 1168,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1169,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1170,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1171,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2492,
																				"name": "IModelDecorationsChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3676,
												"name": "ICodeEditor.onDidChangeModelDecorations"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3675,
										"name": "ICodeEditor.onDidChangeModelDecorations"
									}
								},
								{
									"id": 1124,
									"name": "onDidChangeModelLanguage",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1125,
											"name": "onDidChangeModelLanguage",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the language of the current model has changed."
											},
											"parameters": [
												{
													"id": 1126,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1127,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1128,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1129,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2476,
																				"name": "IModelLanguageChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3634,
												"name": "ICodeEditor.onDidChangeModelLanguage"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3633,
										"name": "ICodeEditor.onDidChangeModelLanguage"
									}
								},
								{
									"id": 1130,
									"name": "onDidChangeModelLanguageConfiguration",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1131,
											"name": "onDidChangeModelLanguageConfiguration",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the language configuration of the current model has changed."
											},
											"parameters": [
												{
													"id": 1132,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1133,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1134,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1135,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2479,
																				"name": "IModelLanguageConfigurationChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3640,
												"name": "ICodeEditor.onDidChangeModelLanguageConfiguration"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3639,
										"name": "ICodeEditor.onDidChangeModelLanguageConfiguration"
									}
								},
								{
									"id": 1136,
									"name": "onDidChangeModelOptions",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1137,
											"name": "onDidChangeModelOptions",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the options of the current model has changed."
											},
											"parameters": [
												{
													"id": 1138,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1139,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1140,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1141,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2495,
																				"name": "IModelOptionsChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3646,
												"name": "ICodeEditor.onDidChangeModelOptions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3645,
										"name": "ICodeEditor.onDidChangeModelOptions"
									}
								},
								{
									"id": 1261,
									"name": "onDidContentSizeChange",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1262,
											"name": "onDidContentSizeChange",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the content width or content height in the editor has changed."
											},
											"parameters": [
												{
													"id": 1263,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1264,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1265,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1266,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2284,
																				"name": "IContentSizeChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3771,
												"name": "ICodeEditor.onDidContentSizeChange"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3770,
										"name": "ICodeEditor.onDidContentSizeChange"
									}
								},
								{
									"id": 1545,
									"name": "onDidDispose",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1546,
											"name": "onDidDispose",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the editor has been disposed."
											},
											"parameters": [
												{
													"id": 1547,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1548,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1549,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4055,
												"name": "ICodeEditor.onDidDispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4054,
										"name": "ICodeEditor.onDidDispose"
									}
								},
								{
									"id": 1172,
									"name": "onDidFocusEditorText",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1173,
											"name": "onDidFocusEditorText",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the text inside this editor gained focus (i.e. cursor starts blinking)."
											},
											"parameters": [
												{
													"id": 1174,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1175,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1176,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3682,
												"name": "ICodeEditor.onDidFocusEditorText"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3681,
										"name": "ICodeEditor.onDidFocusEditorText"
									}
								},
								{
									"id": 1182,
									"name": "onDidFocusEditorWidget",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1183,
											"name": "onDidFocusEditorWidget",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the text inside this editor or an editor widget gained focus."
											},
											"parameters": [
												{
													"id": 1184,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1185,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1186,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3692,
												"name": "ICodeEditor.onDidFocusEditorWidget"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3691,
										"name": "ICodeEditor.onDidFocusEditorWidget"
									}
								},
								{
									"id": 1255,
									"name": "onDidLayoutChange",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1256,
											"name": "onDidLayoutChange",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the layout of the editor has changed."
											},
											"parameters": [
												{
													"id": 1257,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1258,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1259,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1260,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2986,
																				"name": "EditorLayoutInfo"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3765,
												"name": "ICodeEditor.onDidLayoutChange"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3764,
										"name": "ICodeEditor.onDidLayoutChange"
									}
								},
								{
									"id": 1207,
									"name": "onDidPaste",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1208,
											"name": "onDidPaste",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when users paste text in the editor."
											},
											"parameters": [
												{
													"id": 1209,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1210,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1211,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1212,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3499,
																				"name": "IPasteEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3717,
												"name": "ICodeEditor.onDidPaste"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3716,
										"name": "ICodeEditor.onDidPaste"
									}
								},
								{
									"id": 1267,
									"name": "onDidScrollChange",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1268,
											"name": "onDidScrollChange",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the scroll in the editor has changed."
											},
											"parameters": [
												{
													"id": 1269,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1270,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1271,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1272,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 299,
																				"name": "IScrollEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3777,
												"name": "ICodeEditor.onDidScrollChange"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3776,
										"name": "ICodeEditor.onDidScrollChange"
									}
								},
								{
									"id": 1249,
									"name": "onKeyDown",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1250,
											"name": "onKeyDown",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"keydown\"."
											},
											"parameters": [
												{
													"id": 1251,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1252,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1253,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1254,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 263,
																				"name": "IKeyboardEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3759,
												"name": "ICodeEditor.onKeyDown"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3758,
										"name": "ICodeEditor.onKeyDown"
									}
								},
								{
									"id": 1243,
									"name": "onKeyUp",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1244,
											"name": "onKeyUp",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"keyup\"."
											},
											"parameters": [
												{
													"id": 1245,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1246,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1247,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1248,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 263,
																				"name": "IKeyboardEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3753,
												"name": "ICodeEditor.onKeyUp"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3752,
										"name": "ICodeEditor.onKeyUp"
									}
								},
								{
									"id": 1219,
									"name": "onMouseDown",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1220,
											"name": "onMouseDown",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"mousedown\"."
											},
											"parameters": [
												{
													"id": 1221,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1222,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1223,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1224,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3493,
																				"name": "IEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3729,
												"name": "ICodeEditor.onMouseDown"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3728,
										"name": "ICodeEditor.onMouseDown"
									}
								},
								{
									"id": 1237,
									"name": "onMouseLeave",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1238,
											"name": "onMouseLeave",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"mouseleave\"."
											},
											"parameters": [
												{
													"id": 1239,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1240,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1241,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1242,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3496,
																				"name": "IPartialEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3747,
												"name": "ICodeEditor.onMouseLeave"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3746,
										"name": "ICodeEditor.onMouseLeave"
									}
								},
								{
									"id": 1231,
									"name": "onMouseMove",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1232,
											"name": "onMouseMove",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"mousemove\"."
											},
											"parameters": [
												{
													"id": 1233,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1234,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1235,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1236,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3493,
																				"name": "IEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3741,
												"name": "ICodeEditor.onMouseMove"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3740,
										"name": "ICodeEditor.onMouseMove"
									}
								},
								{
									"id": 1213,
									"name": "onMouseUp",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1214,
											"name": "onMouseUp",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted on a \"mouseup\"."
											},
											"parameters": [
												{
													"id": 1215,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1216,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1217,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1218,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3493,
																				"name": "IEditorMouseEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3723,
												"name": "ICodeEditor.onMouseUp"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3722,
										"name": "ICodeEditor.onMouseUp"
									}
								},
								{
									"id": 1115,
									"name": "addAction",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1116,
											"name": "addAction",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1117,
													"name": "descriptor",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 803,
														"name": "IActionDescriptor"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 1105,
									"name": "addCommand",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1106,
											"name": "addCommand",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1107,
													"name": "keybinding",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1108,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1841,
														"name": "ICommandHandler"
													}
												},
												{
													"id": 1109,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1500,
									"name": "addContentWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1501,
											"name": "addContentWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add a content widget. Widgets must have unique ids, otherwise they will be overwritten."
											},
											"parameters": [
												{
													"id": 1502,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3444,
														"name": "IContentWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4010,
												"name": "ICodeEditor.addContentWidget"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4009,
										"name": "ICodeEditor.addContentWidget"
									}
								},
								{
									"id": 1509,
									"name": "addOverlayWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1510,
											"name": "addOverlayWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add an overlay widget. Widgets must have unique ids, otherwise they will be overwritten."
											},
											"parameters": [
												{
													"id": 1511,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3464,
														"name": "IOverlayWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4019,
												"name": "ICodeEditor.addOverlayWidget"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4018,
										"name": "ICodeEditor.addOverlayWidget"
									}
								},
								{
									"id": 1542,
									"name": "applyFontInfo",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1543,
											"name": "applyFontInfo",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Apply the same font settings as the editor to `target`."
											},
											"parameters": [
												{
													"id": 1544,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4052,
												"name": "ICodeEditor.applyFontInfo"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4051,
										"name": "ICodeEditor.applyFontInfo"
									}
								},
								{
									"id": 1518,
									"name": "changeViewZones",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1519,
											"name": "changeViewZones",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the view zones. View zones are lost when a new model is attached to the editor."
											},
											"parameters": [
												{
													"id": 1520,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1521,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1522,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1523,
																			"name": "accessor",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 3426,
																				"name": "IViewZoneChangeAccessor"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4028,
												"name": "ICodeEditor.changeViewZones"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4027,
										"name": "ICodeEditor.changeViewZones"
									}
								},
								{
									"id": 1110,
									"name": "createContextKey",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1111,
											"name": "createContextKey",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 1112,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 1113,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1114,
													"name": "defaultValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1844,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "IContextKey"
											}
										}
									]
								},
								{
									"id": 1481,
									"name": "deltaDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1482,
											"name": "deltaDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "All decorations added through this call will get the ownerId of this editor.",
												"tags": [
													{
														"tag": "see",
														"text": "`ITextModel.deltaDecorations`\n"
													}
												]
											},
											"parameters": [
												{
													"id": 1483,
													"name": "oldDecorations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 1484,
													"name": "newDecorations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1941,
															"name": "IModelDeltaDecoration"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3991,
												"name": "ICodeEditor.deltaDecorations"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3990,
										"name": "ICodeEditor.deltaDecorations"
									}
								},
								{
									"id": 1550,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1551,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Dispose the editor."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4060,
												"name": "ICodeEditor.dispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4059,
										"name": "ICodeEditor.dispose"
									}
								},
								{
									"id": 1461,
									"name": "executeCommand",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1462,
											"name": "executeCommand",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Execute a command on the editor.\nThe edits will land on the undo-redo stack, but no \"undo stop\" will be pushed."
											},
											"parameters": [
												{
													"id": 1463,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1464,
													"name": "command",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The command to execute\n"
													},
													"type": {
														"type": "reference",
														"id": 2246,
														"name": "ICommand"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3971,
												"name": "ICodeEditor.executeCommand"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3970,
										"name": "ICodeEditor.executeCommand"
									}
								},
								{
									"id": 1474,
									"name": "executeCommands",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1475,
											"name": "executeCommands",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Execute multiple (concomitant) commands on the editor."
											},
											"parameters": [
												{
													"id": 1476,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1477,
													"name": "commands",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2246,
															"name": "ICommand"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3984,
												"name": "ICodeEditor.executeCommands"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3983,
										"name": "ICodeEditor.executeCommands"
									}
								},
								{
									"id": 1469,
									"name": "executeEdits",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1470,
											"name": "executeEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Execute edits on the editor.\nThe edits will land on the undo-redo stack, but no \"undo stop\" will be pushed."
											},
											"parameters": [
												{
													"id": 1471,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1472,
													"name": "edits",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The edits to execute."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1967,
															"name": "IIdentifiedSingleEditOperation"
														}
													}
												},
												{
													"id": 1473,
													"name": "endCursorState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Cursor state after the edits were applied.\n"
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 1974,
																"name": "ICursorStateComputer"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 485,
																	"name": "Selection"
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3979,
												"name": "ICodeEditor.executeEdits"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3978,
										"name": "ICodeEditor.executeEdits"
									}
								},
								{
									"id": 1559,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1560,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Brings browser focus to the editor text"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4072,
												"name": "ICodeEditor.focus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4071,
										"name": "ICodeEditor.focus"
									}
								},
								{
									"id": 1458,
									"name": "getAction",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1459,
											"name": "getAction",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get an action that is a contribution to this editor.",
												"returns": "The action or null if action not found.\n",
												"tags": [
													{
														"tag": "id",
														"text": "Unique identifier of the contribution."
													}
												]
											},
											"parameters": [
												{
													"id": 1460,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 2292,
												"name": "IEditorAction"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3968,
												"name": "ICodeEditor.getAction"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3967,
										"name": "ICodeEditor.getAction"
									}
								},
								{
									"id": 1496,
									"name": "getContainerDomNode",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1497,
											"name": "getContainerDomNode",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the editor's container dom node"
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4006,
												"name": "ICodeEditor.getContainerDomNode"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4005,
										"name": "ICodeEditor.getContainerDomNode"
									}
								},
								{
									"id": 1440,
									"name": "getContentHeight",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1441,
											"name": "getContentHeight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the height of the editor's content.\nThis is information that is \"erased\" when computing `scrollHeight = Math.max(contentHeight, height)`"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3950,
												"name": "ICodeEditor.getContentHeight"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3949,
										"name": "ICodeEditor.getContentHeight"
									}
								},
								{
									"id": 1434,
									"name": "getContentWidth",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1435,
											"name": "getContentWidth",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the width of the editor's content.\nThis is information that is \"erased\" when computing `scrollWidth = Math.max(contentWidth, width)`"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3944,
												"name": "ICodeEditor.getContentWidth"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3943,
										"name": "ICodeEditor.getContentWidth"
									}
								},
								{
									"id": 1280,
									"name": "getContribution",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1281,
											"name": "getContribution",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a contribution of this editor.",
												"returns": "The contribution or null if contribution not found.\n",
												"tags": [
													{
														"tag": "id",
														"text": "Unique identifier of the contribution."
													}
												]
											},
											"typeParameter": [
												{
													"id": 1282,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2464,
														"name": "IEditorContribution"
													}
												}
											],
											"parameters": [
												{
													"id": 1283,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "T"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3790,
												"name": "ICodeEditor.getContribution"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3789,
										"name": "ICodeEditor.getContribution"
									}
								},
								{
									"id": 1498,
									"name": "getDomNode",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1499,
											"name": "getDomNode",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the editor's dom node"
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4008,
												"name": "ICodeEditor.getDomNode"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4007,
										"name": "ICodeEditor.getDomNode"
									}
								},
								{
									"id": 1554,
									"name": "getEditorType",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1555,
											"name": "getEditorType",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the editor type. Please see `EditorType`.\nThis is to avoid an instanceof check"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4064,
												"name": "ICodeEditor.getEditorType"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4063,
										"name": "ICodeEditor.getEditorType"
									}
								},
								{
									"id": 1552,
									"name": "getId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1553,
											"name": "getId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a unique id for this editor instance."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4062,
												"name": "ICodeEditor.getId"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4061,
										"name": "ICodeEditor.getId"
									}
								},
								{
									"id": 1485,
									"name": "getLayoutInfo",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1486,
											"name": "getLayoutInfo",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the layout info for the editor."
											},
											"type": {
												"type": "reference",
												"id": 2986,
												"name": "EditorLayoutInfo"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3995,
												"name": "ICodeEditor.getLayoutInfo"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3994,
										"name": "ICodeEditor.getLayoutInfo"
									}
								},
								{
									"id": 1478,
									"name": "getLineDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1479,
											"name": "getLineDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get all the decorations on a line (filtering out decorations from other editors)."
											},
											"parameters": [
												{
													"id": 1480,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1944,
													"name": "IModelDecoration"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3988,
												"name": "ICodeEditor.getLineDecorations"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3987,
										"name": "ICodeEditor.getLineDecorations"
									}
								},
								{
									"id": 1284,
									"name": "getModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1285,
											"name": "getModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Type the getModel() of IEditor."
											},
											"type": {
												"type": "reference",
												"id": 2002,
												"name": "ITextModel"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3794,
												"name": "ICodeEditor.getModel"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3793,
										"name": "ICodeEditor.getModel"
									}
								},
								{
									"id": 1524,
									"name": "getOffsetForColumn",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1525,
											"name": "getOffsetForColumn",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the horizontal position (left offset) for the column w.r.t to the beginning of the line.\nThis method works only if the line `lineNumber` is currently rendered (in the editor's viewport).\nUse this method with caution."
											},
											"parameters": [
												{
													"id": 1526,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1527,
													"name": "column",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4034,
												"name": "ICodeEditor.getOffsetForColumn"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4033,
										"name": "ICodeEditor.getOffsetForColumn"
									}
								},
								{
									"id": 1291,
									"name": "getOption",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1292,
											"name": "getOption",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets a specific editor option."
											},
											"typeParameter": [
												{
													"id": 1293,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3146,
														"name": "EditorOption"
													}
												}
											],
											"parameters": [
												{
													"id": 1294,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3405,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 3403,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"name": "T"
																		}
																	],
																	"name": "FindEditorOptionsKeyById"
																},
																"objectType": {
																	"type": "reflection",
																	"declaration": {
																		"id": 1295,
																		"name": "__type",
																		"kind": 65536,
																		"kindString": "Type literal",
																		"flags": {},
																		"children": [
																			{
																				"id": 1296,
																				"name": "acceptSuggestionOnCommitCharacter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4083,
																						"character": 41
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3147,
																							"name": "acceptSuggestionOnCommitCharacter"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1297,
																				"name": "acceptSuggestionOnEnter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4084,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3148,
																							"name": "acceptSuggestionOnEnter"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "smart"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1299,
																				"name": "accessibilityPageSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4086,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3150,
																							"name": "accessibilityPageSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1298,
																				"name": "accessibilitySupport",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4085,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3149,
																							"name": "accessibilitySupport"
																						},
																						{
																							"type": "reference",
																							"id": 2521,
																							"name": "AccessibilitySupport"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1300,
																				"name": "ariaLabel",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4087,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3151,
																							"name": "ariaLabel"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1301,
																				"name": "autoClosingBrackets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4088,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3152,
																							"name": "autoClosingBrackets"
																						},
																						{
																							"type": "reference",
																							"id": 2525,
																							"name": "EditorAutoClosingStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1302,
																				"name": "autoClosingOvertype",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4089,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3153,
																							"name": "autoClosingOvertype"
																						},
																						{
																							"type": "reference",
																							"id": 2527,
																							"name": "EditorAutoClosingOvertypeStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1303,
																				"name": "autoClosingQuotes",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4090,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3154,
																							"name": "autoClosingQuotes"
																						},
																						{
																							"type": "reference",
																							"id": 2525,
																							"name": "EditorAutoClosingStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1304,
																				"name": "autoIndent",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4091,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3155,
																							"name": "autoIndent"
																						},
																						{
																							"type": "reference",
																							"id": 2528,
																							"name": "EditorAutoIndentStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1306,
																				"name": "autoSurround",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4093,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3157,
																							"name": "autoSurround"
																						},
																						{
																							"type": "reference",
																							"id": 2526,
																							"name": "EditorAutoSurroundStrategy"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1305,
																				"name": "automaticLayout",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4092,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3156,
																							"name": "automaticLayout"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1308,
																				"name": "codeLens",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4095,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3158,
																							"name": "codeLens"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1309,
																				"name": "codeLensFontFamily",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4096,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3159,
																							"name": "codeLensFontFamily"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1310,
																				"name": "codeLensFontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4097,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3160,
																							"name": "codeLensFontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1311,
																				"name": "colorDecorators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4098,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3161,
																							"name": "colorDecorators"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1312,
																				"name": "columnSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4099,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3162,
																							"name": "columnSelection"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1313,
																				"name": "comments",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4100,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3163,
																							"name": "comments"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2933,
																											"name": "IEditorCommentsOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1314,
																				"name": "contextmenu",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4101,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3164,
																							"name": "contextmenu"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1315,
																				"name": "copyWithSyntaxHighlighting",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4102,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3165,
																							"name": "copyWithSyntaxHighlighting"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1316,
																				"name": "cursorBlinking",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4103,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3166,
																							"name": "cursorBlinking"
																						},
																						{
																							"type": "reference",
																							"id": 2937,
																							"name": "TextEditorCursorBlinkingStyle"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1317,
																				"name": "cursorSmoothCaretAnimation",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4104,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3167,
																							"name": "cursorSmoothCaretAnimation"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1318,
																				"name": "cursorStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4105,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3168,
																							"name": "cursorStyle"
																						},
																						{
																							"type": "reference",
																							"id": 2944,
																							"name": "TextEditorCursorStyle"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1319,
																				"name": "cursorSurroundingLines",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4106,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3169,
																							"name": "cursorSurroundingLines"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1320,
																				"name": "cursorSurroundingLinesStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4107,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3170,
																							"name": "cursorSurroundingLinesStyle"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "default"
																								},
																								{
																									"type": "literal",
																									"value": "all"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1321,
																				"name": "cursorWidth",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4108,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3171,
																							"name": "cursorWidth"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1369,
																				"name": "definitionLinkOpensInPeek",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4156,
																						"character": 33
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3219,
																							"name": "definitionLinkOpensInPeek"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1322,
																				"name": "disableLayerHinting",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4109,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3172,
																							"name": "disableLayerHinting"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1323,
																				"name": "disableMonospaceOptimizations",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4110,
																						"character": 37
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3173,
																							"name": "disableMonospaceOptimizations"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1324,
																				"name": "dragAndDrop",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4111,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3174,
																							"name": "dragAndDrop"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1418,
																				"name": "editorClassName",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4204,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3268,
																							"name": "editorClassName"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1325,
																				"name": "emptySelectionClipboard",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4112,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3175,
																							"name": "emptySelectionClipboard"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1326,
																				"name": "extraEditorClassName",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4113,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3176,
																							"name": "extraEditorClassName"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1327,
																				"name": "fastScrollSensitivity",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4114,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3177,
																							"name": "fastScrollSensitivity"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1328,
																				"name": "find",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4115,
																						"character": 12
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3178,
																							"name": "find"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2951,
																											"name": "IEditorFindOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1329,
																				"name": "fixedOverflowWidgets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4116,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3179,
																							"name": "fixedOverflowWidgets"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1330,
																				"name": "folding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4117,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3180,
																							"name": "folding"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1332,
																				"name": "foldingHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4119,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3182,
																							"name": "foldingHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1331,
																				"name": "foldingStrategy",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4118,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3181,
																							"name": "foldingStrategy"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "auto"
																								},
																								{
																									"type": "literal",
																									"value": "indentation"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1334,
																				"name": "fontFamily",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4121,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3184,
																							"name": "fontFamily"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1335,
																				"name": "fontInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4122,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3185,
																							"name": "fontInfo"
																						},
																						{
																							"type": "reference",
																							"id": 4342,
																							"name": "FontInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1336,
																				"name": "fontLigatures2",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4123,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3186,
																							"name": "fontLigatures"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1337,
																				"name": "fontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4124,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3187,
																							"name": "fontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1338,
																				"name": "fontWeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4125,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3188,
																							"name": "fontWeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1339,
																				"name": "formatOnPaste",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4126,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3189,
																							"name": "formatOnPaste"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1340,
																				"name": "formatOnType",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4127,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3190,
																							"name": "formatOnType"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1341,
																				"name": "glyphMargin",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4128,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3191,
																							"name": "glyphMargin"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1342,
																				"name": "gotoLocation",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4129,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3192,
																							"name": "gotoLocation"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2959,
																											"name": "IGotoLocationOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1343,
																				"name": "hideCursorInOverviewRuler",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4130,
																						"character": 33
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3193,
																							"name": "hideCursorInOverviewRuler"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1344,
																				"name": "highlightActiveIndentGuide",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4131,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3194,
																							"name": "highlightActiveIndentGuide"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1345,
																				"name": "hover",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4132,
																						"character": 13
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3195,
																							"name": "hover"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 2972,
																											"name": "IEditorHoverOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1346,
																				"name": "inDiffEditor",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4133,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3196,
																							"name": "inDiffEditor"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1395,
																				"name": "inlineHints",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4181,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3267,
																							"name": "inlineHints"
																						},
																						{
																							"type": "intrinsic",
																							"name": "any"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1421,
																				"name": "layoutInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4207,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3271,
																							"name": "layoutInfo"
																						},
																						{
																							"type": "reference",
																							"id": 2986,
																							"name": "EditorLayoutInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1347,
																				"name": "letterSpacing",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4134,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3197,
																							"name": "letterSpacing"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1348,
																				"name": "lightbulb",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4135,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3198,
																							"name": "lightbulb"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3017,
																											"name": "IEditorLightbulbOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1349,
																				"name": "lineDecorationsWidth",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4136,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3199,
																							"name": "lineDecorationsWidth"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "number"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1350,
																				"name": "lineHeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4137,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3200,
																							"name": "lineHeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1351,
																				"name": "lineNumbers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4138,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3201,
																							"name": "lineNumbers"
																						},
																						{
																							"type": "reference",
																							"id": 3059,
																							"name": "InternalEditorRenderLineNumbersOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1352,
																				"name": "lineNumbersMinChars",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4139,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3202,
																							"name": "lineNumbersMinChars"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1353,
																				"name": "linkedEditing",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4140,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3203,
																							"name": "linkedEditing"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1354,
																				"name": "links",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4141,
																						"character": 13
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3204,
																							"name": "links"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1355,
																				"name": "matchBrackets",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4142,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3205,
																							"name": "matchBrackets"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "always"
																								},
																								{
																									"type": "literal",
																									"value": "never"
																								},
																								{
																									"type": "literal",
																									"value": "near"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1356,
																				"name": "minimap",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4143,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3206,
																							"name": "minimap"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3025,
																											"name": "IEditorMinimapOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1357,
																				"name": "mouseStyle",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4144,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3207,
																							"name": "mouseStyle"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "default"
																								},
																								{
																									"type": "literal",
																									"value": "text"
																								},
																								{
																									"type": "literal",
																									"value": "copy"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1358,
																				"name": "mouseWheelScrollSensitivity",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4145,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3208,
																							"name": "mouseWheelScrollSensitivity"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1359,
																				"name": "mouseWheelZoom",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4146,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3209,
																							"name": "mouseWheelZoom"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1360,
																				"name": "multiCursorMergeOverlapping",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4147,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3210,
																							"name": "multiCursorMergeOverlapping"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1361,
																				"name": "multiCursorModifier",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4148,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3211,
																							"name": "multiCursorModifier"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "altKey"
																								},
																								{
																									"type": "literal",
																									"value": "metaKey"
																								},
																								{
																									"type": "literal",
																									"value": "ctrlKey"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1362,
																				"name": "multiCursorPaste",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4149,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3212,
																							"name": "multiCursorPaste"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "spread"
																								},
																								{
																									"type": "literal",
																									"value": "full"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1363,
																				"name": "occurrencesHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4150,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3213,
																							"name": "occurrencesHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1364,
																				"name": "overviewRulerBorder",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4151,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3214,
																							"name": "overviewRulerBorder"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1365,
																				"name": "overviewRulerLanes",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4152,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3215,
																							"name": "overviewRulerLanes"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1366,
																				"name": "padding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4153,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3216,
																							"name": "padding"
																						},
																						{
																							"type": "reference",
																							"id": 3037,
																							"name": "InternalEditorPaddingOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1367,
																				"name": "parameterHints",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4154,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3217,
																							"name": "parameterHints"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3040,
																											"name": "IEditorParameterHintOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1368,
																				"name": "peekWidgetDefaultFocus",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4155,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3218,
																							"name": "peekWidgetDefaultFocus"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "tree"
																								},
																								{
																									"type": "literal",
																									"value": "editor"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1419,
																				"name": "pixelRatio",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4205,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3269,
																							"name": "pixelRatio"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1370,
																				"name": "quickSuggestions",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4157,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3220,
																							"name": "quickSuggestions"
																						},
																						{
																							"type": "reference",
																							"id": 3048,
																							"name": "ValidQuickSuggestionsOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1371,
																				"name": "quickSuggestionsDelay",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4158,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3221,
																							"name": "quickSuggestionsDelay"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1372,
																				"name": "readOnly",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4159,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3222,
																							"name": "readOnly"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1373,
																				"name": "renameOnType",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4160,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3223,
																							"name": "renameOnType"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1374,
																				"name": "renderControlCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4161,
																						"character": 31
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3224,
																							"name": "renderControlCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1376,
																				"name": "renderFinalNewline",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4163,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3226,
																							"name": "renderFinalNewline"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1375,
																				"name": "renderIndentGuides",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4162,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3225,
																							"name": "renderIndentGuides"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1377,
																				"name": "renderLineHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4164,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3227,
																							"name": "renderLineHighlight"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "all"
																								},
																								{
																									"type": "literal",
																									"value": "line"
																								},
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "gutter"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1378,
																				"name": "renderLineHighlightOnlyWhenFocus",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4165,
																						"character": 40
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3228,
																							"name": "renderLineHighlightOnlyWhenFocus"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1379,
																				"name": "renderValidationDecorations",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4166,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3229,
																							"name": "renderValidationDecorations"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "editable"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1380,
																				"name": "renderWhitespace",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4167,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3230,
																							"name": "renderWhitespace"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "all"
																								},
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "boundary"
																								},
																								{
																									"type": "literal",
																									"value": "selection"
																								},
																								{
																									"type": "literal",
																									"value": "trailing"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1381,
																				"name": "revealHorizontalRightPadding",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4168,
																						"character": 36
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3231,
																							"name": "revealHorizontalRightPadding"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1382,
																				"name": "roundedSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4169,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3232,
																							"name": "roundedSelection"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1383,
																				"name": "rulers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4170,
																						"character": 14
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3233,
																							"name": "rulers"
																						},
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 1384,
																								"name": "__type",
																								"kind": 65536,
																								"kindString": "Type literal",
																								"flags": {}
																							}
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1386,
																				"name": "scrollBeyondLastColumn",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4172,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3235,
																							"name": "scrollBeyondLastColumn"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1387,
																				"name": "scrollBeyondLastLine",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4173,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3236,
																							"name": "scrollBeyondLastLine"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1388,
																				"name": "scrollPredominantAxis",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4174,
																						"character": 29
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3237,
																							"name": "scrollPredominantAxis"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1385,
																				"name": "scrollbar",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4171,
																						"character": 17
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3234,
																							"name": "scrollbar"
																						},
																						{
																							"type": "reference",
																							"id": 3082,
																							"name": "InternalEditorScrollbarOptions"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1391,
																				"name": "selectOnLineNumbers",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4177,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3240,
																							"name": "selectOnLineNumbers"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1389,
																				"name": "selectionClipboard",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4175,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3238,
																							"name": "selectionClipboard"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1390,
																				"name": "selectionHighlight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4176,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3239,
																							"name": "selectionHighlight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1394,
																				"name": "showDeprecated",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4180,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3266,
																							"name": "showDeprecated"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1392,
																				"name": "showFoldingControls",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4178,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3241,
																							"name": "showFoldingControls"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "always"
																								},
																								{
																									"type": "literal",
																									"value": "mouseover"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1393,
																				"name": "showUnused",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4179,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3242,
																							"name": "showUnused"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1397,
																				"name": "smartSelect",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4183,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3244,
																							"name": "smartSelect"
																						},
																						{
																							"type": "intrinsic",
																							"name": "any"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1398,
																				"name": "smoothScrolling",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4184,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3245,
																							"name": "smoothScrolling"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1396,
																				"name": "snippetSuggestions",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4182,
																						"character": 26
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3243,
																							"name": "snippetSuggestions"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "none"
																								},
																								{
																									"type": "literal",
																									"value": "top"
																								},
																								{
																									"type": "literal",
																									"value": "bottom"
																								},
																								{
																									"type": "literal",
																									"value": "inline"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1307,
																				"name": "stickyTabStops",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4094,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3246,
																							"name": "stickyTabStops"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1399,
																				"name": "stopRenderingLineAfter",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4185,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3247,
																							"name": "stopRenderingLineAfter"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1400,
																				"name": "suggest",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4186,
																						"character": 15
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3248,
																							"name": "suggest"
																						},
																						{
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"typeArguments": [
																										{
																											"type": "reference",
																											"id": 3096,
																											"name": "ISuggestOptions"
																										}
																									],
																									"name": "Required"
																								}
																							],
																							"name": "Readonly"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1401,
																				"name": "suggestFontSize",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4187,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3249,
																							"name": "suggestFontSize"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1402,
																				"name": "suggestLineHeight",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4188,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3250,
																							"name": "suggestLineHeight"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1403,
																				"name": "suggestOnTriggerCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4189,
																						"character": 34
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3251,
																							"name": "suggestOnTriggerCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1404,
																				"name": "suggestSelection",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4190,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3252,
																							"name": "suggestSelection"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "first"
																								},
																								{
																									"type": "literal",
																									"value": "recentlyUsed"
																								},
																								{
																									"type": "literal",
																									"value": "recentlyUsedByPrefix"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1405,
																				"name": "tabCompletion",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4191,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3253,
																							"name": "tabCompletion"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "onlySnippets"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1420,
																				"name": "tabFocusMode",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4206,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3270,
																							"name": "tabFocusMode"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1406,
																				"name": "tabIndex",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4192,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3254,
																							"name": "tabIndex"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1333,
																				"name": "unfoldOnClickAfterEndOfLine",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4120,
																						"character": 35
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3183,
																							"name": "unfoldOnClickAfterEndOfLine"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1407,
																				"name": "unusualLineTerminators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4193,
																						"character": 30
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3255,
																							"name": "unusualLineTerminators"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "auto"
																								},
																								{
																									"type": "literal",
																									"value": "prompt"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1408,
																				"name": "useTabStops",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4194,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3256,
																							"name": "useTabStops"
																						},
																						{
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1409,
																				"name": "wordSeparators",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4195,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3257,
																							"name": "wordSeparators"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1410,
																				"name": "wordWrap",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4196,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3258,
																							"name": "wordWrap"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "wordWrapColumn"
																								},
																								{
																									"type": "literal",
																									"value": "bounded"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1411,
																				"name": "wordWrapBreakAfterCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4197,
																						"character": 36
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3259,
																							"name": "wordWrapBreakAfterCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1412,
																				"name": "wordWrapBreakBeforeCharacters",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4198,
																						"character": 37
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3260,
																							"name": "wordWrapBreakBeforeCharacters"
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1413,
																				"name": "wordWrapColumn",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4199,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3261,
																							"name": "wordWrapColumn"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1414,
																				"name": "wordWrapOverride1",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4200,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3262,
																							"name": "wordWrapOverride1"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "inherit"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1415,
																				"name": "wordWrapOverride2",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4201,
																						"character": 25
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3263,
																							"name": "wordWrapOverride2"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "on"
																								},
																								{
																									"type": "literal",
																									"value": "off"
																								},
																								{
																									"type": "literal",
																									"value": "inherit"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1416,
																				"name": "wrappingIndent",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4202,
																						"character": 22
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3264,
																							"name": "wrappingIndent"
																						},
																						{
																							"type": "reference",
																							"id": 3136,
																							"name": "WrappingIndent"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1422,
																				"name": "wrappingInfo",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4208,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3272,
																							"name": "wrappingInfo"
																						},
																						{
																							"type": "reference",
																							"id": 3141,
																							"name": "EditorWrappingInfo"
																						}
																					],
																					"name": "IEditorOption"
																				}
																			},
																			{
																				"id": 1417,
																				"name": "wrappingStrategy",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 4203,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "reference",
																					"id": 2927,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 3265,
																							"name": "wrappingStrategy"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "simple"
																								},
																								{
																									"type": "literal",
																									"value": "advanced"
																								}
																							]
																						}
																					],
																					"name": "IEditorOption"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"kind": 1024,
																				"children": [
																					1296,
																					1297,
																					1299,
																					1298,
																					1300,
																					1301,
																					1302,
																					1303,
																					1304,
																					1306,
																					1305,
																					1308,
																					1309,
																					1310,
																					1311,
																					1312,
																					1313,
																					1314,
																					1315,
																					1316,
																					1317,
																					1318,
																					1319,
																					1320,
																					1321,
																					1369,
																					1322,
																					1323,
																					1324,
																					1418,
																					1325,
																					1326,
																					1327,
																					1328,
																					1329,
																					1330,
																					1332,
																					1331,
																					1334,
																					1335,
																					1336,
																					1337,
																					1338,
																					1339,
																					1340,
																					1341,
																					1342,
																					1343,
																					1344,
																					1345,
																					1346,
																					1395,
																					1421,
																					1347,
																					1348,
																					1349,
																					1350,
																					1351,
																					1352,
																					1353,
																					1354,
																					1355,
																					1356,
																					1357,
																					1358,
																					1359,
																					1360,
																					1361,
																					1362,
																					1363,
																					1364,
																					1365,
																					1366,
																					1367,
																					1368,
																					1419,
																					1370,
																					1371,
																					1372,
																					1373,
																					1374,
																					1376,
																					1375,
																					1377,
																					1378,
																					1379,
																					1380,
																					1381,
																					1382,
																					1383,
																					1386,
																					1387,
																					1388,
																					1385,
																					1391,
																					1389,
																					1390,
																					1394,
																					1392,
																					1393,
																					1397,
																					1398,
																					1396,
																					1307,
																					1399,
																					1400,
																					1401,
																					1402,
																					1403,
																					1404,
																					1405,
																					1420,
																					1406,
																					1333,
																					1407,
																					1408,
																					1409,
																					1410,
																					1411,
																					1412,
																					1413,
																					1414,
																					1415,
																					1416,
																					1422,
																					1417
																				]
																			}
																		]
																	}
																}
															}
														],
														"name": "ComputedEditorOptionValue"
													}
												],
												"name": "NonNullable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3801,
												"name": "ICodeEditor.getOption"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3800,
										"name": "ICodeEditor.getOption"
									}
								},
								{
									"id": 1289,
									"name": "getOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1290,
											"name": "getOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets all the editor computed options."
											},
											"type": {
												"type": "reference",
												"id": 2794,
												"name": "IComputedEditorOptions"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3799,
												"name": "ICodeEditor.getOptions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3798,
										"name": "ICodeEditor.getOptions"
									}
								},
								{
									"id": 1568,
									"name": "getPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1569,
											"name": "getPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary position of the cursor."
											},
											"type": {
												"type": "reference",
												"id": 311,
												"name": "Position"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4081,
												"name": "ICodeEditor.getPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4080,
										"name": "ICodeEditor.getPosition"
									}
								},
								{
									"id": 1423,
									"name": "getRawOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1424,
											"name": "getRawOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the editor's configuration (without any validation or defaults)."
											},
											"type": {
												"type": "reference",
												"id": 2534,
												"name": "IEditorOptions"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3933,
												"name": "ICodeEditor.getRawOptions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3932,
										"name": "ICodeEditor.getRawOptions"
									}
								},
								{
									"id": 1442,
									"name": "getScrollHeight",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1443,
											"name": "getScrollHeight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the scrollHeight of the editor's viewport."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3952,
												"name": "ICodeEditor.getScrollHeight"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3951,
										"name": "ICodeEditor.getScrollHeight"
									}
								},
								{
									"id": 1438,
									"name": "getScrollLeft",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1439,
											"name": "getScrollLeft",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the scrollLeft of the editor's viewport."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3948,
												"name": "ICodeEditor.getScrollLeft"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3947,
										"name": "ICodeEditor.getScrollLeft"
									}
								},
								{
									"id": 1444,
									"name": "getScrollTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1445,
											"name": "getScrollTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the scrollTop of the editor's viewport."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3954,
												"name": "ICodeEditor.getScrollTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3953,
										"name": "ICodeEditor.getScrollTop"
									}
								},
								{
									"id": 1436,
									"name": "getScrollWidth",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1437,
											"name": "getScrollWidth",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the scrollWidth of the editor's viewport."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3946,
												"name": "ICodeEditor.getScrollWidth"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3945,
										"name": "ICodeEditor.getScrollWidth"
									}
								},
								{
									"id": 1535,
									"name": "getScrolledVisiblePosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1536,
											"name": "getScrolledVisiblePosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the visible position for `position`.\nThe result position takes scrolling into account and is relative to the top left corner of the editor.\nExplanation 1: the results of this method will change for the same `position` if the user scrolls the editor.\nExplanation 2: the results of this method will not change if the container of the editor gets repositioned.\nWarning: the results of this method are inaccurate for positions that are outside the current editor viewport."
											},
											"parameters": [
												{
													"id": 1537,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1538,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1541,
															"name": "height",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 4914,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1540,
															"name": "left",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 4913,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1539,
															"name": "top",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 4912,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1541,
																1540,
																1539
															]
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4045,
												"name": "ICodeEditor.getScrolledVisiblePosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4044,
										"name": "ICodeEditor.getScrolledVisiblePosition"
									}
								},
								{
									"id": 1605,
									"name": "getSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1606,
											"name": "getSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary selection of the editor."
											},
											"type": {
												"type": "reference",
												"id": 485,
												"name": "Selection"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4118,
												"name": "ICodeEditor.getSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4117,
										"name": "ICodeEditor.getSelection"
									}
								},
								{
									"id": 1607,
									"name": "getSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1608,
											"name": "getSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all the selections of the editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 485,
													"name": "Selection"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4120,
												"name": "ICodeEditor.getSelections"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4119,
										"name": "ICodeEditor.getSelections"
									}
								},
								{
									"id": 1563,
									"name": "getSupportedActions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1564,
											"name": "getSupportedActions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all actions associated with this editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2292,
													"name": "IEditorAction"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4076,
												"name": "ICodeEditor.getSupportedActions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4075,
										"name": "ICodeEditor.getSupportedActions"
									}
								},
								{
									"id": 1531,
									"name": "getTargetAtClientPoint",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1532,
											"name": "getTargetAtClientPoint",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the hit test target at coordinates `clientX` and `clientY`.\nThe coordinates are relative to the top-left of the viewport.",
												"returns": "Hit test target or null if the coordinates fall outside the editor or the editor has no model.\n"
											},
											"parameters": [
												{
													"id": 1533,
													"name": "clientX",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1534,
													"name": "clientY",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 3486,
												"name": "IMouseTarget"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4041,
												"name": "ICodeEditor.getTargetAtClientPoint"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4040,
										"name": "ICodeEditor.getTargetAtClientPoint"
									}
								},
								{
									"id": 1489,
									"name": "getTopForLineNumber",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1490,
											"name": "getTopForLineNumber",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the vertical position (top offset) for the line w.r.t. to the first line."
											},
											"parameters": [
												{
													"id": 1491,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3999,
												"name": "ICodeEditor.getTopForLineNumber"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3998,
										"name": "ICodeEditor.getTopForLineNumber"
									}
								},
								{
									"id": 1492,
									"name": "getTopForPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1493,
											"name": "getTopForPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the vertical position (top offset) for the position w.r.t. to the first line."
											},
											"parameters": [
												{
													"id": 1494,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1495,
													"name": "column",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4002,
												"name": "ICodeEditor.getTopForPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4001,
										"name": "ICodeEditor.getTopForPosition"
									}
								},
								{
									"id": 1425,
									"name": "getValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1426,
											"name": "getValue",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get value of the current model attached to this editor.",
												"tags": [
													{
														"tag": "see",
														"text": "`ITextModel.getValue`\n"
													}
												]
											},
											"parameters": [
												{
													"id": 1427,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1428,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 1430,
																	"name": "lineEnding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "monaco.ts",
																			"line": 4743,
																			"character": 22
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1429,
																	"name": "preserveBOM",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "monaco.ts",
																			"line": 4742,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		1430,
																		1429
																	]
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3935,
												"name": "ICodeEditor.getValue"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3934,
										"name": "ICodeEditor.getValue"
									}
								},
								{
									"id": 1565,
									"name": "getVisibleColumnFromPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1566,
											"name": "getVisibleColumnFromPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Given a position, returns a column number that takes tab-widths into account."
											},
											"parameters": [
												{
													"id": 1567,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4078,
												"name": "ICodeEditor.getVisibleColumnFromPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4077,
										"name": "ICodeEditor.getVisibleColumnFromPosition"
									}
								},
								{
									"id": 1487,
									"name": "getVisibleRanges",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1488,
											"name": "getVisibleRanges",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the ranges that are currently visible.\nDoes not account for horizontal scrolling."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 366,
													"name": "Range"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3997,
												"name": "ICodeEditor.getVisibleRanges"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3996,
										"name": "ICodeEditor.getVisibleRanges"
									}
								},
								{
									"id": 1561,
									"name": "hasTextFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1562,
											"name": "hasTextFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns true if the text inside this editor is focused (i.e. cursor is blinking)."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4074,
												"name": "ICodeEditor.hasTextFocus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4073,
										"name": "ICodeEditor.hasTextFocus"
									}
								},
								{
									"id": 1278,
									"name": "hasWidgetFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1279,
											"name": "hasWidgetFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns true if the text inside this editor or an editor widget has focus."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3788,
												"name": "ICodeEditor.hasWidgetFocus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3787,
										"name": "ICodeEditor.hasWidgetFocus"
									}
								},
								{
									"id": 1556,
									"name": "layout",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1557,
											"name": "layout",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Instructs the editor to remeasure its container. This method should\nbe called when the container of the editor gets resized.",
												"text": "If a dimension is passed in, the passed in value will be used.\n"
											},
											"parameters": [
												{
													"id": 1558,
													"name": "dimension",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2261,
														"name": "IDimension"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4069,
												"name": "ICodeEditor.layout"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4068,
										"name": "ICodeEditor.layout"
									}
								},
								{
									"id": 1503,
									"name": "layoutContentWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1504,
											"name": "layoutContentWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Layout/Reposition a content widget. This is a ping to the editor to call widget.getPosition()\nand update appropriately."
											},
											"parameters": [
												{
													"id": 1505,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3444,
														"name": "IContentWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4013,
												"name": "ICodeEditor.layoutContentWidget"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4012,
										"name": "ICodeEditor.layoutContentWidget"
									}
								},
								{
									"id": 1512,
									"name": "layoutOverlayWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1513,
											"name": "layoutOverlayWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Layout/Reposition an overlay widget. This is a ping to the editor to call widget.getPosition()\nand update appropriately."
											},
											"parameters": [
												{
													"id": 1514,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3464,
														"name": "IOverlayWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4022,
												"name": "ICodeEditor.layoutOverlayWidget"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4021,
										"name": "ICodeEditor.layoutOverlayWidget"
									}
								},
								{
									"id": 1197,
									"name": "onDidCompositionEnd",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1198,
											"name": "onDidCompositionEnd",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "An event emitted after composition has ended."
											},
											"parameters": [
												{
													"id": 1199,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1200,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1201,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3707,
												"name": "ICodeEditor.onDidCompositionEnd"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3706,
										"name": "ICodeEditor.onDidCompositionEnd"
									}
								},
								{
									"id": 1192,
									"name": "onDidCompositionStart",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1193,
											"name": "onDidCompositionStart",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "An event emitted after composition has started."
											},
											"parameters": [
												{
													"id": 1194,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1195,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1196,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3702,
												"name": "ICodeEditor.onDidCompositionStart"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3701,
										"name": "ICodeEditor.onDidCompositionStart"
									}
								},
								{
									"id": 1467,
									"name": "popUndoStop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1468,
											"name": "popUndoStop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Remove the \"undo stop\" in the undo-redo stack."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3977,
												"name": "ICodeEditor.popUndoStop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3976,
										"name": "ICodeEditor.popUndoStop"
									}
								},
								{
									"id": 1465,
									"name": "pushUndoStop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1466,
											"name": "pushUndoStop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Create an \"undo stop\" in the undo-redo stack."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3975,
												"name": "ICodeEditor.pushUndoStop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3974,
										"name": "ICodeEditor.pushUndoStop"
									}
								},
								{
									"id": 1506,
									"name": "removeContentWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1507,
											"name": "removeContentWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Remove a content widget."
											},
											"parameters": [
												{
													"id": 1508,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3444,
														"name": "IContentWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4016,
												"name": "ICodeEditor.removeContentWidget"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4015,
										"name": "ICodeEditor.removeContentWidget"
									}
								},
								{
									"id": 1515,
									"name": "removeOverlayWidget",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1516,
											"name": "removeOverlayWidget",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Remove an overlay widget."
											},
											"parameters": [
												{
													"id": 1517,
													"name": "widget",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3464,
														"name": "IOverlayWidget"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4025,
												"name": "ICodeEditor.removeOverlayWidget"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4024,
										"name": "ICodeEditor.removeOverlayWidget"
									}
								},
								{
									"id": 1528,
									"name": "render",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1529,
											"name": "render",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Force an editor render now."
											},
											"parameters": [
												{
													"id": 1530,
													"name": "forceRedraw",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4038,
												"name": "ICodeEditor.render"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4037,
										"name": "ICodeEditor.render"
									}
								},
								{
									"id": 1275,
									"name": "restoreViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1276,
											"name": "restoreViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Restores the view state of the editor from a serializable object generated by `saveViewState`."
											},
											"parameters": [
												{
													"id": 1277,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2311,
														"name": "ICodeEditorViewState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3785,
												"name": "ICodeEditor.restoreViewState"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3784,
										"name": "ICodeEditor.restoreViewState"
									}
								},
								{
									"id": 1573,
									"name": "revealLine",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1574,
											"name": "revealLine",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line."
											},
											"parameters": [
												{
													"id": 1575,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1576,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4086,
												"name": "ICodeEditor.revealLine"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4085,
										"name": "ICodeEditor.revealLine"
									}
								},
								{
									"id": 1577,
									"name": "revealLineInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1578,
											"name": "revealLineInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically."
											},
											"parameters": [
												{
													"id": 1579,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1580,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4090,
												"name": "ICodeEditor.revealLineInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4089,
										"name": "ICodeEditor.revealLineInCenter"
									}
								},
								{
									"id": 1581,
									"name": "revealLineInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1582,
											"name": "revealLineInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1583,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1584,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4094,
												"name": "ICodeEditor.revealLineInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4093,
										"name": "ICodeEditor.revealLineInCenterIfOutsideViewport"
									}
								},
								{
									"id": 1585,
									"name": "revealLineNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1586,
											"name": "revealLineNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 1587,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1588,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4098,
												"name": "ICodeEditor.revealLineNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4097,
										"name": "ICodeEditor.revealLineNearTop"
									}
								},
								{
									"id": 1621,
									"name": "revealLines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1622,
											"name": "revealLines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines."
											},
											"parameters": [
												{
													"id": 1623,
													"name": "startLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1624,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1625,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4134,
												"name": "ICodeEditor.revealLines"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4133,
										"name": "ICodeEditor.revealLines"
									}
								},
								{
									"id": 1626,
									"name": "revealLinesInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1627,
											"name": "revealLinesInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically."
											},
											"parameters": [
												{
													"id": 1628,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1629,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1630,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4139,
												"name": "ICodeEditor.revealLinesInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4138,
										"name": "ICodeEditor.revealLinesInCenter"
									}
								},
								{
									"id": 1631,
									"name": "revealLinesInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1632,
											"name": "revealLinesInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1633,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1634,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1635,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4144,
												"name": "ICodeEditor.revealLinesInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4143,
										"name": "ICodeEditor.revealLinesInCenterIfOutsideViewport"
									}
								},
								{
									"id": 1636,
									"name": "revealLinesNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1637,
											"name": "revealLinesNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 1638,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1639,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1640,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4149,
												"name": "ICodeEditor.revealLinesNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4148,
										"name": "ICodeEditor.revealLinesNearTop"
									}
								},
								{
									"id": 1589,
									"name": "revealPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1590,
											"name": "revealPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position."
											},
											"parameters": [
												{
													"id": 1591,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 1592,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4102,
												"name": "ICodeEditor.revealPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4101,
										"name": "ICodeEditor.revealPosition"
									}
								},
								{
									"id": 1593,
									"name": "revealPositionInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1594,
											"name": "revealPositionInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically."
											},
											"parameters": [
												{
													"id": 1595,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 1596,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4106,
												"name": "ICodeEditor.revealPositionInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4105,
										"name": "ICodeEditor.revealPositionInCenter"
									}
								},
								{
									"id": 1597,
									"name": "revealPositionInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1598,
											"name": "revealPositionInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1599,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 1600,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4110,
												"name": "ICodeEditor.revealPositionInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4109,
										"name": "ICodeEditor.revealPositionInCenterIfOutsideViewport"
									}
								},
								{
									"id": 1601,
									"name": "revealPositionNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1602,
											"name": "revealPositionNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 1603,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 1604,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4114,
												"name": "ICodeEditor.revealPositionNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4113,
										"name": "ICodeEditor.revealPositionNearTop"
									}
								},
								{
									"id": 1641,
									"name": "revealRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1642,
											"name": "revealRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range."
											},
											"parameters": [
												{
													"id": 1643,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1644,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4154,
												"name": "ICodeEditor.revealRange"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4153,
										"name": "ICodeEditor.revealRange"
									}
								},
								{
									"id": 1649,
									"name": "revealRangeAtTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1650,
											"name": "revealRangeAtTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range at the top of the viewport."
											},
											"parameters": [
												{
													"id": 1651,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1652,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4162,
												"name": "ICodeEditor.revealRangeAtTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4161,
										"name": "ICodeEditor.revealRangeAtTop"
									}
								},
								{
									"id": 1645,
									"name": "revealRangeInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1646,
											"name": "revealRangeInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically."
											},
											"parameters": [
												{
													"id": 1647,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1648,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4158,
												"name": "ICodeEditor.revealRangeInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4157,
										"name": "ICodeEditor.revealRangeInCenter"
									}
								},
								{
									"id": 1653,
									"name": "revealRangeInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1654,
											"name": "revealRangeInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1655,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1656,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4166,
												"name": "ICodeEditor.revealRangeInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4165,
										"name": "ICodeEditor.revealRangeInCenterIfOutsideViewport"
									}
								},
								{
									"id": 1657,
									"name": "revealRangeNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1658,
											"name": "revealRangeNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 1659,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1660,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4170,
												"name": "ICodeEditor.revealRangeNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4169,
										"name": "ICodeEditor.revealRangeNearTop"
									}
								},
								{
									"id": 1661,
									"name": "revealRangeNearTopIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1662,
											"name": "revealRangeNearTopIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition. Only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1663,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1664,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4174,
												"name": "ICodeEditor.revealRangeNearTopIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4173,
										"name": "ICodeEditor.revealRangeNearTopIfOutsideViewport"
									}
								},
								{
									"id": 1273,
									"name": "saveViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1274,
											"name": "saveViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Saves current view state of the editor in a serializable object."
											},
											"type": {
												"type": "reference",
												"id": 2311,
												"name": "ICodeEditorViewState"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3783,
												"name": "ICodeEditor.saveViewState"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3782,
										"name": "ICodeEditor.saveViewState"
									}
								},
								{
									"id": 1286,
									"name": "setModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1287,
											"name": "setModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the current model attached to this editor.\nIf the previous model was created by the editor via the value key in the options\nliteral object, it will be destroyed. Otherwise, if the previous model was set\nvia setModel, or the model key in the options literal object, the previous model\nwill not be destroyed.\nIt is safe to call setModel(null) to simply detach the current model from the editor."
											},
											"parameters": [
												{
													"id": 1288,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3796,
												"name": "ICodeEditor.setModel"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3795,
										"name": "ICodeEditor.setModel"
									}
								},
								{
									"id": 1570,
									"name": "setPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1571,
											"name": "setPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary position of the cursor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1572,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "New primary cursor's position\n"
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4083,
												"name": "ICodeEditor.setPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4082,
										"name": "ICodeEditor.setPosition"
									}
								},
								{
									"id": 1446,
									"name": "setScrollLeft",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1447,
											"name": "setScrollLeft",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the scrollLeft of the editor's viewport."
											},
											"parameters": [
												{
													"id": 1448,
													"name": "newScrollLeft",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1449,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3956,
												"name": "ICodeEditor.setScrollLeft"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3955,
										"name": "ICodeEditor.setScrollLeft"
									}
								},
								{
									"id": 1454,
									"name": "setScrollPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1455,
											"name": "setScrollPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the scroll position of the editor's viewport."
											},
											"parameters": [
												{
													"id": 1456,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2289,
														"name": "INewScrollPosition"
													}
												},
												{
													"id": 1457,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3964,
												"name": "ICodeEditor.setScrollPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3963,
										"name": "ICodeEditor.setScrollPosition"
									}
								},
								{
									"id": 1450,
									"name": "setScrollTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1451,
											"name": "setScrollTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the scrollTop of the editor's viewport."
											},
											"parameters": [
												{
													"id": 1452,
													"name": "newScrollTop",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1453,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3960,
												"name": "ICodeEditor.setScrollTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3959,
										"name": "ICodeEditor.setScrollTop"
									}
								},
								{
									"id": 1609,
									"name": "setSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1610,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1611,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4122,
												"name": "ICodeEditor.setSelection"
											}
										},
										{
											"id": 1612,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1613,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4124,
												"name": "ICodeEditor.setSelection"
											}
										},
										{
											"id": 1614,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1615,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 480,
														"name": "ISelection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4126,
												"name": "ICodeEditor.setSelection"
											}
										},
										{
											"id": 1616,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1617,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 485,
														"name": "Selection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4128,
												"name": "ICodeEditor.setSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4121,
										"name": "ICodeEditor.setSelection"
									}
								},
								{
									"id": 1618,
									"name": "setSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1619,
											"name": "setSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the selections for all the cursors of the editor.\nCursors will be removed or added, as necessary."
											},
											"parameters": [
												{
													"id": 1620,
													"name": "selections",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 480,
																"name": "ISelection"
															}
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4131,
												"name": "ICodeEditor.setSelections"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4130,
										"name": "ICodeEditor.setSelections"
									}
								},
								{
									"id": 1431,
									"name": "setValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1432,
											"name": "setValue",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the value of the current model attached to this editor.",
												"tags": [
													{
														"tag": "see",
														"text": "`ITextModel.setValue`\n"
													}
												]
											},
											"parameters": [
												{
													"id": 1433,
													"name": "newValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 3941,
												"name": "ICodeEditor.setValue"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 3940,
										"name": "ICodeEditor.setValue"
									}
								},
								{
									"id": 1665,
									"name": "trigger",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1666,
											"name": "trigger",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Directly trigger a handler or an editor action."
											},
											"parameters": [
												{
													"id": 1667,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1668,
													"name": "handlerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The id of the handler or the id of a contribution."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1669,
													"name": "payload",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Extra data to be sent to the handler.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4178,
												"name": "ICodeEditor.trigger"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4177,
										"name": "ICodeEditor.trigger"
									}
								},
								{
									"id": 1102,
									"name": "updateOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1103,
											"name": "updateOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1104,
													"name": "newOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 2534,
																"name": "IEditorOptions"
															},
															{
																"type": "reference",
																"id": 815,
																"name": "IGlobalEditorOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"id": 4066,
												"name": "ICodeEditor.updateOptions"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 4065,
										"name": "ICodeEditor.updateOptions"
									}
								}
							],
							"groups": [
								{
									"title": "Events",
									"kind": 8388608,
									"children": [
										1225,
										1202,
										1177,
										1187,
										1142,
										1148,
										1154,
										1160,
										1118,
										1166,
										1124,
										1130,
										1136,
										1261,
										1545,
										1172,
										1182,
										1255,
										1207,
										1267,
										1249,
										1243,
										1219,
										1237,
										1231,
										1213
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1115,
										1105,
										1500,
										1509,
										1542,
										1518,
										1110,
										1481,
										1550,
										1461,
										1474,
										1469,
										1559,
										1458,
										1496,
										1440,
										1434,
										1280,
										1498,
										1554,
										1552,
										1485,
										1478,
										1284,
										1524,
										1291,
										1289,
										1568,
										1423,
										1442,
										1438,
										1444,
										1436,
										1535,
										1605,
										1607,
										1563,
										1531,
										1489,
										1492,
										1425,
										1565,
										1487,
										1561,
										1278,
										1556,
										1503,
										1512,
										1197,
										1192,
										1467,
										1465,
										1506,
										1515,
										1528,
										1275,
										1573,
										1577,
										1581,
										1585,
										1621,
										1626,
										1631,
										1636,
										1589,
										1593,
										1597,
										1601,
										1641,
										1649,
										1645,
										1653,
										1657,
										1661,
										1273,
										1286,
										1570,
										1446,
										1454,
										1450,
										1609,
										1618,
										1431,
										1665,
										1102
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1213,
									"character": 42
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 3626,
									"name": "ICodeEditor"
								}
							]
						},
						{
							"id": 1670,
							"name": "IStandaloneDiffEditor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1716,
									"name": "onDidDispose",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1717,
											"name": "onDidDispose",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the editor has been disposed."
											},
											"parameters": [
												{
													"id": 1718,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1719,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1720,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4218,
												"name": "IDiffEditor.onDidDispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4217,
										"name": "IDiffEditor.onDidDispose"
									}
								},
								{
									"id": 1690,
									"name": "onDidUpdateDiff",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 1691,
											"name": "onDidUpdateDiff",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the diff information computed by this diff editor has been updated."
											},
											"parameters": [
												{
													"id": 1692,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1693,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1694,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4188,
												"name": "IDiffEditor.onDidUpdateDiff"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4187,
										"name": "IDiffEditor.onDidUpdateDiff"
									}
								},
								{
									"id": 1681,
									"name": "addAction",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1682,
											"name": "addAction",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1683,
													"name": "descriptor",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 803,
														"name": "IActionDescriptor"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 1671,
									"name": "addCommand",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1672,
											"name": "addCommand",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1673,
													"name": "keybinding",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1674,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1841,
														"name": "ICommandHandler"
													}
												},
												{
													"id": 1675,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1676,
									"name": "createContextKey",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1677,
											"name": "createContextKey",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 1678,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 1679,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1680,
													"name": "defaultValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1844,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "IContextKey"
											}
										}
									]
								},
								{
									"id": 1721,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1722,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Dispose the editor."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4223,
												"name": "IDiffEditor.dispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4222,
										"name": "IDiffEditor.dispose"
									}
								},
								{
									"id": 1730,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1731,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Brings browser focus to the editor text"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4232,
												"name": "IDiffEditor.focus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4231,
										"name": "IDiffEditor.focus"
									}
								},
								{
									"id": 1710,
									"name": "getDiffLineInformationForModified",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1711,
											"name": "getDiffLineInformationForModified",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get information based on computed diff about a line number from the modified model.\nIf the diff computation is not finished or the model is missing, will return null."
											},
											"parameters": [
												{
													"id": 1712,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4182,
												"name": "IDiffLineInformation"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4212,
												"name": "IDiffEditor.getDiffLineInformationForModified"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4211,
										"name": "IDiffEditor.getDiffLineInformationForModified"
									}
								},
								{
									"id": 1707,
									"name": "getDiffLineInformationForOriginal",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1708,
											"name": "getDiffLineInformationForOriginal",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get information based on computed diff about a line number from the original model.\nIf the diff computation is not finished or the model is missing, will return null."
											},
											"parameters": [
												{
													"id": 1709,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4182,
												"name": "IDiffLineInformation"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4209,
												"name": "IDiffEditor.getDiffLineInformationForOriginal"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4208,
										"name": "IDiffEditor.getDiffLineInformationForOriginal"
									}
								},
								{
									"id": 1688,
									"name": "getDomNode",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1689,
											"name": "getDomNode",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"tags": [
													{
														"tag": "see",
														"text": "ICodeEditor.getDomNode\n"
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4186,
												"name": "IDiffEditor.getDomNode"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4185,
										"name": "IDiffEditor.getDomNode"
									}
								},
								{
									"id": 1725,
									"name": "getEditorType",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1726,
											"name": "getEditorType",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the editor type. Please see `EditorType`.\nThis is to avoid an instanceof check"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4227,
												"name": "IDiffEditor.getEditorType"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4226,
										"name": "IDiffEditor.getEditorType"
									}
								},
								{
									"id": 1723,
									"name": "getId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1724,
											"name": "getId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a unique id for this editor instance."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4225,
												"name": "IDiffEditor.getId"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4224,
										"name": "IDiffEditor.getId"
									}
								},
								{
									"id": 1705,
									"name": "getLineChanges",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1706,
											"name": "getLineChanges",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the computed diff information."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2278,
													"name": "ILineChange"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4207,
												"name": "IDiffEditor.getLineChanges"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4206,
										"name": "IDiffEditor.getLineChanges"
									}
								},
								{
									"id": 1700,
									"name": "getModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1701,
											"name": "getModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Type the getModel() of IEditor."
											},
											"type": {
												"type": "reference",
												"id": 2255,
												"name": "IDiffEditorModel"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4198,
												"name": "IDiffEditor.getModel"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4197,
										"name": "IDiffEditor.getModel"
									}
								},
								{
									"id": 1686,
									"name": "getModifiedEditor",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1687,
											"name": "getModifiedEditor",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1101,
												"name": "IStandaloneCodeEditor"
											},
											"overwrites": {
												"type": "reference",
												"id": 4205,
												"name": "IDiffEditor.getModifiedEditor"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 4204,
										"name": "IDiffEditor.getModifiedEditor"
									}
								},
								{
									"id": 1684,
									"name": "getOriginalEditor",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1685,
											"name": "getOriginalEditor",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1101,
												"name": "IStandaloneCodeEditor"
											},
											"overwrites": {
												"type": "reference",
												"id": 4203,
												"name": "IDiffEditor.getOriginalEditor"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"id": 4202,
										"name": "IDiffEditor.getOriginalEditor"
									}
								},
								{
									"id": 1739,
									"name": "getPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1740,
											"name": "getPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary position of the cursor."
											},
											"type": {
												"type": "reference",
												"id": 311,
												"name": "Position"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4241,
												"name": "IDiffEditor.getPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4240,
										"name": "IDiffEditor.getPosition"
									}
								},
								{
									"id": 1776,
									"name": "getSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1777,
											"name": "getSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the primary selection of the editor."
											},
											"type": {
												"type": "reference",
												"id": 485,
												"name": "Selection"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4278,
												"name": "IDiffEditor.getSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4277,
										"name": "IDiffEditor.getSelection"
									}
								},
								{
									"id": 1778,
									"name": "getSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1779,
											"name": "getSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all the selections of the editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 485,
													"name": "Selection"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4280,
												"name": "IDiffEditor.getSelections"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4279,
										"name": "IDiffEditor.getSelections"
									}
								},
								{
									"id": 1734,
									"name": "getSupportedActions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1735,
											"name": "getSupportedActions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns all actions associated with this editor."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2292,
													"name": "IEditorAction"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4236,
												"name": "IDiffEditor.getSupportedActions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4235,
										"name": "IDiffEditor.getSupportedActions"
									}
								},
								{
									"id": 1736,
									"name": "getVisibleColumnFromPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1737,
											"name": "getVisibleColumnFromPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Given a position, returns a column number that takes tab-widths into account."
											},
											"parameters": [
												{
													"id": 1738,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4238,
												"name": "IDiffEditor.getVisibleColumnFromPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4237,
										"name": "IDiffEditor.getVisibleColumnFromPosition"
									}
								},
								{
									"id": 1732,
									"name": "hasTextFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1733,
											"name": "hasTextFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns true if the text inside this editor is focused (i.e. cursor is blinking)."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4234,
												"name": "IDiffEditor.hasTextFocus"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4233,
										"name": "IDiffEditor.hasTextFocus"
									}
								},
								{
									"id": 1727,
									"name": "layout",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1728,
											"name": "layout",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Instructs the editor to remeasure its container. This method should\nbe called when the container of the editor gets resized.",
												"text": "If a dimension is passed in, the passed in value will be used.\n"
											},
											"parameters": [
												{
													"id": 1729,
													"name": "dimension",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2261,
														"name": "IDimension"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4229,
												"name": "IDiffEditor.layout"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4228,
										"name": "IDiffEditor.layout"
									}
								},
								{
									"id": 1697,
									"name": "restoreViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1698,
											"name": "restoreViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Restores the view state of the editor from a serializable object generated by `saveViewState`."
											},
											"parameters": [
												{
													"id": 1699,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2318,
														"name": "IDiffEditorViewState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4195,
												"name": "IDiffEditor.restoreViewState"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4194,
										"name": "IDiffEditor.restoreViewState"
									}
								},
								{
									"id": 1744,
									"name": "revealLine",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1745,
											"name": "revealLine",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line."
											},
											"parameters": [
												{
													"id": 1746,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1747,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4246,
												"name": "IDiffEditor.revealLine"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4245,
										"name": "IDiffEditor.revealLine"
									}
								},
								{
									"id": 1748,
									"name": "revealLineInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1749,
											"name": "revealLineInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically."
											},
											"parameters": [
												{
													"id": 1750,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1751,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4250,
												"name": "IDiffEditor.revealLineInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4249,
										"name": "IDiffEditor.revealLineInCenter"
									}
								},
								{
									"id": 1752,
									"name": "revealLineInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1753,
											"name": "revealLineInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1754,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1755,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4254,
												"name": "IDiffEditor.revealLineInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4253,
										"name": "IDiffEditor.revealLineInCenterIfOutsideViewport"
									}
								},
								{
									"id": 1756,
									"name": "revealLineNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1757,
											"name": "revealLineNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal a line close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 1758,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1759,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4258,
												"name": "IDiffEditor.revealLineNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4257,
										"name": "IDiffEditor.revealLineNearTop"
									}
								},
								{
									"id": 1792,
									"name": "revealLines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1793,
											"name": "revealLines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines."
											},
											"parameters": [
												{
													"id": 1794,
													"name": "startLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1795,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1796,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4294,
												"name": "IDiffEditor.revealLines"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4293,
										"name": "IDiffEditor.revealLines"
									}
								},
								{
									"id": 1797,
									"name": "revealLinesInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1798,
											"name": "revealLinesInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically."
											},
											"parameters": [
												{
													"id": 1799,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1800,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1801,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4299,
												"name": "IDiffEditor.revealLinesInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4298,
										"name": "IDiffEditor.revealLinesInCenter"
									}
								},
								{
									"id": 1802,
									"name": "revealLinesInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1803,
											"name": "revealLinesInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1804,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1805,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1806,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4304,
												"name": "IDiffEditor.revealLinesInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4303,
										"name": "IDiffEditor.revealLinesInCenterIfOutsideViewport"
									}
								},
								{
									"id": 1807,
									"name": "revealLinesNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1808,
											"name": "revealLinesNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically as necessary and reveal lines close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 1809,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1810,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1811,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4309,
												"name": "IDiffEditor.revealLinesNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4308,
										"name": "IDiffEditor.revealLinesNearTop"
									}
								},
								{
									"id": 1760,
									"name": "revealPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1761,
											"name": "revealPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position."
											},
											"parameters": [
												{
													"id": 1762,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 1763,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4262,
												"name": "IDiffEditor.revealPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4261,
										"name": "IDiffEditor.revealPosition"
									}
								},
								{
									"id": 1764,
									"name": "revealPositionInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1765,
											"name": "revealPositionInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically."
											},
											"parameters": [
												{
													"id": 1766,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 1767,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4266,
												"name": "IDiffEditor.revealPositionInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4265,
										"name": "IDiffEditor.revealPositionInCenter"
									}
								},
								{
									"id": 1768,
									"name": "revealPositionInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1769,
											"name": "revealPositionInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1770,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 1771,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4270,
												"name": "IDiffEditor.revealPositionInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4269,
										"name": "IDiffEditor.revealPositionInCenterIfOutsideViewport"
									}
								},
								{
									"id": 1772,
									"name": "revealPositionNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1773,
											"name": "revealPositionNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a position close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 1774,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 1775,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4274,
												"name": "IDiffEditor.revealPositionNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4273,
										"name": "IDiffEditor.revealPositionNearTop"
									}
								},
								{
									"id": 1812,
									"name": "revealRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1813,
											"name": "revealRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range."
											},
											"parameters": [
												{
													"id": 1814,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1815,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4314,
												"name": "IDiffEditor.revealRange"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4313,
										"name": "IDiffEditor.revealRange"
									}
								},
								{
									"id": 1820,
									"name": "revealRangeAtTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1821,
											"name": "revealRangeAtTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range at the top of the viewport."
											},
											"parameters": [
												{
													"id": 1822,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1823,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4322,
												"name": "IDiffEditor.revealRangeAtTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4321,
										"name": "IDiffEditor.revealRangeAtTop"
									}
								},
								{
									"id": 1816,
									"name": "revealRangeInCenter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1817,
											"name": "revealRangeInCenter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically."
											},
											"parameters": [
												{
													"id": 1818,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1819,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4318,
												"name": "IDiffEditor.revealRangeInCenter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4317,
										"name": "IDiffEditor.revealRangeInCenter"
									}
								},
								{
									"id": 1824,
									"name": "revealRangeInCenterIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1825,
											"name": "revealRangeInCenterIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1826,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1827,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4326,
												"name": "IDiffEditor.revealRangeInCenterIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4325,
										"name": "IDiffEditor.revealRangeInCenterIfOutsideViewport"
									}
								},
								{
									"id": 1828,
									"name": "revealRangeNearTop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1829,
											"name": "revealRangeNearTop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition."
											},
											"parameters": [
												{
													"id": 1830,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1831,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4330,
												"name": "IDiffEditor.revealRangeNearTop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4329,
										"name": "IDiffEditor.revealRangeNearTop"
									}
								},
								{
									"id": 1832,
									"name": "revealRangeNearTopIfOutsideViewport",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1833,
											"name": "revealRangeNearTopIfOutsideViewport",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,\noptimized for viewing a code definition. Only if it lies outside the viewport."
											},
											"parameters": [
												{
													"id": 1834,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 1835,
													"name": "scrollType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2322,
														"name": "ScrollType"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4334,
												"name": "IDiffEditor.revealRangeNearTopIfOutsideViewport"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4333,
										"name": "IDiffEditor.revealRangeNearTopIfOutsideViewport"
									}
								},
								{
									"id": 1695,
									"name": "saveViewState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1696,
											"name": "saveViewState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Saves current view state of the editor in a serializable object."
											},
											"type": {
												"type": "reference",
												"id": 2318,
												"name": "IDiffEditorViewState"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4193,
												"name": "IDiffEditor.saveViewState"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4192,
										"name": "IDiffEditor.saveViewState"
									}
								},
								{
									"id": 1702,
									"name": "setModel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1703,
											"name": "setModel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the current model attached to this editor.\nIf the previous model was created by the editor via the value key in the options\nliteral object, it will be destroyed. Otherwise, if the previous model was set\nvia setModel, or the model key in the options literal object, the previous model\nwill not be destroyed.\nIt is safe to call setModel(null) to simply detach the current model from the editor."
											},
											"parameters": [
												{
													"id": 1704,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2255,
														"name": "IDiffEditorModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4200,
												"name": "IDiffEditor.setModel"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4199,
										"name": "IDiffEditor.setModel"
									}
								},
								{
									"id": 1741,
									"name": "setPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1742,
											"name": "setPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary position of the cursor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1743,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "New primary cursor's position\n"
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4243,
												"name": "IDiffEditor.setPosition"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4242,
										"name": "IDiffEditor.setPosition"
									}
								},
								{
									"id": 1780,
									"name": "setSelection",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1781,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1782,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4282,
												"name": "IDiffEditor.setSelection"
											}
										},
										{
											"id": 1783,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1784,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4284,
												"name": "IDiffEditor.setSelection"
											}
										},
										{
											"id": 1785,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1786,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 480,
														"name": "ISelection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4286,
												"name": "IDiffEditor.setSelection"
											}
										},
										{
											"id": 1787,
											"name": "setSelection",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the primary selection of the editor. This will remove any secondary cursors."
											},
											"parameters": [
												{
													"id": 1788,
													"name": "selection",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The new selection\n"
													},
													"type": {
														"type": "reference",
														"id": 485,
														"name": "Selection"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4288,
												"name": "IDiffEditor.setSelection"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4281,
										"name": "IDiffEditor.setSelection"
									}
								},
								{
									"id": 1789,
									"name": "setSelections",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1790,
											"name": "setSelections",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set the selections for all the cursors of the editor.\nCursors will be removed or added, as necessary."
											},
											"parameters": [
												{
													"id": 1791,
													"name": "selections",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 480,
																"name": "ISelection"
															}
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4291,
												"name": "IDiffEditor.setSelections"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4290,
										"name": "IDiffEditor.setSelections"
									}
								},
								{
									"id": 1836,
									"name": "trigger",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1837,
											"name": "trigger",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Directly trigger a handler or an editor action."
											},
											"parameters": [
												{
													"id": 1838,
													"name": "source",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The source of the call."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1839,
													"name": "handlerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The id of the handler or the id of a contribution."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1840,
													"name": "payload",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Extra data to be sent to the handler.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4338,
												"name": "IDiffEditor.trigger"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4337,
										"name": "IDiffEditor.trigger"
									}
								},
								{
									"id": 1713,
									"name": "updateOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 1714,
											"name": "updateOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Update the editor's options after the editor has been created."
											},
											"parameters": [
												{
													"id": 1715,
													"name": "newOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2656,
														"name": "IDiffEditorOptions"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4215,
												"name": "IDiffEditor.updateOptions"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4214,
										"name": "IDiffEditor.updateOptions"
									}
								}
							],
							"groups": [
								{
									"title": "Events",
									"kind": 8388608,
									"children": [
										1716,
										1690
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1681,
										1671,
										1676,
										1721,
										1730,
										1710,
										1707,
										1688,
										1725,
										1723,
										1705,
										1700,
										1686,
										1684,
										1739,
										1776,
										1778,
										1734,
										1736,
										1732,
										1727,
										1697,
										1744,
										1748,
										1752,
										1756,
										1792,
										1797,
										1802,
										1807,
										1760,
										1764,
										1768,
										1772,
										1812,
										1820,
										1816,
										1824,
										1828,
										1832,
										1695,
										1702,
										1741,
										1780,
										1789,
										1836,
										1713
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1220,
									"character": 42
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4184,
									"name": "IDiffEditor"
								}
							]
						},
						{
							"id": 827,
							"name": "IStandaloneEditorConstructionOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The options to create an editor."
							},
							"children": [
								{
									"id": 918,
									"name": "acceptSuggestionOnCommitCharacter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on provider defined characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3032,
											"character": 41
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3588,
										"name": "IEditorConstructionOptions.acceptSuggestionOnCommitCharacter"
									}
								},
								{
									"id": 917,
									"name": "acceptSuggestionOnEnter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Accept suggestions on ENTER.\nDefaults to 'on'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3027,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "smart"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3587,
										"name": "IEditorConstructionOptions.acceptSuggestionOnEnter"
									}
								},
								{
									"id": 832,
									"name": "accessibilityHelpUrl",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An URL to open when Ctrl+H (Windows and Linux) or Cmd+H (OSX) is pressed in\nthe accessibility help dialog in the editor.",
										"text": "Defaults to \"https://go.microsoft.com/fwlink/?linkid=852450\"\n"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1197,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 899,
									"name": "accessibilityPageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the number of lines in the editor that can be read out by a screen reader"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2943,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3569,
										"name": "IEditorConstructionOptions.accessibilityPageSize"
									}
								},
								{
									"id": 898,
									"name": "accessibilitySupport",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's accessibility support.\nDefaults to 'auto'. It is best to leave this to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2939,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3568,
										"name": "IEditorConstructionOptions.accessibilitySupport"
									}
								},
								{
									"id": 836,
									"name": "ariaLabel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The aria label for the editor's textarea (when it is focused)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2623,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3506,
										"name": "IEditorConstructionOptions.ariaLabel"
									}
								},
								{
									"id": 907,
									"name": "autoClosingBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing brackets.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2978,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3577,
										"name": "IEditorConstructionOptions.autoClosingBrackets"
									}
								},
								{
									"id": 909,
									"name": "autoClosingOvertype",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for typing over closing quotes or brackets."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2987,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 2527,
										"name": "EditorAutoClosingOvertypeStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3579,
										"name": "IEditorConstructionOptions.autoClosingOvertype"
									}
								},
								{
									"id": 908,
									"name": "autoClosingQuotes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto closing quotes.\nDefaults to language defined behavior."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2983,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"id": 2525,
										"name": "EditorAutoClosingStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3578,
										"name": "IEditorConstructionOptions.autoClosingQuotes"
									}
								},
								{
									"id": 911,
									"name": "autoIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\nDefaults to advanced."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2997,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "advanced"
											},
											{
												"type": "literal",
												"value": "full"
											},
											{
												"type": "literal",
												"value": "brackets"
											},
											{
												"type": "literal",
												"value": "keep"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3581,
										"name": "IEditorConstructionOptions.autoIndent"
									}
								},
								{
									"id": 910,
									"name": "autoSurround",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Options for auto surrounding.\nDefaults to always allowing auto surrounding."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2992,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2526,
										"name": "EditorAutoSurroundStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3580,
										"name": "IEditorConstructionOptions.autoSurround"
									}
								},
								{
									"id": 876,
									"name": "automaticLayout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor will install an interval to check if its container dom node size has changed.\nEnabling this might have a severe performance impact.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2825,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3546,
										"name": "IEditorConstructionOptions.automaticLayout"
									}
								},
								{
									"id": 932,
									"name": "codeActionsOnSaveTimeout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Timeout for running code actions on save."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3093,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3602,
										"name": "IEditorConstructionOptions.codeActionsOnSaveTimeout"
									}
								},
								{
									"id": 928,
									"name": "codeLens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show code lens\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3077,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3598,
										"name": "IEditorConstructionOptions.codeLens"
									}
								},
								{
									"id": 929,
									"name": "codeLensFontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font family. Defaults to editor font family."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3081,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3599,
										"name": "IEditorConstructionOptions.codeLensFontFamily"
									}
								},
								{
									"id": 930,
									"name": "codeLensFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Code lens font size. Default to 90% of the editor font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3085,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3600,
										"name": "IEditorConstructionOptions.codeLensFontSize"
									}
								},
								{
									"id": 888,
									"name": "colorDecorators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable inline color decorators and color picker rendering."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2890,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3558,
										"name": "IEditorConstructionOptions.colorDecorators"
									}
								},
								{
									"id": 894,
									"name": "columnSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the selection with the mouse and keys is doing column selection.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2919,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3564,
										"name": "IEditorConstructionOptions.columnSelection"
									}
								},
								{
									"id": 889,
									"name": "comments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behaviour of comments in the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2894,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 2933,
										"name": "IEditorCommentsOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3559,
										"name": "IEditorConstructionOptions.comments"
									}
								},
								{
									"id": 890,
									"name": "contextmenu",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable custom contextmenu.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2899,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3560,
										"name": "IEditorConstructionOptions.contextmenu"
									}
								},
								{
									"id": 921,
									"name": "copyWithSyntaxHighlighting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Syntax highlighting is copied."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3044,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3591,
										"name": "IEditorConstructionOptions.copyWithSyntaxHighlighting"
									}
								},
								{
									"id": 863,
									"name": "cursorBlinking",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\nDefaults to 'blink'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2759,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "blink"
											},
											{
												"type": "literal",
												"value": "smooth"
											},
											{
												"type": "literal",
												"value": "phase"
											},
											{
												"type": "literal",
												"value": "expand"
											},
											{
												"type": "literal",
												"value": "solid"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3533,
										"name": "IEditorConstructionOptions.cursorBlinking"
									}
								},
								{
									"id": 866,
									"name": "cursorSmoothCaretAnimation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable smooth caret animation.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2774,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3536,
										"name": "IEditorConstructionOptions.cursorSmoothCaretAnimation"
									}
								},
								{
									"id": 867,
									"name": "cursorStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the cursor style, either 'block' or 'line'.\nDefaults to 'line'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2779,
											"character": 19
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "block"
											},
											{
												"type": "literal",
												"value": "underline"
											},
											{
												"type": "literal",
												"value": "line-thin"
											},
											{
												"type": "literal",
												"value": "block-outline"
											},
											{
												"type": "literal",
												"value": "underline-thin"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3537,
										"name": "IEditorConstructionOptions.cursorStyle"
									}
								},
								{
									"id": 842,
									"name": "cursorSurroundingLines",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the minimal number of visible leading and trailing lines surrounding the cursor.\nDefaults to 0."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2655,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3512,
										"name": "IEditorConstructionOptions.cursorSurroundingLines"
									}
								},
								{
									"id": 843,
									"name": "cursorSurroundingLinesStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls when `cursorSurroundingLines` should be enforced\nDefaults to `default`, `cursorSurroundingLines` is not enforced when cursor position is changed\nby mouse."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2661,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "all"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3513,
										"name": "IEditorConstructionOptions.cursorSurroundingLinesStyle"
									}
								},
								{
									"id": 868,
									"name": "cursorWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of the cursor when cursorStyle is set to 'line'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2783,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3538,
										"name": "IEditorConstructionOptions.cursorWidth"
									}
								},
								{
									"id": 953,
									"name": "definitionLinkOpensInPeek",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the definition link opens element in the peek widget.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3191,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3623,
										"name": "IEditorConstructionOptions.definitionLinkOpensInPeek"
									}
								},
								{
									"id": 958,
									"name": "detectIndentation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether `tabSize` and `insertSpaces` will be automatically detected when a file is opened based on the file contents.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1119,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 818,
										"name": "IGlobalEditorOptions.detectIndentation"
									}
								},
								{
									"id": 833,
									"name": "dimension",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The initial editor dimension (to avoid measuring the container)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4537,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 2261,
										"name": "IDimension"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3503,
										"name": "IEditorConstructionOptions.dimension"
									}
								},
								{
									"id": 870,
									"name": "disableLayerHinting",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers.\nThe usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2794,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3540,
										"name": "IEditorConstructionOptions.disableLayerHinting"
									}
								},
								{
									"id": 871,
									"name": "disableMonospaceOptimizations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Disable the optimizations for monospace fonts.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2799,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3541,
										"name": "IEditorConstructionOptions.disableMonospaceOptimizations"
									}
								},
								{
									"id": 915,
									"name": "dragAndDrop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if the editor should allow to move selections via drag and drop.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3017,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3585,
										"name": "IEditorConstructionOptions.dragAndDrop"
									}
								},
								{
									"id": 920,
									"name": "emptySelectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Copying without a selection copies the current line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3040,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3590,
										"name": "IEditorConstructionOptions.emptySelectionClipboard"
									}
								},
								{
									"id": 852,
									"name": "extraEditorClassName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Class name to be added to the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2708,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3522,
										"name": "IEditorConstructionOptions.extraEditorClassName"
									}
								},
								{
									"id": 892,
									"name": "fastScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "FastScrolling mulitplier speed when pressing `Alt`\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2909,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3562,
										"name": "IEditorConstructionOptions.fastScrollSensitivity"
									}
								},
								{
									"id": 859,
									"name": "find",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior of the find widget."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2739,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 2951,
										"name": "IEditorFindOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3529,
										"name": "IEditorConstructionOptions.find"
									}
								},
								{
									"id": 860,
									"name": "fixedOverflowWidgets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Display overflow widgets as `fixed`.\nDefaults to `false`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2744,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3530,
										"name": "IEditorConstructionOptions.fixedOverflowWidgets"
									}
								},
								{
									"id": 933,
									"name": "folding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable code folding.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3098,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3603,
										"name": "IEditorConstructionOptions.folding"
									}
								},
								{
									"id": 935,
									"name": "foldingHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlight for folded regions.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3108,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3605,
										"name": "IEditorConstructionOptions.foldingHighlight"
									}
								},
								{
									"id": 934,
									"name": "foldingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\nDefaults to 'auto'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3103,
											"character": 23
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "indentation"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3604,
										"name": "IEditorConstructionOptions.foldingStrategy"
									}
								},
								{
									"id": 946,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font family"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3161,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3616,
										"name": "IEditorConstructionOptions.fontFamily"
									}
								},
								{
									"id": 869,
									"name": "fontLigatures",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable font ligatures.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2788,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3539,
										"name": "IEditorConstructionOptions.fontLigatures"
									}
								},
								{
									"id": 948,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3169,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3618,
										"name": "IEditorConstructionOptions.fontSize"
									}
								},
								{
									"id": 947,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font weight"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3165,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3617,
										"name": "IEditorConstructionOptions.fontWeight"
									}
								},
								{
									"id": 914,
									"name": "formatOnPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on paste.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3012,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3584,
										"name": "IEditorConstructionOptions.formatOnPaste"
									}
								},
								{
									"id": 913,
									"name": "formatOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable format on type.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3007,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3583,
										"name": "IEditorConstructionOptions.formatOnType"
									}
								},
								{
									"id": 848,
									"name": "glyphMargin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the rendering of the glyph margin.\nDefaults to true in vscode and to false in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2686,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3518,
										"name": "IEditorConstructionOptions.glyphMargin"
									}
								},
								{
									"id": 902,
									"name": "gotoLocation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2955,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 2959,
										"name": "IGotoLocationOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3572,
										"name": "IEditorConstructionOptions.gotoLocation"
									}
								},
								{
									"id": 872,
									"name": "hideCursorInOverviewRuler",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the cursor be hidden in the overview ruler.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2804,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3542,
										"name": "IEditorConstructionOptions.hideCursorInOverviewRuler"
									}
								},
								{
									"id": 942,
									"name": "highlightActiveIndentGuide",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of the active indent guide.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3143,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3612,
										"name": "IEditorConstructionOptions.highlightActiveIndentGuide"
									}
								},
								{
									"id": 886,
									"name": "hover",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the editor's hover."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2881,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 2972,
										"name": "IEditorHoverOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3556,
										"name": "IEditorConstructionOptions.hover"
									}
								},
								{
									"id": 835,
									"name": "inDiffEditor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This editor is used inside a diff editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2619,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3505,
										"name": "IEditorConstructionOptions.inDiffEditor"
									}
								},
								{
									"id": 955,
									"name": "inlineHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the inline hints."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3199,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3020,
										"name": "IEditorInlineHintsOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3625,
										"name": "IEditorConstructionOptions.inlineHints"
									}
								},
								{
									"id": 957,
									"name": "insertSpaces",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Insert spaces when pressing `Tab`.\nThis setting is overridden based on the file contents when `detectIndentation` is on.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1114,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 817,
										"name": "IGlobalEditorOptions.insertSpaces"
									}
								},
								{
									"id": 830,
									"name": "language",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The initial language of the auto created model in the editor.\nTo not create automatically a model, use `model: null`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1183,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 960,
									"name": "largeFileOptimizations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Special handling for large files to disable certain memory intensive features.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1129,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 820,
										"name": "IGlobalEditorOptions.largeFileOptimizations"
									}
								},
								{
									"id": 950,
									"name": "letterSpacing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The letter spacing"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3177,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3620,
										"name": "IEditorConstructionOptions.letterSpacing"
									}
								},
								{
									"id": 931,
									"name": "lightbulb",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the code action lightbulb."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3089,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3017,
										"name": "IEditorLightbulbOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3601,
										"name": "IEditorConstructionOptions.lightbulb"
									}
								},
								{
									"id": 849,
									"name": "lineDecorationsWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width reserved for line decorations (in px).\nLine decorations are placed between line numbers and the editor content.\nYou can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\nDefaults to 10."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2693,
											"character": 28
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3519,
										"name": "IEditorConstructionOptions.lineDecorationsWidth"
									}
								},
								{
									"id": 949,
									"name": "lineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3173,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3619,
										"name": "IEditorConstructionOptions.lineHeight"
									}
								},
								{
									"id": 841,
									"name": "lineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the rendering of line numbers.\nIf it is a function, it will be invoked when rendering a line number and the return value will be rendered.\nOtherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\nOtherwise, line numbers will not be rendered.\nDefaults to `on`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2650,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3049,
										"name": "LineNumbersType"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3511,
										"name": "IEditorConstructionOptions.lineNumbers"
									}
								},
								{
									"id": 847,
									"name": "lineNumbersMinChars",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2681,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3517,
										"name": "IEditorConstructionOptions.lineNumbersMinChars"
									}
								},
								{
									"id": 854,
									"name": "linkedEditing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable linked editing.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2718,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3524,
										"name": "IEditorConstructionOptions.linkedEditing"
									}
								},
								{
									"id": 887,
									"name": "links",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable detecting links and making them clickable.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2886,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3557,
										"name": "IEditorConstructionOptions.links"
									}
								},
								{
									"id": 938,
									"name": "matchBrackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable highlighting of matching brackets.\nDefaults to 'always'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3123,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "never"
											},
											{
												"type": "literal",
												"value": "near"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3608,
										"name": "IEditorConstructionOptions.matchBrackets"
									}
								},
								{
									"id": 965,
									"name": "maxTokenizationLineLength",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Lines above this length will not be tokenized for performance reasons.\nDefaults to 20000."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1156,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 825,
										"name": "IGlobalEditorOptions.maxTokenizationLineLength"
									}
								},
								{
									"id": 858,
									"name": "minimap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the minimap."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2735,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3025,
										"name": "IEditorMinimapOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3528,
										"name": "IEditorConstructionOptions.minimap"
									}
								},
								{
									"id": 828,
									"name": "model",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The initial model associated with this code editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1173,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 2002,
										"name": "ITextModel"
									}
								},
								{
									"id": 865,
									"name": "mouseStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the mouse pointer style, either 'text' or 'default' or 'copy'\nDefaults to 'text'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2769,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "text"
											},
											{
												"type": "literal",
												"value": "copy"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3535,
										"name": "IEditorConstructionOptions.mouseStyle"
									}
								},
								{
									"id": 891,
									"name": "mouseWheelScrollSensitivity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\nDefaults to 1."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2904,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3561,
										"name": "IEditorConstructionOptions.mouseWheelScrollSensitivity"
									}
								},
								{
									"id": 864,
									"name": "mouseWheelZoom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2764,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3534,
										"name": "IEditorConstructionOptions.mouseWheelZoom"
									}
								},
								{
									"id": 896,
									"name": "multiCursorMergeOverlapping",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Merge overlapping selections.\nDefaults to true"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2929,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3566,
										"name": "IEditorConstructionOptions.multiCursorMergeOverlapping"
									}
								},
								{
									"id": 895,
									"name": "multiCursorModifier",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The modifier to be used to add multiple cursors with the mouse.\nDefaults to 'alt'"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2924,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ctrlCmd"
											},
											{
												"type": "literal",
												"value": "alt"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3565,
										"name": "IEditorConstructionOptions.multiCursorModifier"
									}
								},
								{
									"id": 897,
									"name": "multiCursorPaste",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure the behaviour when pasting a text with the line count equal to the cursor count.\nDefaults to 'spread'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2934,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "spread"
											},
											{
												"type": "literal",
												"value": "full"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3567,
										"name": "IEditorConstructionOptions.multiCursorPaste"
									}
								},
								{
									"id": 927,
									"name": "occurrencesHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable semantic occurrences highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3072,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3597,
										"name": "IEditorConstructionOptions.occurrencesHighlight"
									}
								},
								{
									"id": 834,
									"name": "overflowWidgetsDomNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Place overflow widgets inside an external DOM node.\nDefaults to an internal DOM node."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4542,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3504,
										"name": "IEditorConstructionOptions.overflowWidgetsDomNode"
									}
								},
								{
									"id": 862,
									"name": "overviewRulerBorder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls if a border should be drawn around the overview ruler.\nDefaults to `true`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2754,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3532,
										"name": "IEditorConstructionOptions.overviewRulerBorder"
									}
								},
								{
									"id": 861,
									"name": "overviewRulerLanes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The number of vertical lanes the overview ruler should render.\nDefaults to 3."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2749,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3531,
										"name": "IEditorConstructionOptions.overviewRulerLanes"
									}
								},
								{
									"id": 905,
									"name": "padding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the spacing around the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2969,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3034,
										"name": "IEditorPaddingOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3575,
										"name": "IEditorConstructionOptions.padding"
									}
								},
								{
									"id": 906,
									"name": "parameterHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Parameter hint options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2973,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 3040,
										"name": "IEditorParameterHintOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3576,
										"name": "IEditorConstructionOptions.parameterHints"
									}
								},
								{
									"id": 952,
									"name": "peekWidgetDefaultFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether to focus the inline editor in the peek widget by default.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3186,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "tree"
											},
											{
												"type": "literal",
												"value": "editor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3622,
										"name": "IEditorConstructionOptions.peekWidgetDefaultFocus"
									}
								},
								{
									"id": 903,
									"name": "quickSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable quick suggestions (shadow suggestions)\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2960,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"id": 3044,
												"name": "IQuickSuggestionsOptions"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3573,
										"name": "IEditorConstructionOptions.quickSuggestions"
									}
								},
								{
									"id": 904,
									"name": "quickSuggestionsDelay",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Quick suggestions show delay (in ms)\nDefaults to 10 (ms)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2965,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3574,
										"name": "IEditorConstructionOptions.quickSuggestionsDelay"
									}
								},
								{
									"id": 853,
									"name": "readOnly",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor be read only.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2713,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3523,
										"name": "IEditorConstructionOptions.readOnly"
									}
								},
								{
									"id": 855,
									"name": "renameOnType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "deprecated, use linkedEditing instead"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2722,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3525,
										"name": "IEditorConstructionOptions.renameOnType"
									}
								},
								{
									"id": 940,
									"name": "renderControlCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of control characters.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3133,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3610,
										"name": "IEditorConstructionOptions.renderControlCharacters"
									}
								},
								{
									"id": 844,
									"name": "renderFinalNewline",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render last line number when the file ends with a newline.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2666,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3514,
										"name": "IEditorConstructionOptions.renderFinalNewline"
									}
								},
								{
									"id": 941,
									"name": "renderIndentGuides",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of indent guides.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3138,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3611,
										"name": "IEditorConstructionOptions.renderIndentGuides"
									}
								},
								{
									"id": 943,
									"name": "renderLineHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of current line highlight.\nDefaults to all."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3148,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "line"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "gutter"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3613,
										"name": "IEditorConstructionOptions.renderLineHighlight"
									}
								},
								{
									"id": 944,
									"name": "renderLineHighlightOnlyWhenFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control if the current line highlight should be rendered only the editor is focused.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3153,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3614,
										"name": "IEditorConstructionOptions.renderLineHighlightOnlyWhenFocus"
									}
								},
								{
									"id": 856,
									"name": "renderValidationDecorations",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the editor render validation decorations.\nDefaults to editable."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2727,
											"character": 35
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "editable"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3526,
										"name": "IEditorConstructionOptions.renderValidationDecorations"
									}
								},
								{
									"id": 939,
									"name": "renderWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable rendering of whitespace.\nDefaults to none."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3128,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "all"
											},
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "boundary"
											},
											{
												"type": "literal",
												"value": "selection"
											},
											{
												"type": "literal",
												"value": "trailing"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3609,
										"name": "IEditorConstructionOptions.renderWhitespace"
									}
								},
								{
									"id": 850,
									"name": "revealHorizontalRightPadding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\nThis virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\nDefaults to 30 (px)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2699,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3520,
										"name": "IEditorConstructionOptions.revealHorizontalRightPadding"
									}
								},
								{
									"id": 851,
									"name": "roundedSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render the editor selection with rounded borders.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2704,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3521,
										"name": "IEditorConstructionOptions.roundedSelection"
									}
								},
								{
									"id": 838,
									"name": "rulers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Render vertical lines at the specified columns.\nDefaults to empty array."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2632,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "reference",
													"id": 3065,
													"name": "IRulerOption"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3508,
										"name": "IEditorConstructionOptions.rulers"
									}
								},
								{
									"id": 874,
									"name": "scrollBeyondLastColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go beyond the last column by a number of columns.\nDefaults to 5."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2814,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3544,
										"name": "IEditorConstructionOptions.scrollBeyondLastColumn"
									}
								},
								{
									"id": 873,
									"name": "scrollBeyondLastLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that scrolling can go one screen size after the last line.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2809,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3543,
										"name": "IEditorConstructionOptions.scrollBeyondLastLine"
									}
								},
								{
									"id": 893,
									"name": "scrollPredominantAxis",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2914,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3563,
										"name": "IEditorConstructionOptions.scrollPredominantAxis"
									}
								},
								{
									"id": 857,
									"name": "scrollbar",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the behavior and rendering of the scrollbars."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2731,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 3068,
										"name": "IEditorScrollbarOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3527,
										"name": "IEditorConstructionOptions.scrollbar"
									}
								},
								{
									"id": 846,
									"name": "selectOnLineNumbers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the corresponding line be selected when clicking on the line number?\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2676,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3516,
										"name": "IEditorConstructionOptions.selectOnLineNumbers"
									}
								},
								{
									"id": 840,
									"name": "selectionClipboard",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable Linux primary clipboard.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2642,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3510,
										"name": "IEditorConstructionOptions.selectionClipboard"
									}
								},
								{
									"id": 926,
									"name": "selectionHighlight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable selection highlight.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3067,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3596,
										"name": "IEditorConstructionOptions.selectionHighlight"
									}
								},
								{
									"id": 963,
									"name": "semanticHighlighting.enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the semanticHighlighting is shown for the languages that support it.\ntrue: semanticHighlighting is enabled for all themes\nfalse: semanticHighlighting is disabled for all themes\n'configuredByTheme': semanticHighlighting is controlled by the current color theme's semanticHighlighting setting.\nDefaults to 'byTheme'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1138,
											"character": 55
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": "configuredByTheme"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 823,
										"name": "IGlobalEditorOptions.semanticHighlighting.enabled"
									}
								},
								{
									"id": 954,
									"name": "showDeprecated",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls strikethrough deprecated variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3195,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3624,
										"name": "IEditorConstructionOptions.showDeprecated"
									}
								},
								{
									"id": 936,
									"name": "showFoldingControls",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\nDefaults to 'mouseover'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3113,
											"character": 27
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "always"
											},
											{
												"type": "literal",
												"value": "mouseover"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3606,
										"name": "IEditorConstructionOptions.showFoldingControls"
									}
								},
								{
									"id": 951,
									"name": "showUnused",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls fading out of unused variables."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3181,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3621,
										"name": "IEditorConstructionOptions.showUnused"
									}
								},
								{
									"id": 901,
									"name": "smartSelect",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Smart select opptions;"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2951,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 3133,
										"name": "ISmartSelectOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3571,
										"name": "IEditorConstructionOptions.smartSelect"
									}
								},
								{
									"id": 875,
									"name": "smoothScrolling",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable that the editor animates scrolling to a position.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2819,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3545,
										"name": "IEditorConstructionOptions.smoothScrolling"
									}
								},
								{
									"id": 919,
									"name": "snippetSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable snippet suggestions. Default to 'true'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3036,
											"character": 26
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "top"
											},
											{
												"type": "literal",
												"value": "bottom"
											},
											{
												"type": "literal",
												"value": "inline"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3589,
										"name": "IEditorConstructionOptions.snippetSuggestions"
									}
								},
								{
									"id": 964,
									"name": "stablePeek",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Keep peek editors open even when double clicking their content or when hitting `Escape`.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1151,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 824,
										"name": "IGlobalEditorOptions.stablePeek"
									}
								},
								{
									"id": 912,
									"name": "stickyTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Emulate selection behaviour of tab characters when using spaces for indentation.\nThis means selection will stick to tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3002,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3582,
										"name": "IEditorConstructionOptions.stickyTabStops"
									}
								},
								{
									"id": 885,
									"name": "stopRenderingLineAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Performance guard: Stop rendering a line after x characters.\nDefaults to 10000.\nUse -1 to never stop rendering"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2877,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3555,
										"name": "IEditorConstructionOptions.stopRenderingLineAfter"
									}
								},
								{
									"id": 900,
									"name": "suggest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Suggest options."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2947,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 3096,
										"name": "ISuggestOptions"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3570,
										"name": "IEditorConstructionOptions.suggest"
									}
								},
								{
									"id": 923,
									"name": "suggestFontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The font size for the suggest widget.\nDefaults to the editor font size."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3053,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3593,
										"name": "IEditorConstructionOptions.suggestFontSize"
									}
								},
								{
									"id": 924,
									"name": "suggestLineHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line height for the suggest widget.\nDefaults to the editor line height."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3058,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3594,
										"name": "IEditorConstructionOptions.suggestLineHeight"
									}
								},
								{
									"id": 916,
									"name": "suggestOnTriggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable the suggestion box to pop-up on trigger characters.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3022,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3586,
										"name": "IEditorConstructionOptions.suggestOnTriggerCharacters"
									}
								},
								{
									"id": 922,
									"name": "suggestSelection",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The history mode for suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3048,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "first"
											},
											{
												"type": "literal",
												"value": "recentlyUsed"
											},
											{
												"type": "literal",
												"value": "recentlyUsedByPrefix"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3592,
										"name": "IEditorConstructionOptions.suggestSelection"
									}
								},
								{
									"id": 925,
									"name": "tabCompletion",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable tab completion."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3062,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "onlySnippets"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3595,
										"name": "IEditorConstructionOptions.tabCompletion"
									}
								},
								{
									"id": 837,
									"name": "tabIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The `tabindex` property of the editor's textarea"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2627,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3507,
										"name": "IEditorConstructionOptions.tabIndex"
									}
								},
								{
									"id": 956,
									"name": "tabSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The number of spaces a tab is equal to.\nThis setting is overridden based on the file contents when `detectIndentation` is on.\nDefaults to 4."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1108,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 816,
										"name": "IGlobalEditorOptions.tabSize"
									}
								},
								{
									"id": 831,
									"name": "theme",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Initial theme to be used for rendering.\nThe current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black'.\nYou can create custom themes via `monaco.editor.defineTheme`.\nTo switch a theme, use `monaco.editor.setTheme`"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1190,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"id": 826,
										"name": "IGlobalEditorOptions.theme"
									}
								},
								{
									"id": 959,
									"name": "trimAutoWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Remove trailing auto inserted whitespace.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1124,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 819,
										"name": "IGlobalEditorOptions.trimAutoWhitespace"
									}
								},
								{
									"id": 937,
									"name": "unfoldOnClickAfterEndOfLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether clicking on the empty content after a folded line will unfold the line.\nDefaults to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3118,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3607,
										"name": "IEditorConstructionOptions.unfoldOnClickAfterEndOfLine"
									}
								},
								{
									"id": 845,
									"name": "unusualLineTerminators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Remove unusual line terminators like LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\nDefaults to 'prompt'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2671,
											"character": 30
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "auto"
											},
											{
												"type": "literal",
												"value": "prompt"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3515,
										"name": "IEditorConstructionOptions.unusualLineTerminators"
									}
								},
								{
									"id": 945,
									"name": "useTabStops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Inserting and deleting whitespace follows tab stops."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3157,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3615,
										"name": "IEditorConstructionOptions.useTabStops"
									}
								},
								{
									"id": 829,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The initial value of the auto created model in the editor.\nTo not create automatically a model, use `model: null`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1178,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 961,
									"name": "wordBasedSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether completions should be computed based on words in the document.\nDefaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1134,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 821,
										"name": "IGlobalEditorOptions.wordBasedSuggestions"
									}
								},
								{
									"id": 962,
									"name": "wordBasedSuggestionsOnlySameLanguage",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls whether word based completions should be included from opened documents of the same language or any language."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1138,
											"character": 44
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 822,
										"name": "IGlobalEditorOptions.wordBasedSuggestionsOnlySameLanguage"
									}
								},
								{
									"id": 839,
									"name": "wordSeparators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A string containing the word separators used when doing word navigation.\nDefaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2637,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3509,
										"name": "IEditorConstructionOptions.wordSeparators"
									}
								},
								{
									"id": 877,
									"name": "wordWrap",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to \"off\"."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2834,
											"character": 16
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "wordWrapColumn"
											},
											{
												"type": "literal",
												"value": "bounded"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3547,
										"name": "IEditorConstructionOptions.wordWrap"
									}
								},
								{
									"id": 884,
									"name": "wordWrapBreakAfterCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced after these characters.\nDefaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2871,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3554,
										"name": "IEditorConstructionOptions.wordWrapBreakAfterCharacters"
									}
								},
								{
									"id": 883,
									"name": "wordWrapBreakBeforeCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Configure word wrapping characters. A break will be introduced before these characters.\nDefaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2866,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3553,
										"name": "IEditorConstructionOptions.wordWrapBreakBeforeCharacters"
									}
								},
								{
									"id": 880,
									"name": "wordWrapColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to 80."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2851,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3550,
										"name": "IEditorConstructionOptions.wordWrapColumn"
									}
								},
								{
									"id": 878,
									"name": "wordWrapOverride1",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrap` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2838,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3548,
										"name": "IEditorConstructionOptions.wordWrapOverride1"
									}
								},
								{
									"id": 879,
									"name": "wordWrapOverride2",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Override the `wordWrapOverride1` setting."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2842,
											"character": 25
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "on"
											},
											{
												"type": "literal",
												"value": "off"
											},
											{
												"type": "literal",
												"value": "inherit"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3549,
										"name": "IEditorConstructionOptions.wordWrapOverride2"
									}
								},
								{
									"id": 881,
									"name": "wrappingIndent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\nDefaults to 'same' in vscode and to 'none' in monaco-editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2856,
											"character": 22
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "none"
											},
											{
												"type": "literal",
												"value": "same"
											},
											{
												"type": "literal",
												"value": "indent"
											},
											{
												"type": "literal",
												"value": "deepIndent"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3551,
										"name": "IEditorConstructionOptions.wrappingIndent"
									}
								},
								{
									"id": 882,
									"name": "wrappingStrategy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Controls the wrapping strategy to use.\nDefaults to 'simple'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2861,
											"character": 24
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "simple"
											},
											{
												"type": "literal",
												"value": "advanced"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3552,
										"name": "IEditorConstructionOptions.wrappingStrategy"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										918,
										917,
										832,
										899,
										898,
										836,
										907,
										909,
										908,
										911,
										910,
										876,
										932,
										928,
										929,
										930,
										888,
										894,
										889,
										890,
										921,
										863,
										866,
										867,
										842,
										843,
										868,
										953,
										958,
										833,
										870,
										871,
										915,
										920,
										852,
										892,
										859,
										860,
										933,
										935,
										934,
										946,
										869,
										948,
										947,
										914,
										913,
										848,
										902,
										872,
										942,
										886,
										835,
										955,
										957,
										830,
										960,
										950,
										931,
										849,
										949,
										841,
										847,
										854,
										887,
										938,
										965,
										858,
										828,
										865,
										891,
										864,
										896,
										895,
										897,
										927,
										834,
										862,
										861,
										905,
										906,
										952,
										903,
										904,
										853,
										855,
										940,
										844,
										941,
										943,
										944,
										856,
										939,
										850,
										851,
										838,
										874,
										873,
										893,
										857,
										846,
										840,
										926,
										963,
										954,
										936,
										951,
										901,
										875,
										919,
										964,
										912,
										885,
										900,
										923,
										924,
										916,
										922,
										925,
										837,
										956,
										831,
										959,
										937,
										845,
										945,
										829,
										961,
										962,
										839,
										877,
										884,
										883,
										880,
										878,
										879,
										881,
										882
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1169,
									"character": 57
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 3502,
									"name": "IEditorConstructionOptions"
								},
								{
									"type": "reference",
									"id": 815,
									"name": "IGlobalEditorOptions"
								}
							]
						},
						{
							"id": 773,
							"name": "IStandaloneThemeData",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 774,
									"name": "base",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 992,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 772,
										"name": "BuiltinTheme"
									}
								},
								{
									"id": 778,
									"name": "colors",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 996,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"id": 779,
										"name": "IColors"
									}
								},
								{
									"id": 777,
									"name": "encodedTokensColors",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 995,
											"character": 27
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 775,
									"name": "inherit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 993,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 776,
									"name": "rules",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 994,
											"character": 13
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 783,
											"name": "ITokenThemeRule"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										774,
										778,
										777,
										775,
										776
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 991,
									"character": 41
								}
							]
						},
						{
							"id": 3096,
							"name": "ISuggestOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for editor suggest widget"
							},
							"children": [
								{
									"id": 3098,
									"name": "filterGraceful",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable graceful matching. Defaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3782,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3097,
									"name": "insertMode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Overwrite word ends on accept. Default to false."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3778,
											"character": 18
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "insert"
											},
											{
												"type": "literal",
												"value": "replace"
											}
										]
									}
								},
								{
									"id": 3100,
									"name": "localityBonus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Favours words that appear close to the cursor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3790,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3101,
									"name": "shareSuggestSelections",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable using global storage for remembering suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3794,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3110,
									"name": "showClasses",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show class-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3830,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3124,
									"name": "showColors",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show color-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3886,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3119,
									"name": "showConstants",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show constant-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3866,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3107,
									"name": "showConstructors",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show constructor-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3818,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3121,
									"name": "showEnumMembers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show enumMember-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3874,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3120,
									"name": "showEnums",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show enum-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3870,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3115,
									"name": "showEvents",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show event-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3850,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3108,
									"name": "showFields",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show field-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3822,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3125,
									"name": "showFiles",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show file-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3890,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3127,
									"name": "showFolders",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show folder-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3898,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3106,
									"name": "showFunctions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show function-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3814,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3102,
									"name": "showIcons",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable or disable icons in suggestions. Defaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3798,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3104,
									"name": "showInlineDetails",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show details inline with the label. Defaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3806,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3112,
									"name": "showInterfaces",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show interface-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3838,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3129,
									"name": "showIssues",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show issue-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3906,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3122,
									"name": "showKeywords",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show keyword-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3878,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3105,
									"name": "showMethods",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show method-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3810,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3113,
									"name": "showModules",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show module-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3842,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3116,
									"name": "showOperators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show operator-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3854,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3114,
									"name": "showProperties",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show property-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3846,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3126,
									"name": "showReferences",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show reference-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3894,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3131,
									"name": "showSnippets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show snippet-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3914,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3103,
									"name": "showStatusBar",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Enable or disable the suggest status bar."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3802,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3111,
									"name": "showStructs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show struct-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3834,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3128,
									"name": "showTypeParameters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show typeParameter-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3902,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3117,
									"name": "showUnits",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show unit-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3858,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3130,
									"name": "showUsers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show user-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3910,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3118,
									"name": "showValues",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show value-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3862,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3109,
									"name": "showVariables",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show variable-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3826,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3123,
									"name": "showWords",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show text-suggestions."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3882,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3099,
									"name": "snippetsPreventQuickSuggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Prevent quick suggestions when a snippet is active. Defaults to true."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3786,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3098,
										3097,
										3100,
										3101,
										3110,
										3124,
										3119,
										3107,
										3121,
										3120,
										3115,
										3108,
										3125,
										3127,
										3106,
										3102,
										3104,
										3112,
										3129,
										3122,
										3105,
										3113,
										3116,
										3114,
										3126,
										3131,
										3103,
										3111,
										3128,
										3117,
										3130,
										3118,
										3109,
										3123,
										3099
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3774,
									"character": 36
								}
							]
						},
						{
							"id": 2002,
							"name": "ITextModel",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A model."
							},
							"children": [
								{
									"id": 2188,
									"name": "onDidChangeContent",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 2189,
											"name": "onDidChangeContent",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the contents of the model have changed."
											},
											"parameters": [
												{
													"id": 2190,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2191,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2192,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2193,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2485,
																				"name": "IModelContentChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 2194,
									"name": "onDidChangeDecorations",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 2195,
											"name": "onDidChangeDecorations",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when decorations of the model have changed."
											},
											"parameters": [
												{
													"id": 2196,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2197,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2198,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2199,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2492,
																				"name": "IModelDecorationsChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 2206,
									"name": "onDidChangeLanguage",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 2207,
											"name": "onDidChangeLanguage",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the language associated with the model has changed."
											},
											"parameters": [
												{
													"id": 2208,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2209,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2210,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2211,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2476,
																				"name": "IModelLanguageChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 2212,
									"name": "onDidChangeLanguageConfiguration",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 2213,
											"name": "onDidChangeLanguageConfiguration",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the language configuration associated with the model has changed."
											},
											"parameters": [
												{
													"id": 2214,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2215,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2216,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2217,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2479,
																				"name": "IModelLanguageConfigurationChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 2200,
									"name": "onDidChangeOptions",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 2201,
											"name": "onDidChangeOptions",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted when the model options have changed."
											},
											"parameters": [
												{
													"id": 2202,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2203,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2204,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2205,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 2495,
																				"name": "IModelOptionsChangedEvent"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 2218,
									"name": "onWillDispose",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"signatures": [
										{
											"id": 2219,
											"name": "onWillDispose",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {
												"shortText": "An event emitted right before disposing the model."
											},
											"parameters": [
												{
													"id": 2220,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2221,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2222,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								},
								{
									"id": 2004,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "A unique identifier associated with this model."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1638,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2003,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Gets the resource associated with this editor model."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1634,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 2176,
									"name": "applyEdits",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2177,
											"name": "applyEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Edit the model without adding the edits to the undo stack.\nThis can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.",
												"returns": "If desired, the inverse edit operations, that, when applied, will bring the model back to the previous state.\n"
											},
											"parameters": [
												{
													"id": 2178,
													"name": "operations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The edit operations."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1967,
															"name": "IIdentifiedSingleEditOperation"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										},
										{
											"id": 2179,
											"name": "applyEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2180,
													"name": "operations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1967,
															"name": "IIdentifiedSingleEditOperation"
														}
													}
												},
												{
													"id": 2181,
													"name": "computeUndoEdits",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "literal",
														"value": false
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										},
										{
											"id": 2182,
											"name": "applyEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2183,
													"name": "operations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1967,
															"name": "IIdentifiedSingleEditOperation"
														}
													}
												},
												{
													"id": 2184,
													"name": "computeUndoEdits",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "literal",
														"value": true
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1971,
													"name": "IValidEditOperation"
												}
											}
										}
									]
								},
								{
									"id": 2119,
									"name": "deltaDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2120,
											"name": "deltaDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Perform a minimum amount of operations, in order to transform the decorations\nidentified by `oldDecorations` to the decorations described by `newDecorations`\nand returns the new identifiers associated with the resulting decorations.",
												"returns": "An array containing the new decorations identifiers.\n"
											},
											"parameters": [
												{
													"id": 2121,
													"name": "oldDecorations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Array containing previous decorations identifiers."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 2122,
													"name": "newDecorations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Array describing what decorations should result after the call."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1941,
															"name": "IModelDeltaDecoration"
														}
													}
												},
												{
													"id": 2123,
													"name": "ownerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									]
								},
								{
									"id": 2160,
									"name": "detectIndentation",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2161,
											"name": "detectIndentation",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Detect the indentation options for this model from its content."
											},
											"parameters": [
												{
													"id": 2162,
													"name": "defaultInsertSpaces",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2163,
													"name": "defaultTabSize",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2223,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2224,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Destroy this model. This will unbind the model from the mode\nand make all necessary clean-up to release this object to the GC."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2078,
									"name": "findMatches",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2079,
											"name": "findMatches",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Search the model.",
												"returns": "The ranges where the matches are. It is empty if not matches have been found.\n"
											},
											"parameters": [
												{
													"id": 2080,
													"name": "searchString",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The string used to search. If it is a regular expression, set `isRegex` to true."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2081,
													"name": "searchOnlyEditableRange",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Limit the searching to only search inside the editable range of the model."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2082,
													"name": "isRegex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Used to indicate that `searchString` is a regular expression."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2083,
													"name": "matchCase",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Force the matching to match lower/upper case exactly."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2084,
													"name": "wordSeparators",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Force the matching to match entire words only. Pass null otherwise."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2085,
													"name": "captureMatches",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The result will contain the captured groups."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2086,
													"name": "limitResultCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Limit the number of results"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1991,
													"name": "FindMatch"
												}
											}
										},
										{
											"id": 2087,
											"name": "findMatches",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Search the model.",
												"returns": "The ranges where the matches are. It is empty if no matches have been found.\n"
											},
											"parameters": [
												{
													"id": 2088,
													"name": "searchString",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The string used to search. If it is a regular expression, set `isRegex` to true."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2089,
													"name": "searchScope",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Limit the searching to only search inside these ranges."
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 361,
																"name": "IRange"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 361,
																	"name": "IRange"
																}
															}
														]
													}
												},
												{
													"id": 2090,
													"name": "isRegex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Used to indicate that `searchString` is a regular expression."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2091,
													"name": "matchCase",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Force the matching to match lower/upper case exactly."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2092,
													"name": "wordSeparators",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Force the matching to match entire words only. Pass null otherwise."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2093,
													"name": "captureMatches",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The result will contain the captured groups."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2094,
													"name": "limitResultCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Limit the number of results"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1991,
													"name": "FindMatch"
												}
											}
										}
									]
								},
								{
									"id": 2095,
									"name": "findNextMatch",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2096,
											"name": "findNextMatch",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Search the model for the next match. Loops to the beginning of the model if needed.",
												"returns": "The range where the next match is. It is null if no next match has been found.\n"
											},
											"parameters": [
												{
													"id": 2097,
													"name": "searchString",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The string used to search. If it is a regular expression, set `isRegex` to true."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2098,
													"name": "searchStart",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Start the searching at the specified position."
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 2099,
													"name": "isRegex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Used to indicate that `searchString` is a regular expression."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2100,
													"name": "matchCase",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Force the matching to match lower/upper case exactly."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2101,
													"name": "wordSeparators",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Force the matching to match entire words only. Pass null otherwise."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2102,
													"name": "captureMatches",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The result will contain the captured groups."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1991,
												"name": "FindMatch"
											}
										}
									]
								},
								{
									"id": 2103,
									"name": "findPreviousMatch",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2104,
											"name": "findPreviousMatch",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Search the model for the previous match. Loops to the end of the model if needed.",
												"returns": "The range where the previous match is. It is null if no previous match has been found.\n"
											},
											"parameters": [
												{
													"id": 2105,
													"name": "searchString",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The string used to search. If it is a regular expression, set `isRegex` to true."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2106,
													"name": "searchStart",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Start the searching at the specified position."
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 2107,
													"name": "isRegex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Used to indicate that `searchString` is a regular expression."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2108,
													"name": "matchCase",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Force the matching to match lower/upper case exactly."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2109,
													"name": "wordSeparators",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Force the matching to match entire words only. Pass null otherwise."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2110,
													"name": "captureMatches",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The result will contain the captured groups."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1991,
												"name": "FindMatch"
											}
										}
									]
								},
								{
									"id": 2146,
									"name": "getAllDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2147,
											"name": "getAllDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets all the decorations as an array."
											},
											"parameters": [
												{
													"id": 2148,
													"name": "ownerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations belonging to other owners."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2149,
													"name": "filterOutValidation",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1944,
													"name": "IModelDecoration"
												}
											}
										}
									]
								},
								{
									"id": 2009,
									"name": "getAlternativeVersionId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2010,
											"name": "getAlternativeVersionId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the alternative version id of the model.\nThis alternative version id is not always incremented,\nit will return the same values in the case of undo-redo."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2029,
									"name": "getCharacterCountInRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2030,
											"name": "getCharacterCountInRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the character count of text in a certain range."
											},
											"parameters": [
												{
													"id": 2031,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The range describing what text length to get.\n"
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2124,
									"name": "getDecorationOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2125,
											"name": "getDecorationOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the options associated with a decoration.",
												"returns": "The decoration options or null if the decoration was not found.\n"
											},
											"parameters": [
												{
													"id": 2126,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The decoration id."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1924,
												"name": "IModelDecorationOptions"
											}
										}
									]
								},
								{
									"id": 2127,
									"name": "getDecorationRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2128,
											"name": "getDecorationRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the range associated with a decoration.",
												"returns": "The decoration range or null if the decoration was not found.\n"
											},
											"parameters": [
												{
													"id": 2129,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The decoration id."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 366,
												"name": "Range"
											}
										}
									]
								},
								{
									"id": 2141,
									"name": "getDecorationsInRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2142,
											"name": "getDecorationsInRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets all the decorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\nSo for now it returns all the decorations on the same line as `range`.",
												"returns": "An array with the decorations\n"
											},
											"parameters": [
												{
													"id": 2143,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The range to search in"
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2144,
													"name": "ownerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations belonging to other owners."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2145,
													"name": "filterOutValidation",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations specific to validation (i.e. warnings, errors)."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1944,
													"name": "IModelDecoration"
												}
											}
										}
									]
								},
								{
									"id": 2042,
									"name": "getEOL",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2043,
											"name": "getEOL",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the end of line sequence predominantly used in the text buffer.",
												"returns": "EOL char sequence (e.g.: '\\n' or '\\r\\n').\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2044,
									"name": "getEndOfLineSequence",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2045,
											"name": "getEndOfLineSequence",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the end of line sequence predominantly used in the text buffer."
											},
											"type": {
												"type": "reference",
												"id": 1960,
												"name": "EndOfLineSequence"
											}
										}
									]
								},
								{
									"id": 2074,
									"name": "getFullModelRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2075,
											"name": "getFullModelRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a range covering the entire model"
											},
											"type": {
												"type": "reference",
												"id": 366,
												"name": "Range"
											}
										}
									]
								},
								{
									"id": 2034,
									"name": "getLineContent",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2035,
											"name": "getLineContent",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the text for a certain line."
											},
											"parameters": [
												{
													"id": 2036,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2032,
									"name": "getLineCount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2033,
											"name": "getLineCount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the number of lines in the model."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2130,
									"name": "getLineDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2131,
											"name": "getLineDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets all the decorations for the line `lineNumber` as an array.",
												"returns": "An array with the decorations\n"
											},
											"parameters": [
												{
													"id": 2132,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The line number"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2133,
													"name": "ownerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations belonging to other owners."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2134,
													"name": "filterOutValidation",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations specific to validation (i.e. warnings, errors)."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1944,
													"name": "IModelDecoration"
												}
											}
										}
									]
								},
								{
									"id": 2052,
									"name": "getLineFirstNonWhitespaceColumn",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2053,
											"name": "getLineFirstNonWhitespaceColumn",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the column before the first non whitespace character for line at `lineNumber`.\nReturns 0 if line is empty or contains only whitespace."
											},
											"parameters": [
												{
													"id": 2054,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2055,
									"name": "getLineLastNonWhitespaceColumn",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2056,
											"name": "getLineLastNonWhitespaceColumn",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns the column after the last non whitespace character for line at `lineNumber`.\nReturns 0 if line is empty or contains only whitespace."
											},
											"parameters": [
												{
													"id": 2057,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2037,
									"name": "getLineLength",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2038,
											"name": "getLineLength",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the text length for a certain line."
											},
											"parameters": [
												{
													"id": 2039,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2049,
									"name": "getLineMaxColumn",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2050,
											"name": "getLineMaxColumn",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the maximum legal column for line at `lineNumber`"
											},
											"parameters": [
												{
													"id": 2051,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2046,
									"name": "getLineMinColumn",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2047,
											"name": "getLineMinColumn",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the minimum legal column for line at `lineNumber`"
											},
											"parameters": [
												{
													"id": 2048,
													"name": "lineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2040,
									"name": "getLinesContent",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2041,
											"name": "getLinesContent",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the text for all lines."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									]
								},
								{
									"id": 2135,
									"name": "getLinesDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2136,
											"name": "getLinesDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.",
												"returns": "An array with the decorations\n"
											},
											"parameters": [
												{
													"id": 2137,
													"name": "startLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The start line number"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2138,
													"name": "endLineNumber",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The end line number"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2139,
													"name": "ownerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations belonging to other owners."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2140,
													"name": "filterOutValidation",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations specific to validation (i.e. warnings, errors)."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1944,
													"name": "IModelDecoration"
												}
											}
										}
									]
								},
								{
									"id": 2111,
									"name": "getModeId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2112,
											"name": "getModeId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the language associated with this model."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2068,
									"name": "getOffsetAt",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2069,
											"name": "getOffsetAt",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Converts the position to a zero-based offset.",
												"text": "The position will be [adjusted](#TextDocument.validatePosition).\n",
												"returns": "A valid zero-based offset.\n"
											},
											"parameters": [
												{
													"id": 2070,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A position."
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2005,
									"name": "getOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2006,
											"name": "getOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the resolved options for this model."
											},
											"type": {
												"type": "reference",
												"id": 1977,
												"name": "TextModelResolvedOptions"
											}
										}
									]
								},
								{
									"id": 2150,
									"name": "getOverviewRulerDecorations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2151,
											"name": "getOverviewRulerDecorations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets all the decorations that should be rendered in the overview ruler as an array."
											},
											"parameters": [
												{
													"id": 2152,
													"name": "ownerId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations belonging to other owners."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2153,
													"name": "filterOutValidation",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1944,
													"name": "IModelDecoration"
												}
											}
										}
									]
								},
								{
									"id": 2071,
									"name": "getPositionAt",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2072,
											"name": "getPositionAt",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Converts a zero-based offset to a position.",
												"returns": "A valid [position](#Position).\n"
											},
											"parameters": [
												{
													"id": 2073,
													"name": "offset",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A zero-based offset."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 311,
												"name": "Position"
											}
										}
									]
								},
								{
									"id": 2014,
									"name": "getValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2015,
											"name": "getValue",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the text stored in this model.",
												"returns": "The text.\n"
											},
											"parameters": [
												{
													"id": 2016,
													"name": "eol",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`."
													},
													"type": {
														"type": "reference",
														"id": 1953,
														"name": "EndOfLinePreference"
													}
												},
												{
													"id": 2017,
													"name": "preserveBOM",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2022,
									"name": "getValueInRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2023,
											"name": "getValueInRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the text in a certain range.",
												"returns": "The text.\n"
											},
											"parameters": [
												{
													"id": 2024,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The range describing what text to get."
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												},
												{
													"id": 2025,
													"name": "eol",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`."
													},
													"type": {
														"type": "reference",
														"id": 1953,
														"name": "EndOfLinePreference"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2018,
									"name": "getValueLength",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2019,
											"name": "getValueLength",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the length of the text stored in this model."
											},
											"parameters": [
												{
													"id": 2020,
													"name": "eol",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 1953,
														"name": "EndOfLinePreference"
													}
												},
												{
													"id": 2021,
													"name": "preserveBOM",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2026,
									"name": "getValueLengthInRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2027,
											"name": "getValueLengthInRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the length of text in a certain range.",
												"returns": "The text length.\n"
											},
											"parameters": [
												{
													"id": 2028,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The range describing what text length to get."
													},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2007,
									"name": "getVersionId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2008,
											"name": "getVersionId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the current version id of the model.\nAnytime a change happens to the model (even undo/redo),\nthe version id is incremented."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 2113,
									"name": "getWordAtPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2114,
											"name": "getWordAtPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the word under or besides `position`.",
												"returns": "The word under or besides `position`. Might be null.\n"
											},
											"parameters": [
												{
													"id": 2115,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The position to look for a word."
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1949,
												"name": "IWordAtPosition"
											}
										}
									]
								},
								{
									"id": 2116,
									"name": "getWordUntilPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2117,
											"name": "getWordUntilPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get the word under or besides `position` trimmed to `position`.column",
												"returns": "The word under or besides `position`. Will never be null.\n"
											},
											"parameters": [
												{
													"id": 2118,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The position to look for a word."
													},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1949,
												"name": "IWordAtPosition"
											}
										}
									]
								},
								{
									"id": 2076,
									"name": "isDisposed",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2077,
											"name": "isDisposed",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Returns if the model was disposed or not."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 2061,
									"name": "modifyPosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2062,
											"name": "modifyPosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Advances the given position by the given offset (negative offsets are also accepted)\nand returns it as a new valid position.",
												"text": "If the offset and position are such that their combination goes beyond the beginning or\nend of the model, throws an exception.\n\nIf the offset is such that the new position would be in the middle of a multi-byte\nline terminator, throws an exception.\n"
											},
											"parameters": [
												{
													"id": 2063,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												},
												{
													"id": 2064,
													"name": "offset",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 311,
												"name": "Position"
											}
										}
									]
								},
								{
									"id": 2154,
									"name": "normalizeIndentation",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2155,
											"name": "normalizeIndentation",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Normalize a string containing whitespace according to indentation rules (converts to spaces or to tabs)."
											},
											"parameters": [
												{
													"id": 2156,
													"name": "str",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2166,
									"name": "popStackElement",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2167,
											"name": "popStackElement",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Open the current undo-redo element.\nThis offers a way to remove the current undo/redo stop point."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2173,
									"name": "pushEOL",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2174,
											"name": "pushEOL",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the end of line sequence. This is the preferred way of\nchanging the eol sequence. This will land on the undo stack."
											},
											"parameters": [
												{
													"id": 2175,
													"name": "eol",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1960,
														"name": "EndOfLineSequence"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2168,
									"name": "pushEditOperations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2169,
											"name": "pushEditOperations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Push edit operations, basically editing the model. This is the preferred way\nof editing the model. The edit operations will land on the undo stack.",
												"returns": "The cursor state returned by the `cursorStateComputer`.\n"
											},
											"parameters": [
												{
													"id": 2170,
													"name": "beforeCursorState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The cursor state before the edit operations. This cursor state will be returned when `undo` or `redo` are invoked."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 485,
															"name": "Selection"
														}
													}
												},
												{
													"id": 2171,
													"name": "editOperations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The edit operations."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1967,
															"name": "IIdentifiedSingleEditOperation"
														}
													}
												},
												{
													"id": 2172,
													"name": "cursorStateComputer",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A callback that can compute the resulting cursors state after the edit operations have been executed."
													},
													"type": {
														"type": "reference",
														"id": 1974,
														"name": "ICursorStateComputer"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 485,
													"name": "Selection"
												}
											}
										}
									]
								},
								{
									"id": 2164,
									"name": "pushStackElement",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2165,
											"name": "pushStackElement",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Close the current undo-redo element.\nThis offers a way to create an undo/redo stop point."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2185,
									"name": "setEOL",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2186,
											"name": "setEOL",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the end of line sequence without recording in the undo stack.\nThis can have dire consequences on the undo stack! See @pushEOL for the preferred way."
											},
											"parameters": [
												{
													"id": 2187,
													"name": "eol",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1960,
														"name": "EndOfLineSequence"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2011,
									"name": "setValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2012,
											"name": "setValue",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Replace the entire text buffer value contained in this model."
											},
											"parameters": [
												{
													"id": 2013,
													"name": "newValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2157,
									"name": "updateOptions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2158,
											"name": "updateOptions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change the options of this model."
											},
											"parameters": [
												{
													"id": 2159,
													"name": "newOpts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1986,
														"name": "ITextModelUpdateOptions"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 2058,
									"name": "validatePosition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2059,
											"name": "validatePosition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Create a valid position,"
											},
											"parameters": [
												{
													"id": 2060,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 308,
														"name": "IPosition"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 311,
												"name": "Position"
											}
										}
									]
								},
								{
									"id": 2065,
									"name": "validateRange",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 2066,
											"name": "validateRange",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Create a valid range."
											},
											"parameters": [
												{
													"id": 2067,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 361,
														"name": "IRange"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 366,
												"name": "Range"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Events",
									"kind": 8388608,
									"children": [
										2188,
										2194,
										2206,
										2212,
										2200,
										2218
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2004,
										2003
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2176,
										2119,
										2160,
										2223,
										2078,
										2095,
										2103,
										2146,
										2009,
										2029,
										2124,
										2127,
										2141,
										2042,
										2044,
										2074,
										2034,
										2032,
										2130,
										2052,
										2055,
										2037,
										2049,
										2046,
										2040,
										2135,
										2111,
										2068,
										2005,
										2150,
										2071,
										2014,
										2022,
										2018,
										2026,
										2007,
										2113,
										2116,
										2076,
										2061,
										2154,
										2166,
										2173,
										2168,
										2164,
										2185,
										2011,
										2157,
										2058,
										2065
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1630,
									"character": 31
								}
							]
						},
						{
							"id": 1986,
							"name": "ITextModelUpdateOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1988,
									"name": "indentSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1605,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1989,
									"name": "insertSpaces",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1606,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1987,
									"name": "tabSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1604,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1990,
									"name": "trimAutoWhitespace",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1607,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1988,
										1989,
										1987,
										1990
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1603,
									"character": 44
								}
							]
						},
						{
							"id": 783,
							"name": "ITokenThemeRule",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 786,
									"name": "background",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1006,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 787,
									"name": "fontStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1007,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 785,
									"name": "foreground",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1005,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 784,
									"name": "token",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1004,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										786,
										787,
										785,
										784
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1003,
									"character": 36
								}
							]
						},
						{
							"id": 1971,
							"name": "IValidEditOperation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1972,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The range to replace. This can be empty to emulate a simple insert."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1577,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								},
								{
									"id": 1973,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The text to replace with. This can be empty to emulate a simple delete."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1581,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1972,
										1973
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1573,
									"character": 40
								}
							]
						},
						{
							"id": 2305,
							"name": "IViewState",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A (serializable) state of the view."
							},
							"children": [
								{
									"id": 2309,
									"name": "firstPosition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2148,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"id": 308,
										"name": "IPosition"
									}
								},
								{
									"id": 2310,
									"name": "firstPositionDeltaTop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2149,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2308,
									"name": "scrollLeft",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2147,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2306,
									"name": "scrollTop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "written by previous versions"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2144,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2307,
									"name": "scrollTopWithoutViewZones",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "written by previous versions"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2146,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2309,
										2310,
										2308,
										2306,
										2307
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2142,
									"character": 31
								}
							]
						},
						{
							"id": 3409,
							"name": "IViewZone",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A view zone is a full horizontal rectangle that 'pushes' text down.\nThe editor reserves space for view zones when rendering."
							},
							"children": [
								{
									"id": 3411,
									"name": "afterColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The column after which this zone should appear.\nIf not set, the maxLineColumn of `afterLineNumber` will be used."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4235,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3410,
									"name": "afterLineNumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The line number after which this zone should appear.\nUse 0 to place a view zone before the first line number."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4230,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3416,
									"name": "domNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The dom node of the view zone"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4262,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								},
								{
									"id": 3413,
									"name": "heightInLines",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height in lines of the view zone.\nIf specified, `heightInPx` will be used instead of this.\nIf neither `heightInPx` nor `heightInLines` is specified, a default of `heightInLines` = 1 will be chosen."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4247,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3414,
									"name": "heightInPx",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height in px of the view zone.\nIf this is set, the editor will give preference to it rather than `heightInLines` above.\nIf neither `heightInPx` nor `heightInLines` is specified, a default of `heightInLines` = 1 will be chosen."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4253,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3417,
									"name": "marginDomNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An optional dom node for the view zone that will be placed in the margin area."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4266,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								},
								{
									"id": 3415,
									"name": "minWidthInPx",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The minimum width in px of the view zone.\nIf this is set, the editor will ensure that the scroll width is >= than this value."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4258,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3422,
									"name": "onComputedHeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Callback which gives the height in pixels of the view zone."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4274,
											"character": 24
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3423,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3424,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3425,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 3418,
									"name": "onDomNodeTop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Callback which gives the relative top of the view zone as it appears (taking scrolling into account)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4270,
											"character": 20
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3419,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3420,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3421,
															"name": "top",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 3412,
									"name": "suppressMouseDown",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Suppress mouse down events.\nIf set, the editor will attach a mouse down listener to the view zone and .preventDefault on it.\nDefaults to false"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4241,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3411,
										3410,
										3416,
										3413,
										3414,
										3417,
										3415,
										3422,
										3418,
										3412
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4225,
									"character": 30
								}
							]
						},
						{
							"id": 3426,
							"name": "IViewZoneChangeAccessor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "An accessor that allows for zones to be added or removed."
							},
							"children": [
								{
									"id": 3427,
									"name": "addZone",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3428,
											"name": "addZone",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Create a new view zone.",
												"returns": "A unique identifier to the view zone.\n"
											},
											"parameters": [
												{
													"id": 3429,
													"name": "zone",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Zone to create"
													},
													"type": {
														"type": "reference",
														"id": 3409,
														"name": "IViewZone"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 3433,
									"name": "layoutZone",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3434,
											"name": "layoutZone",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Change a zone's position.\nThe editor will rescan the `afterLineNumber` and `afterColumn` properties of a view zone."
											},
											"parameters": [
												{
													"id": 3435,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3430,
									"name": "removeZone",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 3431,
											"name": "removeZone",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Remove a zone"
											},
											"parameters": [
												{
													"id": 3432,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A unique identifier to the view zone, as returned by the `addZone` call.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										3427,
										3433,
										3430
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4280,
									"character": 44
								}
							]
						},
						{
							"id": 797,
							"name": "IWebWorkerOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 799,
									"name": "createData",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The data to send over when calling create on the module."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1038,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 801,
									"name": "host",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An object that can be used by the web worker to make calls back to the main thread."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1046,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 802,
									"name": "keepIdleModels",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Keep idle models.\nDefaults to false, which means that idle models will stop syncing after a while."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1051,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 800,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A label to be used to identify the web worker for debugging purposes."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1042,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 798,
									"name": "moduleId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The AMD moduleId to load.\nIt should export a function `create` that should return the exported proxy."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1034,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										799,
										801,
										802,
										800,
										798
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1029,
									"character": 38
								}
							]
						},
						{
							"id": 1949,
							"name": "IWordAtPosition",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Word inside a model."
							},
							"children": [
								{
									"id": 1952,
									"name": "endColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The column where the word ends."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1485,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1951,
									"name": "startColumn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The column where the word starts."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1481,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1950,
									"name": "word",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The word."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1477,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1952,
										1951,
										1950
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1473,
									"character": 36
								}
							]
						},
						{
							"id": 3037,
							"name": "InternalEditorPaddingOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 3039,
									"name": "bottom",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3632,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3038,
									"name": "top",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3631,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3039,
										3038
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3630,
									"character": 49
								}
							]
						},
						{
							"id": 3059,
							"name": "InternalEditorRenderLineNumbersOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 3061,
									"name": "renderFn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3676,
											"character": 25
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3062,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3063,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3064,
															"name": "lineNumber",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3060,
									"name": "renderType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3675,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 3053,
										"name": "RenderLineNumbersType"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3061,
										3060
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3674,
									"character": 59
								}
							]
						},
						{
							"id": 3082,
							"name": "InternalEditorScrollbarOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 3090,
									"name": "alwaysConsumeMouseWheel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3763,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3083,
									"name": "arrowSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3756,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3089,
									"name": "handleMouseWheel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3762,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3085,
									"name": "horizontal",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3758,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"id": 1899,
										"name": "ScrollbarVisibility"
									}
								},
								{
									"id": 3088,
									"name": "horizontalHasArrows",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3761,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3091,
									"name": "horizontalScrollbarSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3764,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3092,
									"name": "horizontalSliderSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3765,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3095,
									"name": "scrollByPage",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3768,
											"character": 29
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3086,
									"name": "useShadows",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3759,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3084,
									"name": "vertical",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3757,
											"character": 25
										}
									],
									"type": {
										"type": "reference",
										"id": 1899,
										"name": "ScrollbarVisibility"
									}
								},
								{
									"id": 3087,
									"name": "verticalHasArrows",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3760,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3093,
									"name": "verticalScrollbarSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3766,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3094,
									"name": "verticalSliderSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3767,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3090,
										3083,
										3089,
										3085,
										3088,
										3091,
										3092,
										3095,
										3086,
										3084,
										3087,
										3093,
										3094
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3755,
									"character": 51
								}
							]
						},
						{
							"id": 788,
							"name": "MonacoWebWorker",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A web worker that can provide a proxy to an arbitrary file."
							},
							"children": [
								{
									"id": 789,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 790,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Terminate the web worker, thus invalidating the returned proxy."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 791,
									"name": "getProxy",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 792,
											"name": "getProxy",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a proxy to the arbitrary loaded code."
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 793,
									"name": "withSyncedResources",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 794,
											"name": "withSyncedResources",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Synchronize (send) the models at `resources` to the web worker,\nmaking them available in the monaco.worker.getMirrorModels()."
											},
											"parameters": [
												{
													"id": 795,
													"name": "resources",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 68,
															"name": "Uri"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										789,
										791,
										793
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1013,
									"character": 36
								}
							],
							"typeParameter": [
								{
									"id": 796,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							]
						},
						{
							"id": 2977,
							"name": "OverviewRulerPosition",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A description for the overview ruler position."
							},
							"children": [
								{
									"id": 2979,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Height of the overview ruler"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3435,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2981,
									"name": "right",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Right position for the overview ruler"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3443,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2980,
									"name": "top",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Top position for the overview ruler"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3439,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2978,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "Width of the overview ruler"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 3431,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2979,
										2981,
										2980,
										2978
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3427,
									"character": 42
								}
							]
						},
						{
							"id": 1903,
							"name": "ThemeColor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 1904,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 1306,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1904
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 1305,
									"character": 31
								}
							]
						},
						{
							"id": 772,
							"name": "BuiltinTheme",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 989,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "vs"
									},
									{
										"type": "literal",
										"value": "vs-dark"
									},
									{
										"type": "literal",
										"value": "hc-black"
									}
								]
							}
						},
						{
							"id": 3405,
							"name": "ComputedEditorOptionValue",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4217,
									"character": 34
								}
							],
							"typeParameter": [
								{
									"id": 3406,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2927,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "IEditorOption"
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"name": "T"
								},
								"extendsType": {
									"type": "reference",
									"id": 2927,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										},
										{
											"type": "inferred",
											"name": "R"
										}
									],
									"name": "IEditorOption"
								},
								"trueType": {
									"type": "reference",
									"name": "R"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						},
						{
							"id": 2527,
							"name": "EditorAutoClosingOvertypeStrategy",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for typing over closing quotes or brackets"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2599,
									"character": 49
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "always"
									},
									{
										"type": "literal",
										"value": "auto"
									},
									{
										"type": "literal",
										"value": "never"
									}
								]
							}
						},
						{
							"id": 2525,
							"name": "EditorAutoClosingStrategy",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for auto closing quotes and brackets"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2589,
									"character": 41
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "always"
									},
									{
										"type": "literal",
										"value": "languageDefined"
									},
									{
										"type": "literal",
										"value": "beforeWhitespace"
									},
									{
										"type": "literal",
										"value": "never"
									}
								]
							}
						},
						{
							"id": 2526,
							"name": "EditorAutoSurroundStrategy",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "Configuration options for auto wrapping quotes and brackets"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2594,
									"character": 42
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "languageDefined"
									},
									{
										"type": "literal",
										"value": "quotes"
									},
									{
										"type": "literal",
										"value": "brackets"
									},
									{
										"type": "literal",
										"value": "never"
									}
								]
							}
						},
						{
							"id": 2936,
							"name": "EditorCommentsOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3293,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2933,
												"name": "IEditorCommentsOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 2957,
							"name": "EditorFindOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3378,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2951,
												"name": "IEditorFindOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 2976,
							"name": "EditorHoverOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3422,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2972,
												"name": "IEditorHoverOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 3024,
							"name": "EditorInlineHintsOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3572,
									"character": 40
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3020,
												"name": "IEditorInlineHintsOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 3019,
							"name": "EditorLightbulbOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3549,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3017,
												"name": "IEditorLightbulbOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 3033,
							"name": "EditorMinimapOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3614,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3025,
												"name": "IEditorMinimapOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 3402,
							"name": "EditorOptionsType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4211,
									"character": 26
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 3273,
									"name": "EditorOptions"
								}
							}
						},
						{
							"id": 3407,
							"name": "FindComputedEditorOptionValueById",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4219,
									"character": 49
								}
							],
							"typeParameter": [
								{
									"id": 3408,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3146,
										"name": "EditorOption"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3405,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"id": 3403,
													"typeArguments": [
														{
															"type": "reference",
															"name": "T"
														}
													],
													"name": "FindEditorOptionsKeyById"
												},
												"objectType": {
													"type": "reference",
													"id": 3402,
													"name": "EditorOptionsType"
												}
											}
										],
										"name": "ComputedEditorOptionValue"
									}
								],
								"name": "NonNullable"
							}
						},
						{
							"id": 3403,
							"name": "FindEditorOptionsKeyById",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4213,
									"character": 33
								}
							],
							"typeParameter": [
								{
									"id": 3404,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3146,
										"name": "EditorOption"
									}
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 3402,
										"name": "EditorOptionsType"
									}
								},
								"objectType": {
									"type": "mapped",
									"parameter": "K",
									"parameterType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 3402,
											"name": "EditorOptionsType"
										}
									},
									"templateType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "id"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 3402,
													"name": "EditorOptionsType"
												}
											}
										},
										"extendsType": {
											"type": "reference",
											"name": "T"
										},
										"trueType": {
											"type": "reference",
											"name": "K"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								}
							}
						},
						{
							"id": 2971,
							"name": "GoToLocationOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3399,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2959,
												"name": "IGotoLocationOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 2958,
							"name": "GoToLocationValues",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3380,
									"character": 34
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "peek"
									},
									{
										"type": "literal",
										"value": "gotoAndPeek"
									},
									{
										"type": "literal",
										"value": "goto"
									}
								]
							}
						},
						{
							"id": 779,
							"name": "IColors",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 999,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 780,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 999,
											"character": 25
										}
									],
									"indexSignature": {
										"id": 781,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 782,
												"name": "colorId",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 2300,
							"name": "IEditorModel",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2128,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2002,
										"name": "ITextModel"
									},
									{
										"type": "reference",
										"id": 2255,
										"name": "IDiffEditorModel"
									}
								]
							}
						},
						{
							"id": 2321,
							"name": "IEditorViewState",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "An editor view state."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2174,
									"character": 32
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2311,
										"name": "ICodeEditorViewState"
									},
									{
										"type": "reference",
										"id": 2318,
										"name": "IDiffEditorViewState"
									}
								]
							}
						},
						{
							"id": 4378,
							"name": "IModel",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5019,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 2002,
								"name": "ITextModel"
							}
						},
						{
							"id": 4377,
							"name": "IReadOnlyModel",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5018,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"id": 2002,
								"name": "ITextModel"
							}
						},
						{
							"id": 3043,
							"name": "InternalParameterHintOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3651,
									"character": 44
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3040,
												"name": "IEditorParameterHintOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 3132,
							"name": "InternalSuggestOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3917,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3096,
												"name": "ISuggestOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 3049,
							"name": "LineNumbersType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3664,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "relative"
									},
									{
										"type": "literal",
										"value": "interval"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3050,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 3664,
													"character": 76
												}
											],
											"signatures": [
												{
													"id": 3051,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3052,
															"name": "lineNumber",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 3135,
							"name": "SmartSelectOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3923,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3133,
												"name": "ISmartSelectOptions"
											}
										],
										"name": "Required"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 3048,
							"name": "ValidQuickSuggestionsOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 3662,
									"character": 44
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3044,
														"name": "IQuickSuggestionsOptions"
													}
												],
												"name": "Required"
											}
										],
										"name": "Readonly"
									}
								]
							}
						},
						{
							"id": 688,
							"name": "onDidChangeMarkers",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 910,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 689,
									"name": "onDidChangeMarkers",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"comment": {
										"shortText": "Emitted when markers change for a model."
									},
									"parameters": [
										{
											"id": 690,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 691,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 910,
															"character": 48
														}
													],
													"signatures": [
														{
															"id": 692,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 693,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "typeOperator",
																		"operator": "readonly",
																		"target": {
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"id": 68,
																				"name": "Uri"
																			}
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 711,
							"name": "onDidChangeModelLanguage",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 938,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 712,
									"name": "onDidChangeModelLanguage",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"comment": {
										"shortText": "Emitted when a different language is set to a model."
									},
									"parameters": [
										{
											"id": 713,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 714,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 938,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 715,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 716,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 717,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 718,
																					"name": "model",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {
																						"isReadonly": true
																					},
																					"sources": [
																						{
																							"fileName": "monaco.ts",
																							"line": 939,
																							"character": 22
																						}
																					],
																					"type": {
																						"type": "reference",
																						"id": 2002,
																						"name": "ITextModel"
																					}
																				},
																				{
																					"id": 719,
																					"name": "oldLanguage",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {
																						"isReadonly": true
																					},
																					"sources": [
																						{
																							"fileName": "monaco.ts",
																							"line": 940,
																							"character": 28
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						718,
																						719
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "monaco.ts",
																					"line": 938,
																					"character": 58
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 652,
							"name": "onDidCreateEditor",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 862,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 653,
									"name": "onDidCreateEditor",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"comment": {
										"shortText": "Emitted when an editor is created.\nCreating a diff editor might cause this listener to be invoked with the two editors."
									},
									"parameters": [
										{
											"id": 654,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 655,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 862,
															"character": 47
														}
													],
													"signatures": [
														{
															"id": 656,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 657,
																	"name": "codeEditor",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3626,
																		"name": "ICodeEditor"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 699,
							"name": "onDidCreateModel",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 926,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 700,
									"name": "onDidCreateModel",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"comment": {
										"shortText": "Emitted when a model is created."
									},
									"parameters": [
										{
											"id": 701,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 702,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 926,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 703,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 704,
																	"name": "model",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 2002,
																		"name": "ITextModel"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 705,
							"name": "onWillDisposeModel",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 932,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 706,
									"name": "onWillDisposeModel",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"comment": {
										"shortText": "Emitted right before a model is disposed."
									},
									"parameters": [
										{
											"id": 707,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 708,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 932,
															"character": 48
														}
													],
													"signatures": [
														{
															"id": 709,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 710,
																	"name": "model",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 2002,
																		"name": "ITextModel"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 3273,
							"name": "EditorOptions",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isConst": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 4082,
									"character": 30
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3274,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3275,
											"name": "acceptSuggestionOnCommitCharacter",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4083,
													"character": 41
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3147,
														"name": "EditorOption.acceptSuggestionOnCommitCharacter"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3276,
											"name": "acceptSuggestionOnEnter",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4084,
													"character": 31
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3148,
														"name": "EditorOption.acceptSuggestionOnEnter"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "on"
															},
															{
																"type": "literal",
																"value": "off"
															},
															{
																"type": "literal",
																"value": "smart"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3278,
											"name": "accessibilityPageSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4086,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3150,
														"name": "EditorOption.accessibilityPageSize"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3277,
											"name": "accessibilitySupport",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4085,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3149,
														"name": "EditorOption.accessibilitySupport"
													},
													{
														"type": "reference",
														"id": 2521,
														"name": "AccessibilitySupport"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3279,
											"name": "ariaLabel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4087,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3151,
														"name": "EditorOption.ariaLabel"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3280,
											"name": "autoClosingBrackets",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4088,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3152,
														"name": "EditorOption.autoClosingBrackets"
													},
													{
														"type": "reference",
														"id": 2525,
														"name": "EditorAutoClosingStrategy"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3281,
											"name": "autoClosingOvertype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4089,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3153,
														"name": "EditorOption.autoClosingOvertype"
													},
													{
														"type": "reference",
														"id": 2527,
														"name": "EditorAutoClosingOvertypeStrategy"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3282,
											"name": "autoClosingQuotes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4090,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3154,
														"name": "EditorOption.autoClosingQuotes"
													},
													{
														"type": "reference",
														"id": 2525,
														"name": "EditorAutoClosingStrategy"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3283,
											"name": "autoIndent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4091,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3155,
														"name": "EditorOption.autoIndent"
													},
													{
														"type": "reference",
														"id": 2528,
														"name": "EditorAutoIndentStrategy"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3285,
											"name": "autoSurround",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4093,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3157,
														"name": "EditorOption.autoSurround"
													},
													{
														"type": "reference",
														"id": 2526,
														"name": "EditorAutoSurroundStrategy"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3284,
											"name": "automaticLayout",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4092,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3156,
														"name": "EditorOption.automaticLayout"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3287,
											"name": "codeLens",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4095,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3158,
														"name": "EditorOption.codeLens"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3288,
											"name": "codeLensFontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4096,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3159,
														"name": "EditorOption.codeLensFontFamily"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3289,
											"name": "codeLensFontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4097,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3160,
														"name": "EditorOption.codeLensFontSize"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3290,
											"name": "colorDecorators",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4098,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3161,
														"name": "EditorOption.colorDecorators"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3291,
											"name": "columnSelection",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4099,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3162,
														"name": "EditorOption.columnSelection"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3292,
											"name": "comments",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4100,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3163,
														"name": "EditorOption.comments"
													},
													{
														"type": "reference",
														"id": 2936,
														"name": "EditorCommentsOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3293,
											"name": "contextmenu",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4101,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3164,
														"name": "EditorOption.contextmenu"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3294,
											"name": "copyWithSyntaxHighlighting",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4102,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3165,
														"name": "EditorOption.copyWithSyntaxHighlighting"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3295,
											"name": "cursorBlinking",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4103,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3166,
														"name": "EditorOption.cursorBlinking"
													},
													{
														"type": "reference",
														"id": 2937,
														"name": "TextEditorCursorBlinkingStyle"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3296,
											"name": "cursorSmoothCaretAnimation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4104,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3167,
														"name": "EditorOption.cursorSmoothCaretAnimation"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3297,
											"name": "cursorStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4105,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3168,
														"name": "EditorOption.cursorStyle"
													},
													{
														"type": "reference",
														"id": 2944,
														"name": "TextEditorCursorStyle"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3298,
											"name": "cursorSurroundingLines",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4106,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3169,
														"name": "EditorOption.cursorSurroundingLines"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3299,
											"name": "cursorSurroundingLinesStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4107,
													"character": 35
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3170,
														"name": "EditorOption.cursorSurroundingLinesStyle"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "default"
															},
															{
																"type": "literal",
																"value": "all"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3300,
											"name": "cursorWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4108,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3171,
														"name": "EditorOption.cursorWidth"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3348,
											"name": "definitionLinkOpensInPeek",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4156,
													"character": 33
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3219,
														"name": "EditorOption.definitionLinkOpensInPeek"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3301,
											"name": "disableLayerHinting",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4109,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3172,
														"name": "EditorOption.disableLayerHinting"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3302,
											"name": "disableMonospaceOptimizations",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4110,
													"character": 37
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3173,
														"name": "EditorOption.disableMonospaceOptimizations"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3303,
											"name": "dragAndDrop",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4111,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3174,
														"name": "EditorOption.dragAndDrop"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3397,
											"name": "editorClassName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4204,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3268,
														"name": "EditorOption.editorClassName"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3304,
											"name": "emptySelectionClipboard",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4112,
													"character": 31
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3175,
														"name": "EditorOption.emptySelectionClipboard"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3305,
											"name": "extraEditorClassName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4113,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3176,
														"name": "EditorOption.extraEditorClassName"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3306,
											"name": "fastScrollSensitivity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4114,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3177,
														"name": "EditorOption.fastScrollSensitivity"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3307,
											"name": "find",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4115,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3178,
														"name": "EditorOption.find"
													},
													{
														"type": "reference",
														"id": 2957,
														"name": "EditorFindOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3308,
											"name": "fixedOverflowWidgets",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4116,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3179,
														"name": "EditorOption.fixedOverflowWidgets"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3309,
											"name": "folding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4117,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3180,
														"name": "EditorOption.folding"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3311,
											"name": "foldingHighlight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4119,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3182,
														"name": "EditorOption.foldingHighlight"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3310,
											"name": "foldingStrategy",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4118,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3181,
														"name": "EditorOption.foldingStrategy"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "auto"
															},
															{
																"type": "literal",
																"value": "indentation"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3313,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4121,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3184,
														"name": "EditorOption.fontFamily"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3314,
											"name": "fontInfo",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4122,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3185,
														"name": "EditorOption.fontInfo"
													},
													{
														"type": "reference",
														"id": 4342,
														"name": "FontInfo"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3315,
											"name": "fontLigatures2",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4123,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3186,
														"name": "EditorOption.fontLigatures"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3316,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4124,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3187,
														"name": "EditorOption.fontSize"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3317,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4125,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3188,
														"name": "EditorOption.fontWeight"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3318,
											"name": "formatOnPaste",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4126,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3189,
														"name": "EditorOption.formatOnPaste"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3319,
											"name": "formatOnType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4127,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3190,
														"name": "EditorOption.formatOnType"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3320,
											"name": "glyphMargin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4128,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3191,
														"name": "EditorOption.glyphMargin"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3321,
											"name": "gotoLocation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4129,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3192,
														"name": "EditorOption.gotoLocation"
													},
													{
														"type": "reference",
														"id": 2971,
														"name": "GoToLocationOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3322,
											"name": "hideCursorInOverviewRuler",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4130,
													"character": 33
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3193,
														"name": "EditorOption.hideCursorInOverviewRuler"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3323,
											"name": "highlightActiveIndentGuide",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4131,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3194,
														"name": "EditorOption.highlightActiveIndentGuide"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3324,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4132,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3195,
														"name": "EditorOption.hover"
													},
													{
														"type": "reference",
														"id": 2976,
														"name": "EditorHoverOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3325,
											"name": "inDiffEditor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4133,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3196,
														"name": "EditorOption.inDiffEditor"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3374,
											"name": "inlineHints",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4181,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3267,
														"name": "EditorOption.inlineHints"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3400,
											"name": "layoutInfo",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4207,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3271,
														"name": "EditorOption.layoutInfo"
													},
													{
														"type": "reference",
														"id": 2986,
														"name": "EditorLayoutInfo"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3326,
											"name": "letterSpacing",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4134,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3197,
														"name": "EditorOption.letterSpacing"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3327,
											"name": "lightbulb",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4135,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3198,
														"name": "EditorOption.lightbulb"
													},
													{
														"type": "reference",
														"id": 3019,
														"name": "EditorLightbulbOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3328,
											"name": "lineDecorationsWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4136,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3199,
														"name": "EditorOption.lineDecorationsWidth"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3329,
											"name": "lineHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4137,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3200,
														"name": "EditorOption.lineHeight"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3330,
											"name": "lineNumbers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4138,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3201,
														"name": "EditorOption.lineNumbers"
													},
													{
														"type": "reference",
														"id": 3059,
														"name": "InternalEditorRenderLineNumbersOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3331,
											"name": "lineNumbersMinChars",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4139,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3202,
														"name": "EditorOption.lineNumbersMinChars"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3332,
											"name": "linkedEditing",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4140,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3203,
														"name": "EditorOption.linkedEditing"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3333,
											"name": "links",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4141,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3204,
														"name": "EditorOption.links"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3334,
											"name": "matchBrackets",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4142,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3205,
														"name": "EditorOption.matchBrackets"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "always"
															},
															{
																"type": "literal",
																"value": "never"
															},
															{
																"type": "literal",
																"value": "near"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3335,
											"name": "minimap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4143,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3206,
														"name": "EditorOption.minimap"
													},
													{
														"type": "reference",
														"id": 3033,
														"name": "EditorMinimapOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3336,
											"name": "mouseStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4144,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3207,
														"name": "EditorOption.mouseStyle"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "default"
															},
															{
																"type": "literal",
																"value": "text"
															},
															{
																"type": "literal",
																"value": "copy"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3337,
											"name": "mouseWheelScrollSensitivity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4145,
													"character": 35
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3208,
														"name": "EditorOption.mouseWheelScrollSensitivity"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3338,
											"name": "mouseWheelZoom",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4146,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3209,
														"name": "EditorOption.mouseWheelZoom"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3339,
											"name": "multiCursorMergeOverlapping",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4147,
													"character": 35
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3210,
														"name": "EditorOption.multiCursorMergeOverlapping"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3340,
											"name": "multiCursorModifier",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4148,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3211,
														"name": "EditorOption.multiCursorModifier"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "altKey"
															},
															{
																"type": "literal",
																"value": "metaKey"
															},
															{
																"type": "literal",
																"value": "ctrlKey"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3341,
											"name": "multiCursorPaste",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4149,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3212,
														"name": "EditorOption.multiCursorPaste"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "spread"
															},
															{
																"type": "literal",
																"value": "full"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3342,
											"name": "occurrencesHighlight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4150,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3213,
														"name": "EditorOption.occurrencesHighlight"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3343,
											"name": "overviewRulerBorder",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4151,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3214,
														"name": "EditorOption.overviewRulerBorder"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3344,
											"name": "overviewRulerLanes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4152,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3215,
														"name": "EditorOption.overviewRulerLanes"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3345,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4153,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3216,
														"name": "EditorOption.padding"
													},
													{
														"type": "reference",
														"id": 3037,
														"name": "InternalEditorPaddingOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3346,
											"name": "parameterHints",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4154,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3217,
														"name": "EditorOption.parameterHints"
													},
													{
														"type": "reference",
														"id": 3043,
														"name": "InternalParameterHintOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3347,
											"name": "peekWidgetDefaultFocus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4155,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3218,
														"name": "EditorOption.peekWidgetDefaultFocus"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "tree"
															},
															{
																"type": "literal",
																"value": "editor"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3398,
											"name": "pixelRatio",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4205,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3269,
														"name": "EditorOption.pixelRatio"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3349,
											"name": "quickSuggestions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4157,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3220,
														"name": "EditorOption.quickSuggestions"
													},
													{
														"type": "reference",
														"id": 3048,
														"name": "ValidQuickSuggestionsOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3350,
											"name": "quickSuggestionsDelay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4158,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3221,
														"name": "EditorOption.quickSuggestionsDelay"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3351,
											"name": "readOnly",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4159,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3222,
														"name": "EditorOption.readOnly"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3352,
											"name": "renameOnType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4160,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3223,
														"name": "EditorOption.renameOnType"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3353,
											"name": "renderControlCharacters",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4161,
													"character": 31
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3224,
														"name": "EditorOption.renderControlCharacters"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3355,
											"name": "renderFinalNewline",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4163,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3226,
														"name": "EditorOption.renderFinalNewline"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3354,
											"name": "renderIndentGuides",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4162,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3225,
														"name": "EditorOption.renderIndentGuides"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3356,
											"name": "renderLineHighlight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4164,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3227,
														"name": "EditorOption.renderLineHighlight"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "all"
															},
															{
																"type": "literal",
																"value": "line"
															},
															{
																"type": "literal",
																"value": "none"
															},
															{
																"type": "literal",
																"value": "gutter"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3357,
											"name": "renderLineHighlightOnlyWhenFocus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4165,
													"character": 40
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3228,
														"name": "EditorOption.renderLineHighlightOnlyWhenFocus"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3358,
											"name": "renderValidationDecorations",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4166,
													"character": 35
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3229,
														"name": "EditorOption.renderValidationDecorations"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "on"
															},
															{
																"type": "literal",
																"value": "off"
															},
															{
																"type": "literal",
																"value": "editable"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3359,
											"name": "renderWhitespace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4167,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3230,
														"name": "EditorOption.renderWhitespace"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "all"
															},
															{
																"type": "literal",
																"value": "none"
															},
															{
																"type": "literal",
																"value": "boundary"
															},
															{
																"type": "literal",
																"value": "selection"
															},
															{
																"type": "literal",
																"value": "trailing"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3360,
											"name": "revealHorizontalRightPadding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4168,
													"character": 36
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3231,
														"name": "EditorOption.revealHorizontalRightPadding"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3361,
											"name": "roundedSelection",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4169,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3232,
														"name": "EditorOption.roundedSelection"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3362,
											"name": "rulers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4170,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3233,
														"name": "EditorOption.rulers"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3363,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 4170,
																	"character": 50
																}
															]
														}
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3365,
											"name": "scrollBeyondLastColumn",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4172,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3235,
														"name": "EditorOption.scrollBeyondLastColumn"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3366,
											"name": "scrollBeyondLastLine",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4173,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3236,
														"name": "EditorOption.scrollBeyondLastLine"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3367,
											"name": "scrollPredominantAxis",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4174,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3237,
														"name": "EditorOption.scrollPredominantAxis"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3364,
											"name": "scrollbar",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4171,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3234,
														"name": "EditorOption.scrollbar"
													},
													{
														"type": "reference",
														"id": 3082,
														"name": "InternalEditorScrollbarOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3370,
											"name": "selectOnLineNumbers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4177,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3240,
														"name": "EditorOption.selectOnLineNumbers"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3368,
											"name": "selectionClipboard",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4175,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3238,
														"name": "EditorOption.selectionClipboard"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3369,
											"name": "selectionHighlight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4176,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3239,
														"name": "EditorOption.selectionHighlight"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3373,
											"name": "showDeprecated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4180,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3266,
														"name": "EditorOption.showDeprecated"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3371,
											"name": "showFoldingControls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4178,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3241,
														"name": "EditorOption.showFoldingControls"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "always"
															},
															{
																"type": "literal",
																"value": "mouseover"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3372,
											"name": "showUnused",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4179,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3242,
														"name": "EditorOption.showUnused"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3376,
											"name": "smartSelect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4183,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3244,
														"name": "EditorOption.smartSelect"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3377,
											"name": "smoothScrolling",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4184,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3245,
														"name": "EditorOption.smoothScrolling"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3375,
											"name": "snippetSuggestions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4182,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3243,
														"name": "EditorOption.snippetSuggestions"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "none"
															},
															{
																"type": "literal",
																"value": "top"
															},
															{
																"type": "literal",
																"value": "bottom"
															},
															{
																"type": "literal",
																"value": "inline"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3286,
											"name": "stickyTabStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4094,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3246,
														"name": "EditorOption.stickyTabStops"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3378,
											"name": "stopRenderingLineAfter",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4185,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3247,
														"name": "EditorOption.stopRenderingLineAfter"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3379,
											"name": "suggest",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4186,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3248,
														"name": "EditorOption.suggest"
													},
													{
														"type": "reference",
														"id": 3132,
														"name": "InternalSuggestOptions"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3380,
											"name": "suggestFontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4187,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3249,
														"name": "EditorOption.suggestFontSize"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3381,
											"name": "suggestLineHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4188,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3250,
														"name": "EditorOption.suggestLineHeight"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3382,
											"name": "suggestOnTriggerCharacters",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4189,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3251,
														"name": "EditorOption.suggestOnTriggerCharacters"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3383,
											"name": "suggestSelection",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4190,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3252,
														"name": "EditorOption.suggestSelection"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "first"
															},
															{
																"type": "literal",
																"value": "recentlyUsed"
															},
															{
																"type": "literal",
																"value": "recentlyUsedByPrefix"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3384,
											"name": "tabCompletion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4191,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3253,
														"name": "EditorOption.tabCompletion"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "on"
															},
															{
																"type": "literal",
																"value": "off"
															},
															{
																"type": "literal",
																"value": "onlySnippets"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3399,
											"name": "tabFocusMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4206,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3270,
														"name": "EditorOption.tabFocusMode"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3385,
											"name": "tabIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4192,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3254,
														"name": "EditorOption.tabIndex"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3312,
											"name": "unfoldOnClickAfterEndOfLine",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4120,
													"character": 35
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3183,
														"name": "EditorOption.unfoldOnClickAfterEndOfLine"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3386,
											"name": "unusualLineTerminators",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4193,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3255,
														"name": "EditorOption.unusualLineTerminators"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "auto"
															},
															{
																"type": "literal",
																"value": "off"
															},
															{
																"type": "literal",
																"value": "prompt"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3387,
											"name": "useTabStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4194,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3256,
														"name": "EditorOption.useTabStops"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3388,
											"name": "wordSeparators",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4195,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3257,
														"name": "EditorOption.wordSeparators"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3389,
											"name": "wordWrap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4196,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3258,
														"name": "EditorOption.wordWrap"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "on"
															},
															{
																"type": "literal",
																"value": "off"
															},
															{
																"type": "literal",
																"value": "wordWrapColumn"
															},
															{
																"type": "literal",
																"value": "bounded"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3390,
											"name": "wordWrapBreakAfterCharacters",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4197,
													"character": 36
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3259,
														"name": "EditorOption.wordWrapBreakAfterCharacters"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3391,
											"name": "wordWrapBreakBeforeCharacters",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4198,
													"character": 37
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3260,
														"name": "EditorOption.wordWrapBreakBeforeCharacters"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3392,
											"name": "wordWrapColumn",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4199,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3261,
														"name": "EditorOption.wordWrapColumn"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3393,
											"name": "wordWrapOverride1",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4200,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3262,
														"name": "EditorOption.wordWrapOverride1"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "on"
															},
															{
																"type": "literal",
																"value": "off"
															},
															{
																"type": "literal",
																"value": "inherit"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3394,
											"name": "wordWrapOverride2",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4201,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3263,
														"name": "EditorOption.wordWrapOverride2"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "on"
															},
															{
																"type": "literal",
																"value": "off"
															},
															{
																"type": "literal",
																"value": "inherit"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3395,
											"name": "wrappingIndent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4202,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3264,
														"name": "EditorOption.wrappingIndent"
													},
													{
														"type": "reference",
														"id": 3136,
														"name": "WrappingIndent"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3401,
											"name": "wrappingInfo",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4208,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3272,
														"name": "EditorOption.wrappingInfo"
													},
													{
														"type": "reference",
														"id": 3141,
														"name": "EditorWrappingInfo"
													}
												],
												"name": "IEditorOption"
											}
										},
										{
											"id": 3396,
											"name": "wrappingStrategy",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 4203,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 2927,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3265,
														"name": "EditorOption.wrappingStrategy"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "simple"
															},
															{
																"type": "literal",
																"value": "advanced"
															}
														]
													}
												],
												"name": "IEditorOption"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3275,
												3276,
												3278,
												3277,
												3279,
												3280,
												3281,
												3282,
												3283,
												3285,
												3284,
												3287,
												3288,
												3289,
												3290,
												3291,
												3292,
												3293,
												3294,
												3295,
												3296,
												3297,
												3298,
												3299,
												3300,
												3348,
												3301,
												3302,
												3303,
												3397,
												3304,
												3305,
												3306,
												3307,
												3308,
												3309,
												3311,
												3310,
												3313,
												3314,
												3315,
												3316,
												3317,
												3318,
												3319,
												3320,
												3321,
												3322,
												3323,
												3324,
												3325,
												3374,
												3400,
												3326,
												3327,
												3328,
												3329,
												3330,
												3331,
												3332,
												3333,
												3334,
												3335,
												3336,
												3337,
												3338,
												3339,
												3340,
												3341,
												3342,
												3343,
												3344,
												3345,
												3346,
												3347,
												3398,
												3349,
												3350,
												3351,
												3352,
												3353,
												3355,
												3354,
												3356,
												3357,
												3358,
												3359,
												3360,
												3361,
												3362,
												3365,
												3366,
												3367,
												3364,
												3370,
												3368,
												3369,
												3373,
												3371,
												3372,
												3376,
												3377,
												3375,
												3286,
												3378,
												3379,
												3380,
												3381,
												3382,
												3383,
												3384,
												3399,
												3385,
												3312,
												3386,
												3387,
												3388,
												3389,
												3390,
												3391,
												3392,
												3393,
												3394,
												3395,
												3401,
												3396
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 4082,
											"character": 31
										}
									]
								}
							}
						},
						{
							"id": 2472,
							"name": "EditorType",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isConst": true
							},
							"comment": {
								"shortText": "The type of the `IEditor`."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 2400,
									"character": 27
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2473,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2474,
											"name": "ICodeEditor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 2401,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2475,
											"name": "IDiffEditor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 2402,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2474,
												2475
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 2400,
											"character": 28
										}
									]
								}
							}
						},
						{
							"id": 728,
							"name": "colorize",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 957,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 729,
									"name": "colorize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Colorize `text` using language `languageId`."
									},
									"parameters": [
										{
											"id": 730,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 731,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 732,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1893,
												"name": "IColorizerOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 724,
							"name": "colorizeElement",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 952,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 725,
									"name": "colorizeElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Colorize the contents of `domNode` using attribute `data-lang`."
									},
									"parameters": [
										{
											"id": 726,
											"name": "domNode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 727,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1895,
												"name": "IColorizerElementOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 733,
							"name": "colorizeModelLine",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 962,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 734,
									"name": "colorizeModelLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Colorize a line in a model."
									},
									"parameters": [
										{
											"id": 735,
											"name": "model",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2002,
												"name": "ITextModel"
											}
										},
										{
											"id": 736,
											"name": "lineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 737,
											"name": "tabSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 647,
							"name": "create",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 855,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 648,
									"name": "create",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new editor under `domElement`.\n`domElement` should be empty (not contain other dom nodes).\nThe editor will read the size of `domElement`."
									},
									"parameters": [
										{
											"id": 649,
											"name": "domElement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 650,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 827,
												"name": "IStandaloneEditorConstructionOptions"
											}
										},
										{
											"id": 651,
											"name": "override",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 1853,
												"name": "IEditorOverrideServices"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1101,
										"name": "IStandaloneCodeEditor"
									}
								}
							]
						},
						{
							"id": 658,
							"name": "createDiffEditor",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 869,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 659,
									"name": "createDiffEditor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new diff editor under `domElement`.\n`domElement` should be empty (not contain other dom nodes).\nThe editor will read the size of `domElement`."
									},
									"parameters": [
										{
											"id": 660,
											"name": "domElement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 661,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 966,
												"name": "IDiffEditorConstructionOptions"
											}
										},
										{
											"id": 662,
											"name": "override",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 1853,
												"name": "IEditorOverrideServices"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1670,
										"name": "IStandaloneDiffEditor"
									}
								}
							]
						},
						{
							"id": 663,
							"name": "createDiffNavigator",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 877,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 664,
									"name": "createDiffNavigator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 665,
											"name": "diffEditor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1670,
												"name": "IStandaloneDiffEditor"
											}
										},
										{
											"id": 666,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 768,
												"name": "IDiffNavigatorOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 759,
										"name": "IDiffNavigator"
									}
								}
							]
						},
						{
							"id": 667,
							"name": "createModel",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 883,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 668,
									"name": "createModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new editor model.\nYou can specify the language that should be set for this model or let the language be inferred from the `uri`."
									},
									"parameters": [
										{
											"id": 669,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 670,
											"name": "language",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 671,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 68,
												"name": "Uri"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2002,
										"name": "ITextModel"
									}
								}
							]
						},
						{
							"id": 720,
							"name": "createWebWorker",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 947,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 721,
									"name": "createWebWorker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new web worker that has model syncing capabilities built in.\nSpecify an AMD module to load that will `create` an object that will be proxied."
									},
									"typeParameter": [
										{
											"id": 722,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 723,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 797,
												"name": "IWebWorkerOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 788,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "MonacoWebWorker"
									}
								}
							]
						},
						{
							"id": 742,
							"name": "defineTheme",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 972,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 743,
									"name": "defineTheme",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Define a new theme or update an existing theme."
									},
									"parameters": [
										{
											"id": 744,
											"name": "themeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 745,
											"name": "themeData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 773,
												"name": "IStandaloneThemeData"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 694,
							"name": "getModel",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 915,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 695,
									"name": "getModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the model that has `uri` if it exists."
									},
									"parameters": [
										{
											"id": 696,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 68,
												"name": "Uri"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2002,
												"name": "ITextModel"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						},
						{
							"id": 681,
							"name": "getModelMarkers",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 900,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 682,
									"name": "getModelMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get markers for owner and/or resource",
										"returns": "list of markers\n"
									},
									"parameters": [
										{
											"id": 683,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 684,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 685,
															"name": "owner",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 901,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 686,
															"name": "resource",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 902,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"id": 68,
																"name": "Uri"
															}
														},
														{
															"id": 687,
															"name": "take",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 903,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																685,
																686,
																687
															]
														}
													],
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 900,
															"character": 43
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1856,
											"name": "IMarker"
										}
									}
								}
							]
						},
						{
							"id": 697,
							"name": "getModels",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 920,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 698,
									"name": "getModels",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all the created models."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2002,
											"name": "ITextModel"
										}
									}
								}
							]
						},
						{
							"id": 751,
							"name": "registerCommand",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 987,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 752,
									"name": "registerCommand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a command."
									},
									"parameters": [
										{
											"id": 753,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 754,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 755,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 987,
															"character": 56
														}
													],
													"signatures": [
														{
															"id": 756,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 757,
																	"name": "accessor",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 758,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 749,
							"name": "remeasureFonts",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 982,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 750,
									"name": "remeasureFonts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clears all cached font measurements and triggers re-measurement."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 672,
							"name": "setModelLanguage",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 888,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 673,
									"name": "setModelLanguage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Change the language for a model."
									},
									"parameters": [
										{
											"id": 674,
											"name": "model",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2002,
												"name": "ITextModel"
											}
										},
										{
											"id": 675,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 676,
							"name": "setModelMarkers",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 893,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 677,
									"name": "setModelMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the markers for a model."
									},
									"parameters": [
										{
											"id": 678,
											"name": "model",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2002,
												"name": "ITextModel"
											}
										},
										{
											"id": 679,
											"name": "owner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 680,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1872,
													"name": "IMarkerData"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 746,
							"name": "setTheme",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 977,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 747,
									"name": "setTheme",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Switches to a theme."
									},
									"parameters": [
										{
											"id": 748,
											"name": "themeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 738,
							"name": "tokenize",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 967,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 739,
									"name": "tokenize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Tokenize `text` using language `languageId`"
									},
									"parameters": [
										{
											"id": 740,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 741,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 634,
												"name": "Token"
											}
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Enumerations",
							"kind": 4,
							"children": [
								2521,
								3436,
								2500,
								1957,
								2528,
								3146,
								1953,
								1960,
								1910,
								3471,
								3458,
								1905,
								3053,
								2982,
								2322,
								1899,
								2937,
								2944,
								1997,
								3136
							]
						},
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								4365,
								2788,
								1991,
								4342,
								1977
							]
						},
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								2986,
								3005,
								3141,
								803,
								2264,
								2269,
								3626,
								2311,
								1895,
								1893,
								2246,
								1841,
								2794,
								2284,
								3444,
								3440,
								1844,
								2508,
								2513,
								2301,
								1974,
								2240,
								1913,
								4184,
								966,
								2255,
								2656,
								2318,
								4182,
								759,
								768,
								2261,
								2225,
								2325,
								2292,
								2933,
								3502,
								2464,
								2951,
								2972,
								3020,
								3017,
								3025,
								3493,
								2927,
								2534,
								1853,
								3034,
								3040,
								3068,
								815,
								2959,
								1967,
								2278,
								1856,
								1872,
								2258,
								2480,
								2485,
								1944,
								1920,
								1924,
								1916,
								2492,
								1941,
								2476,
								2479,
								2495,
								3486,
								2289,
								3464,
								3462,
								3496,
								3499,
								3044,
								1886,
								3065,
								1963,
								3133,
								1101,
								1670,
								827,
								773,
								3096,
								2002,
								1986,
								783,
								1971,
								2305,
								3409,
								3426,
								797,
								1949,
								3037,
								3059,
								3082,
								788,
								2977,
								1903
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								772,
								3405,
								2527,
								2525,
								2526,
								2936,
								2957,
								2976,
								3024,
								3019,
								3033,
								3402,
								3407,
								3403,
								2971,
								2958,
								779,
								2300,
								2321,
								4378,
								4377,
								3043,
								3132,
								3049,
								3135,
								3048
							]
						},
						{
							"title": "Events",
							"kind": 8388608,
							"children": [
								688,
								711,
								652,
								699,
								705
							]
						},
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								3273,
								2472
							]
						},
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								728,
								724,
								733,
								647,
								658,
								663,
								667,
								720,
								742,
								694,
								681,
								697,
								751,
								749,
								672,
								676,
								746,
								738
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 841,
							"character": 31
						}
					]
				},
				{
					"id": 4379,
					"name": "languages",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5399,
							"name": "css",
							"kind": 2,
							"kindString": "Namespace",
							"flags": {},
							"children": [
								{
									"id": 5400,
									"name": "DiagnosticsOptions",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5402,
											"name": "lint",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7054,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5403,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5414,
															"name": "argumentsInColorFunction",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7065,
																	"character": 45
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5409,
															"name": "boxModel",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7060,
																	"character": 29
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5404,
															"name": "compatibleVendorPrefixes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7055,
																	"character": 45
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5406,
															"name": "duplicateProperties",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7057,
																	"character": 40
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5407,
															"name": "emptyRules",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7058,
																	"character": 31
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5420,
															"name": "float",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7071,
																	"character": 26
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5412,
															"name": "fontFaceProperties",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7063,
																	"character": 39
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5413,
															"name": "hexColorLength",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7064,
																	"character": 35
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5421,
															"name": "idSelector",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7072,
																	"character": 31
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5416,
															"name": "ieHack",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7067,
																	"character": 27
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5408,
															"name": "importStatement",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7059,
																	"character": 36
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5419,
															"name": "important",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7070,
																	"character": 30
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5418,
															"name": "propertyIgnoredDueToDisplay",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7069,
																	"character": 48
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5410,
															"name": "universalSelector",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7061,
																	"character": 38
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5415,
															"name": "unknownProperties",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7066,
																	"character": 38
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5417,
															"name": "unknownVendorSpecificProperties",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7068,
																	"character": 52
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5405,
															"name": "vendorPrefix",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7056,
																	"character": 33
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														},
														{
															"id": 5411,
															"name": "zeroUnits",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 7062,
																	"character": 30
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ignore"
																	},
																	{
																		"type": "literal",
																		"value": "warning"
																	},
																	{
																		"type": "literal",
																		"value": "error"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																5414,
																5409,
																5404,
																5406,
																5407,
																5420,
																5412,
																5413,
																5421,
																5416,
																5408,
																5419,
																5418,
																5410,
																5415,
																5417,
																5405,
																5411
															]
														}
													]
												}
											}
										},
										{
											"id": 5401,
											"name": "validate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7053,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5402,
												5401
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7052,
											"character": 39
										}
									]
								},
								{
									"id": 5434,
									"name": "LanguageServiceDefaults",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5437,
											"name": "diagnosticsOptions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7124,
													"character": 35
												}
											],
											"type": {
												"type": "reference",
												"id": 5400,
												"name": "DiagnosticsOptions"
											}
										},
										{
											"id": 5435,
											"name": "languageId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7122,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5438,
											"name": "modeConfiguration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7125,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 5422,
												"name": "ModeConfiguration"
											}
										},
										{
											"id": 5436,
											"name": "onDidChange",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7123,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 19,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5434,
														"name": "LanguageServiceDefaults"
													}
												],
												"name": "IEvent"
											}
										},
										{
											"id": 5439,
											"name": "setDiagnosticsOptions",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5440,
													"name": "setDiagnosticsOptions",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 5441,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5400,
																"name": "DiagnosticsOptions"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5442,
											"name": "setModeConfiguration",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5443,
													"name": "setModeConfiguration",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 5444,
															"name": "modeConfiguration",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5422,
																"name": "ModeConfiguration"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5437,
												5435,
												5438,
												5436
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5439,
												5442
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7121,
											"character": 44
										}
									]
								},
								{
									"id": 5422,
									"name": "ModeConfiguration",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5430,
											"name": "colors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in color provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7107,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5423,
											"name": "completionItems",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in completionItemProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7079,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5426,
											"name": "definitions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in definitions provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7091,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5432,
											"name": "diagnostics",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in diagnostic provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7115,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5428,
											"name": "documentHighlights",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in references provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7099,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5425,
											"name": "documentSymbols",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in documentSymbolProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7087,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5431,
											"name": "foldingRanges",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in foldingRange provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7111,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5424,
											"name": "hovers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in hoverProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7083,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5427,
											"name": "references",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in references provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7095,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5429,
											"name": "rename",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in rename provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7103,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5433,
											"name": "selectionRanges",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in selection range provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7119,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5430,
												5423,
												5426,
												5432,
												5428,
												5425,
												5431,
												5424,
												5427,
												5429,
												5433
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7075,
											"character": 38
										}
									]
								},
								{
									"id": 5445,
									"name": "cssDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7129,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"id": 5434,
										"name": "LanguageServiceDefaults"
									}
								},
								{
									"id": 5447,
									"name": "lessDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7131,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"id": 5434,
										"name": "LanguageServiceDefaults"
									}
								},
								{
									"id": 5446,
									"name": "scssDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7130,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"id": 5434,
										"name": "LanguageServiceDefaults"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										5400,
										5434,
										5422
									]
								},
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										5445,
										5447,
										5446
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 7051,
									"character": 38
								}
							]
						},
						{
							"id": 5484,
							"name": "html",
							"kind": 2,
							"kindString": "Namespace",
							"flags": {},
							"children": [
								{
									"id": 5498,
									"name": "CompletionConfiguration",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7255,
											"character": 44
										}
									],
									"indexSignature": {
										"id": 5499,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5500,
												"name": "provider",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								},
								{
									"id": 5485,
									"name": "HTMLFormatConfiguration",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5490,
											"name": "contentUnformatted",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7246,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5495,
											"name": "endWithNewline",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7251,
													"character": 31
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5496,
											"name": "extraLiners",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7252,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5494,
											"name": "indentHandlebars",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7250,
													"character": 33
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5491,
											"name": "indentInnerHtml",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7247,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5487,
											"name": "insertSpaces",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7243,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5493,
											"name": "maxPreserveNewLines",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7249,
													"character": 36
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 5492,
											"name": "preserveNewLines",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7248,
													"character": 33
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5486,
											"name": "tabSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7242,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 5489,
											"name": "unformatted",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7245,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5497,
											"name": "wrapAttributes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7253,
													"character": 31
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "auto"
													},
													{
														"type": "literal",
														"value": "force"
													},
													{
														"type": "literal",
														"value": "force-aligned"
													},
													{
														"type": "literal",
														"value": "force-expand-multiline"
													}
												]
											}
										},
										{
											"id": 5488,
											"name": "wrapLineLength",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7244,
													"character": 31
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5490,
												5495,
												5496,
												5494,
												5491,
												5487,
												5493,
												5492,
												5486,
												5489,
												5497,
												5488
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7241,
											"character": 44
										}
									]
								},
								{
									"id": 5517,
									"name": "LanguageServiceDefaults",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5518,
											"name": "languageId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7319,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5519,
											"name": "modeConfiguration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7320,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 5504,
												"name": "ModeConfiguration"
											}
										},
										{
											"id": 5520,
											"name": "onDidChange",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7321,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 19,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5517,
														"name": "LanguageServiceDefaults"
													}
												],
												"name": "IEvent"
											}
										},
										{
											"id": 5521,
											"name": "options",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7322,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 5501,
												"name": "Options"
											}
										},
										{
											"id": 5522,
											"name": "setOptions",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5523,
													"name": "setOptions",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 5524,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5501,
																"name": "Options"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5518,
												5519,
												5520,
												5521
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5522
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7318,
											"character": 44
										}
									]
								},
								{
									"id": 5504,
									"name": "ModeConfiguration",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5511,
											"name": "colors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in color provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7296,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5505,
											"name": "completionItems",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in completionItemProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7272,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5513,
											"name": "diagnostics",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in diagnostic provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7304,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5515,
											"name": "documentFormattingEdits",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in documentFormattingEdit provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7312,
													"character": 40
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5509,
											"name": "documentHighlights",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in references provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7288,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5516,
											"name": "documentRangeFormattingEdits",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in documentRangeFormattingEdit provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7316,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5507,
											"name": "documentSymbols",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in documentSymbolProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7280,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5512,
											"name": "foldingRanges",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in foldingRange provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7300,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5506,
											"name": "hovers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in hoverProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7276,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5508,
											"name": "links",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in definitions provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7284,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5510,
											"name": "rename",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in rename provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7292,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5514,
											"name": "selectionRanges",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in selection range provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7308,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5511,
												5505,
												5513,
												5515,
												5509,
												5516,
												5507,
												5512,
												5506,
												5508,
												5510,
												5514
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7268,
											"character": 38
										}
									]
								},
								{
									"id": 5501,
									"name": "Options",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5502,
											"name": "format",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "If set, comments are tolerated. If set to false, syntax errors will be emitted for comments."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7262,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"id": 5485,
												"name": "HTMLFormatConfiguration"
											}
										},
										{
											"id": 5503,
											"name": "suggest",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "A list of known schemas and/or associations of schemas to file names."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7266,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 5498,
												"name": "CompletionConfiguration"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5502,
												5503
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7258,
											"character": 28
										}
									]
								},
								{
									"id": 5526,
									"name": "handlebarDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7326,
											"character": 34
										}
									],
									"type": {
										"type": "reference",
										"id": 5517,
										"name": "LanguageServiceDefaults"
									}
								},
								{
									"id": 5525,
									"name": "htmlDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7325,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"id": 5517,
										"name": "LanguageServiceDefaults"
									}
								},
								{
									"id": 5527,
									"name": "razorDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7327,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"id": 5517,
										"name": "LanguageServiceDefaults"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										5498,
										5485,
										5517,
										5504,
										5501
									]
								},
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										5526,
										5525,
										5527
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 7240,
									"character": 39
								}
							]
						},
						{
							"id": 5448,
							"name": "json",
							"kind": 2,
							"kindString": "Namespace",
							"flags": {},
							"children": [
								{
									"id": 5449,
									"name": "DiagnosticsOptions",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5451,
											"name": "allowComments",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "If set, comments are tolerated. If set to false, syntax errors will be emitted for comments."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7149,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5457,
											"name": "enableSchemaRequest",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": " If set, the schema service would load schema content on-demand with 'fetch' if available"
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7170,
													"character": 36
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5459,
											"name": "schemaRequest",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "The severity of problems that occurred when resolving and loading schemas. If set to 'ignore', schema resolving problems are not reported. If not set, 'warning' is used."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7178,
													"character": 30
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ignore"
													},
													{
														"type": "literal",
														"value": "warning"
													},
													{
														"type": "literal",
														"value": "error"
													}
												]
											}
										},
										{
											"id": 5458,
											"name": "schemaValidation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "The severity of problems from schema validation. If set to 'ignore', schema validation will be skipped. If not set, 'warning' is used."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7174,
													"character": 33
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ignore"
													},
													{
														"type": "literal",
														"value": "warning"
													},
													{
														"type": "literal",
														"value": "error"
													}
												]
											}
										},
										{
											"id": 5452,
											"name": "schemas",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "A list of known schemas and/or associations of schemas to file names."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7153,
													"character": 24
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 5453,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 5455,
																"name": "fileMatch",
																"kind": 1024,
																"kindString": "Property",
																"flags": {
																	"isOptional": true,
																	"isReadonly": true
																},
																"comment": {
																	"shortText": "A list of file names that are associated to the schema. The '*' wildcard can be used. For example '*.schema.json', 'package.json'"
																},
																"sources": [
																	{
																		"fileName": "monaco.ts",
																		"line": 7161,
																		"character": 30
																	}
																],
																"type": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															},
															{
																"id": 5456,
																"name": "schema",
																"kind": 1024,
																"kindString": "Property",
																"flags": {
																	"isOptional": true,
																	"isReadonly": true
																},
																"comment": {
																	"shortText": "The schema for the given URI."
																},
																"sources": [
																	{
																		"fileName": "monaco.ts",
																		"line": 7165,
																		"character": 27
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 5454,
																"name": "uri",
																"kind": 1024,
																"kindString": "Property",
																"flags": {
																	"isReadonly": true
																},
																"comment": {
																	"shortText": "The URI of the schema, which is also the identifier of the schema."
																},
																"sources": [
																	{
																		"fileName": "monaco.ts",
																		"line": 7157,
																		"character": 24
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"kind": 1024,
																"children": [
																	5455,
																	5456,
																	5454
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 5450,
											"name": "validate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "If set, the validator will be enabled and perform syntax validation as well as schema based validation."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7145,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5451,
												5457,
												5459,
												5458,
												5452,
												5450
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7141,
											"character": 39
										}
									]
								},
								{
									"id": 5472,
									"name": "LanguageServiceDefaults",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5475,
											"name": "diagnosticsOptions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7226,
													"character": 35
												}
											],
											"type": {
												"type": "reference",
												"id": 5449,
												"name": "DiagnosticsOptions"
											}
										},
										{
											"id": 5473,
											"name": "languageId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7224,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5476,
											"name": "modeConfiguration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7227,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 5461,
												"name": "ModeConfiguration"
											}
										},
										{
											"id": 5474,
											"name": "onDidChange",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7225,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 19,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5472,
														"name": "LanguageServiceDefaults"
													}
												],
												"name": "IEvent"
											}
										},
										{
											"id": 5477,
											"name": "setDiagnosticsOptions",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5478,
													"name": "setDiagnosticsOptions",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 5479,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5449,
																"name": "DiagnosticsOptions"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5480,
											"name": "setModeConfiguration",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5481,
													"name": "setModeConfiguration",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 5482,
															"name": "modeConfiguration",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5461,
																"name": "ModeConfiguration"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5475,
												5473,
												5476,
												5474
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5477,
												5480
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7223,
											"character": 44
										}
									]
								},
								{
									"id": 5461,
									"name": "ModeConfiguration",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5468,
											"name": "colors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in color provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7209,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5464,
											"name": "completionItems",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in completionItemProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7193,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5470,
											"name": "diagnostics",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in diagnostic provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7217,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5462,
											"name": "documentFormattingEdits",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in documentFormattingEdit provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7185,
													"character": 40
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5463,
											"name": "documentRangeFormattingEdits",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in documentRangeFormattingEdit provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7189,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5466,
											"name": "documentSymbols",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in documentSymbolProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7201,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5469,
											"name": "foldingRanges",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in foldingRange provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7213,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5465,
											"name": "hovers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in hoverProvider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7197,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5471,
											"name": "selectionRanges",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in selection range provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7221,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5467,
											"name": "tokens",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"shortText": "Defines whether the built-in tokens provider is enabled."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 7205,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5468,
												5464,
												5470,
												5462,
												5463,
												5466,
												5469,
												5465,
												5471,
												5467
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7181,
											"character": 38
										}
									]
								},
								{
									"id": 5460,
									"name": "SeverityLevel",
									"kind": 4194304,
									"kindString": "Type alias",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7180,
											"character": 29
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "error"
											},
											{
												"type": "literal",
												"value": "warning"
											},
											{
												"type": "literal",
												"value": "ignore"
											}
										]
									}
								},
								{
									"id": 5483,
									"name": "jsonDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7231,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"id": 5472,
										"name": "LanguageServiceDefaults"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										5449,
										5472,
										5461
									]
								},
								{
									"title": "Type aliases",
									"kind": 4194304,
									"children": [
										5460
									]
								},
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										5483
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 7140,
									"character": 39
								}
							]
						},
						{
							"id": 5098,
							"name": "typescript",
							"kind": 2,
							"kindString": "Namespace",
							"flags": {},
							"children": [
								{
									"id": 5107,
									"name": "JsxEmit",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {},
									"children": [
										{
											"id": 5108,
											"name": "None",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6650,
													"character": 12
												}
											],
											"defaultValue": "0"
										},
										{
											"id": 5109,
											"name": "Preserve",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6651,
													"character": 16
												}
											],
											"defaultValue": "1"
										},
										{
											"id": 5110,
											"name": "React",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6652,
													"character": 13
												}
											],
											"defaultValue": "2"
										},
										{
											"id": 5112,
											"name": "ReactJSX",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6654,
													"character": 16
												}
											],
											"defaultValue": "4"
										},
										{
											"id": 5113,
											"name": "ReactJSXDev",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6655,
													"character": 19
												}
											],
											"defaultValue": "5"
										},
										{
											"id": 5111,
											"name": "ReactNative",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6653,
													"character": 19
												}
											],
											"defaultValue": "3"
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												5108,
												5109,
												5110,
												5112,
												5113,
												5111
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6649,
											"character": 23
										}
									]
								},
								{
									"id": 5099,
									"name": "ModuleKind",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {},
									"children": [
										{
											"id": 5102,
											"name": "AMD",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6643,
													"character": 11
												}
											],
											"defaultValue": "2"
										},
										{
											"id": 5101,
											"name": "CommonJS",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6642,
													"character": 16
												}
											],
											"defaultValue": "1"
										},
										{
											"id": 5105,
											"name": "ES2015",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6646,
													"character": 14
												}
											],
											"defaultValue": "5"
										},
										{
											"id": 5106,
											"name": "ESNext",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6647,
													"character": 14
												}
											],
											"defaultValue": "99"
										},
										{
											"id": 5100,
											"name": "None",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6641,
													"character": 12
												}
											],
											"defaultValue": "0"
										},
										{
											"id": 5104,
											"name": "System",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6645,
													"character": 14
												}
											],
											"defaultValue": "4"
										},
										{
											"id": 5103,
											"name": "UMD",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6644,
													"character": 11
												}
											],
											"defaultValue": "3"
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												5102,
												5101,
												5105,
												5106,
												5100,
												5104,
												5103
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6640,
											"character": 26
										}
									]
								},
								{
									"id": 5129,
									"name": "ModuleResolutionKind",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {},
									"children": [
										{
											"id": 5130,
											"name": "Classic",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6675,
													"character": 15
												}
											],
											"defaultValue": "1"
										},
										{
											"id": 5131,
											"name": "NodeJs",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6676,
													"character": 14
												}
											],
											"defaultValue": "2"
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												5130,
												5131
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6674,
											"character": 36
										}
									]
								},
								{
									"id": 5114,
									"name": "NewLineKind",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {},
									"children": [
										{
											"id": 5115,
											"name": "CarriageReturnLineFeed",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6658,
													"character": 30
												}
											],
											"defaultValue": "0"
										},
										{
											"id": 5116,
											"name": "LineFeed",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6659,
													"character": 16
												}
											],
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												5115,
												5116
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6657,
											"character": 27
										}
									]
								},
								{
									"id": 5117,
									"name": "ScriptTarget",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {},
									"children": [
										{
											"id": 5120,
											"name": "ES2015",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6664,
													"character": 14
												}
											],
											"defaultValue": "2"
										},
										{
											"id": 5121,
											"name": "ES2016",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6665,
													"character": 14
												}
											],
											"defaultValue": "3"
										},
										{
											"id": 5122,
											"name": "ES2017",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6666,
													"character": 14
												}
											],
											"defaultValue": "4"
										},
										{
											"id": 5123,
											"name": "ES2018",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6667,
													"character": 14
												}
											],
											"defaultValue": "5"
										},
										{
											"id": 5124,
											"name": "ES2019",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6668,
													"character": 14
												}
											],
											"defaultValue": "6"
										},
										{
											"id": 5125,
											"name": "ES2020",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6669,
													"character": 14
												}
											],
											"defaultValue": "7"
										},
										{
											"id": 5118,
											"name": "ES3",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6662,
													"character": 11
												}
											],
											"defaultValue": "0"
										},
										{
											"id": 5119,
											"name": "ES5",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6663,
													"character": 11
												}
											],
											"defaultValue": "1"
										},
										{
											"id": 5126,
											"name": "ESNext",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6670,
													"character": 14
												}
											],
											"defaultValue": "99"
										},
										{
											"id": 5127,
											"name": "JSON",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6671,
													"character": 12
												}
											],
											"defaultValue": "100"
										},
										{
											"id": 5128,
											"name": "Latest",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6672,
													"character": 14
												}
											],
											"defaultValue": "99"
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												5120,
												5121,
												5122,
												5123,
												5124,
												5125,
												5118,
												5119,
												5126,
												5127,
												5128
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6661,
											"character": 28
										}
									]
								},
								{
									"id": 5137,
									"name": "CompilerOptions",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5138,
											"name": "allowJs",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6691,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5139,
											"name": "allowSyntheticDefaultImports",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6692,
													"character": 36
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5140,
											"name": "allowUmdGlobalAccess",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6693,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5141,
											"name": "allowUnreachableCode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6694,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5142,
											"name": "allowUnusedLabels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6695,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5143,
											"name": "alwaysStrict",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6696,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5144,
											"name": "baseUrl",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6697,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5145,
											"name": "charset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6698,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5146,
											"name": "checkJs",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6699,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5194,
											"name": "composite",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6747,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5147,
											"name": "declaration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6700,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5150,
											"name": "declarationDir",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6703,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5148,
											"name": "declarationMap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6701,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5151,
											"name": "disableSizeLimit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6704,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5152,
											"name": "disableSourceOfProjectReferenceRedirect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6705,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5153,
											"name": "downlevelIteration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6706,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5154,
											"name": "emitBOM",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6707,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5149,
											"name": "emitDeclarationOnly",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6702,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5155,
											"name": "emitDecoratorMetadata",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6708,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5215,
											"name": "esModuleInterop",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6769,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5156,
											"name": "experimentalDecorators",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6709,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5157,
											"name": "forceConsistentCasingInFileNames",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6710,
													"character": 40
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5158,
											"name": "importHelpers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6711,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5159,
											"name": "inlineSourceMap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6712,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5160,
											"name": "inlineSources",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6713,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5161,
											"name": "isolatedModules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6714,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5162,
											"name": "jsx",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6715,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 5107,
												"name": "JsxEmit"
											}
										},
										{
											"id": 5193,
											"name": "jsxFactory",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6746,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5163,
											"name": "keyofStringsOnly",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6716,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5164,
											"name": "lib",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6717,
													"character": 11
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5165,
											"name": "locale",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6718,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5166,
											"name": "mapRoot",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6719,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5167,
											"name": "maxNodeModuleJsDepth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6720,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 5168,
											"name": "module",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6721,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"id": 5099,
												"name": "ModuleKind"
											}
										},
										{
											"id": 5169,
											"name": "moduleResolution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6722,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 5129,
												"name": "ModuleResolutionKind"
											}
										},
										{
											"id": 5170,
											"name": "newLine",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6723,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"id": 5114,
												"name": "NewLineKind"
											}
										},
										{
											"id": 5171,
											"name": "noEmit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6724,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5172,
											"name": "noEmitHelpers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6725,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5173,
											"name": "noEmitOnError",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6726,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5174,
											"name": "noErrorTruncation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6727,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5175,
											"name": "noFallthroughCasesInSwitch",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6728,
													"character": 34
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5176,
											"name": "noImplicitAny",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6729,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5177,
											"name": "noImplicitReturns",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6730,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5178,
											"name": "noImplicitThis",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6731,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5182,
											"name": "noImplicitUseStrict",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6735,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5183,
											"name": "noLib",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6736,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5184,
											"name": "noResolve",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6737,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5179,
											"name": "noStrictGenericChecks",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6732,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5180,
											"name": "noUnusedLocals",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6733,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5181,
											"name": "noUnusedParameters",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6734,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5185,
											"name": "out",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6738,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5186,
											"name": "outDir",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6739,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5187,
											"name": "outFile",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6740,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5188,
											"name": "paths",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6741,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"id": 5132,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "MapLike"
											}
										},
										{
											"id": 5189,
											"name": "preserveConstEnums",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6742,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5190,
											"name": "preserveSymlinks",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6743,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5191,
											"name": "project",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6744,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5192,
											"name": "reactNamespace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6745,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5195,
											"name": "removeComments",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6748,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5212,
											"name": "resolveJsonModule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6765,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5196,
											"name": "rootDir",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6749,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5197,
											"name": "rootDirs",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6750,
													"character": 16
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5199,
											"name": "skipDefaultLibCheck",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6752,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5198,
											"name": "skipLibCheck",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6751,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5200,
											"name": "sourceMap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6753,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5201,
											"name": "sourceRoot",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6754,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5202,
											"name": "strict",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6755,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5204,
											"name": "strictBindCallApply",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6757,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5203,
											"name": "strictFunctionTypes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6756,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5205,
											"name": "strictNullChecks",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6758,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5206,
											"name": "strictPropertyInitialization",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6759,
													"character": 36
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5207,
											"name": "stripInternal",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6760,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5208,
											"name": "suppressExcessPropertyErrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6761,
													"character": 36
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5209,
											"name": "suppressImplicitAnyIndexErrors",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6762,
													"character": 38
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5210,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6763,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"id": 5117,
												"name": "ScriptTarget"
											}
										},
										{
											"id": 5211,
											"name": "traceResolution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6764,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5214,
											"name": "typeRoots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Paths used to compute primary types search locations"
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6768,
													"character": 17
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5213,
											"name": "types",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6766,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 5216,
											"name": "useDefineForClassFields",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6770,
													"character": 31
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5138,
												5139,
												5140,
												5141,
												5142,
												5143,
												5144,
												5145,
												5146,
												5194,
												5147,
												5150,
												5148,
												5151,
												5152,
												5153,
												5154,
												5149,
												5155,
												5215,
												5156,
												5157,
												5158,
												5159,
												5160,
												5161,
												5162,
												5193,
												5163,
												5164,
												5165,
												5166,
												5167,
												5168,
												5169,
												5170,
												5171,
												5172,
												5173,
												5174,
												5175,
												5176,
												5177,
												5178,
												5182,
												5183,
												5184,
												5179,
												5180,
												5181,
												5185,
												5186,
												5187,
												5188,
												5189,
												5190,
												5191,
												5192,
												5195,
												5212,
												5196,
												5197,
												5199,
												5198,
												5200,
												5201,
												5202,
												5204,
												5203,
												5205,
												5206,
												5207,
												5208,
												5209,
												5210,
												5211,
												5214,
												5213,
												5216
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6690,
											"character": 29
										}
									],
									"indexSignature": {
										"id": 5217,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5218,
												"name": "option",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 5136,
													"name": "CompilerOptionsValue"
												},
												{
													"type": "intrinsic",
													"name": "undefined"
												}
											]
										}
									}
								},
								{
									"id": 5237,
									"name": "Diagnostic",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5242,
											"name": "category",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Diagnostic category: warning = 0, error = 1, suggestion = 2, message = 3"
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6809,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": 0
													},
													{
														"type": "literal",
														"value": 2
													},
													{
														"type": "literal",
														"value": 3
													},
													{
														"type": "literal",
														"value": 1
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5249,
												"name": "DiagnosticRelatedInformation.category"
											}
										},
										{
											"id": 5243,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6810,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5250,
												"name": "DiagnosticRelatedInformation.code"
											}
										},
										{
											"id": 5244,
											"name": "file",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "TypeScriptWorker removes this to avoid serializing circular JSON structures."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6812,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5251,
												"name": "DiagnosticRelatedInformation.file"
											}
										},
										{
											"id": 5246,
											"name": "length",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6814,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5253,
												"name": "DiagnosticRelatedInformation.length"
											}
										},
										{
											"id": 5247,
											"name": "messageText",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6815,
													"character": 19
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 5232,
														"name": "DiagnosticMessageChain"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5254,
												"name": "DiagnosticRelatedInformation.messageText"
											}
										},
										{
											"id": 5241,
											"name": "relatedInformation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6805,
													"character": 26
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 5248,
													"name": "DiagnosticRelatedInformation"
												}
											}
										},
										{
											"id": 5238,
											"name": "reportsUnnecessary",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "May store more in future. For now, this will simply be `true` to indicate when a diagnostic is an unused-identifier diagnostic."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6803,
													"character": 26
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5239,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										},
										{
											"id": 5240,
											"name": "source",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6804,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5245,
											"name": "start",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6813,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5252,
												"name": "DiagnosticRelatedInformation.start"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5242,
												5243,
												5244,
												5246,
												5247,
												5241,
												5238,
												5240,
												5245
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6801,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"id": 5248,
											"name": "DiagnosticRelatedInformation"
										}
									]
								},
								{
									"id": 5232,
									"name": "DiagnosticMessageChain",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"comment": {
										"shortText": "A linked list of formatted diagnostic messages to be used as part of a multiline message.\nIt is built from the bottom up, leaving the head to be the \"main\" diagnostic."
									},
									"children": [
										{
											"id": 5234,
											"name": "category",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Diagnostic category: warning = 0, error = 1, suggestion = 2, message = 3"
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6797,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": 0
													},
													{
														"type": "literal",
														"value": 2
													},
													{
														"type": "literal",
														"value": 3
													},
													{
														"type": "literal",
														"value": 1
													}
												]
											}
										},
										{
											"id": 5235,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6798,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 5233,
											"name": "messageText",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6795,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5236,
											"name": "next",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6799,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 5232,
													"name": "DiagnosticMessageChain"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5234,
												5235,
												5233,
												5236
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6794,
											"character": 36
										}
									]
								},
								{
									"id": 5248,
									"name": "DiagnosticRelatedInformation",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5249,
											"name": "category",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Diagnostic category: warning = 0, error = 1, suggestion = 2, message = 3"
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6809,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": 0
													},
													{
														"type": "literal",
														"value": 2
													},
													{
														"type": "literal",
														"value": 3
													},
													{
														"type": "literal",
														"value": 1
													}
												]
											}
										},
										{
											"id": 5250,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6810,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 5251,
											"name": "file",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "TypeScriptWorker removes this to avoid serializing circular JSON structures."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6812,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 5253,
											"name": "length",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6814,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 5254,
											"name": "messageText",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6815,
													"character": 19
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 5232,
														"name": "DiagnosticMessageChain"
													}
												]
											}
										},
										{
											"id": 5252,
											"name": "start",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6813,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5249,
												5250,
												5251,
												5253,
												5254,
												5252
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6807,
											"character": 42
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"id": 5237,
											"name": "Diagnostic"
										}
									]
								},
								{
									"id": 5219,
									"name": "DiagnosticsOptions",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5223,
											"name": "diagnosticCodesToIgnore",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6777,
													"character": 31
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 5220,
											"name": "noSemanticValidation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6774,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5222,
											"name": "noSuggestionDiagnostics",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6776,
													"character": 31
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5221,
											"name": "noSyntaxValidation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6775,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5223,
												5220,
												5222,
												5221
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6773,
											"character": 39
										}
									]
								},
								{
									"id": 5255,
									"name": "EmitOutput",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5257,
											"name": "emitSkipped",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6819,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5256,
											"name": "outputFiles",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6818,
													"character": 19
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 5258,
													"name": "OutputFile"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5257,
												5256
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6817,
											"character": 24
										}
									]
								},
								{
									"id": 5226,
									"name": "IExtraLib",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5227,
											"name": "content",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6784,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5228,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6785,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5227,
												5228
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6783,
											"character": 23
										}
									]
								},
								{
									"id": 5229,
									"name": "IExtraLibs",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6787,
											"character": 31
										}
									],
									"indexSignature": {
										"id": 5230,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5231,
												"name": "path",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 5226,
											"name": "IExtraLib"
										}
									}
								},
								{
									"id": 5262,
									"name": "LanguageServiceDefaults",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5263,
											"name": "onDidChange",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"comment": {
												"shortText": "Event fired when compiler options or diagnostics options are changed."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6830,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 19,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "IEvent"
											}
										},
										{
											"id": 5264,
											"name": "onDidExtraLibsChange",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"comment": {
												"shortText": "Event fired when extra libraries registered with the language service change."
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6834,
													"character": 37
												}
											],
											"type": {
												"type": "reference",
												"id": 19,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "IEvent"
											}
										},
										{
											"id": 5265,
											"name": "workerOptions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6835,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"id": 5224,
												"name": "WorkerOptions"
											}
										},
										{
											"id": 5268,
											"name": "addExtraLib",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5269,
													"name": "addExtraLib",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Add an additional source file to the language service. Use this\nfor typescript (definition) files that won't be loaded as editor\ndocuments, like `jquery.d.ts`.",
														"returns": "A disposable which will remove the file from the\nlanguage service upon disposal.\n"
													},
													"parameters": [
														{
															"id": 5270,
															"name": "content",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The file content"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5271,
															"name": "filePath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "An optional file path"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 16,
														"name": "IDisposable"
													}
												}
											]
										},
										{
											"id": 5278,
											"name": "getCompilerOptions",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5279,
													"name": "getCompilerOptions",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get current TypeScript compiler options for the language service."
													},
													"type": {
														"type": "reference",
														"id": 5137,
														"name": "CompilerOptions"
													}
												}
											]
										},
										{
											"id": 5283,
											"name": "getDiagnosticsOptions",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5284,
													"name": "getDiagnosticsOptions",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the current diagnostics options for the language service."
													},
													"type": {
														"type": "reference",
														"id": 5219,
														"name": "DiagnosticsOptions"
													}
												}
											]
										},
										{
											"id": 5297,
											"name": "getEagerModelSync",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5298,
													"name": "getEagerModelSync",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the current setting for whether all existing models should be eagerly sync'd\nto the worker on start or restart."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										},
										{
											"id": 5266,
											"name": "getExtraLibs",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5267,
													"name": "getExtraLibs",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the current extra libs registered with the language service."
													},
													"type": {
														"type": "reference",
														"id": 5229,
														"name": "IExtraLibs"
													}
												}
											]
										},
										{
											"id": 5280,
											"name": "setCompilerOptions",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5281,
													"name": "setCompilerOptions",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Set TypeScript compiler options."
													},
													"parameters": [
														{
															"id": 5282,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5137,
																"name": "CompilerOptions"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5285,
											"name": "setDiagnosticsOptions",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5286,
													"name": "setDiagnosticsOptions",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Configure whether syntactic and/or semantic validation should\nbe performed"
													},
													"parameters": [
														{
															"id": 5287,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5219,
																"name": "DiagnosticsOptions"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5294,
											"name": "setEagerModelSync",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5295,
													"name": "setEagerModelSync",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Configure if all existing models should be eagerly sync'd\nto the worker on start or restart."
													},
													"parameters": [
														{
															"id": 5296,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5272,
											"name": "setExtraLibs",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5273,
													"name": "setExtraLibs",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Remove all existing extra libs and set the additional source\nfiles to the language service. Use this for typescript definition\nfiles that won't be loaded as editor documents, like `jquery.d.ts`."
													},
													"parameters": [
														{
															"id": 5274,
															"name": "libs",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "An array of entries to register.\n"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reflection",
																	"declaration": {
																		"id": 5275,
																		"name": "__type",
																		"kind": 65536,
																		"kindString": "Type literal",
																		"flags": {},
																		"children": [
																			{
																				"id": 5276,
																				"name": "content",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 6859,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			{
																				"id": 5277,
																				"name": "filePath",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {
																					"isOptional": true
																				},
																				"sources": [
																					{
																						"fileName": "monaco.ts",
																						"line": 6860,
																						"character": 24
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"kind": 1024,
																				"children": [
																					5276,
																					5277
																				]
																			}
																		]
																	}
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5291,
											"name": "setMaximumWorkerIdleTime",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5292,
													"name": "setMaximumWorkerIdleTime",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "No-op."
													},
													"parameters": [
														{
															"id": 5293,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5288,
											"name": "setWorkerOptions",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5289,
													"name": "setWorkerOptions",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Configure webworker options"
													},
													"parameters": [
														{
															"id": 5290,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5224,
																"name": "WorkerOptions"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5263,
												5264,
												5265
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5268,
												5278,
												5283,
												5297,
												5266,
												5280,
												5285,
												5294,
												5272,
												5291,
												5288
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6826,
											"character": 44
										}
									]
								},
								{
									"id": 5132,
									"name": "MapLike",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6678,
											"character": 21
										}
									],
									"typeParameter": [
										{
											"id": 5133,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"indexSignature": {
										"id": 5134,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 5135,
												"name": "index",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "T"
										}
									}
								},
								{
									"id": 5258,
									"name": "OutputFile",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5259,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6822,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5261,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6824,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5260,
											"name": "writeByteOrderMark",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6823,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5259,
												5261,
												5260
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6821,
											"character": 24
										}
									]
								},
								{
									"id": 5299,
									"name": "TypeScriptWorker",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5364,
											"name": "findRenameLocations",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5365,
													"name": "findRenameLocations",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get other occurrences which should be updated when renaming the item at the given file and position.",
														"returns": "`Promise<readonly typescript.RenameLocation[] | undefined>`\n"
													},
													"parameters": [
														{
															"id": 5366,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5367,
															"name": "positon",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5368,
															"name": "findInStrings",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 5369,
															"name": "findInComments",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 5370,
															"name": "providePrefixAndSuffixTextForRename",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5379,
											"name": "getCodeFixesAtPosition",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5380,
													"name": "getCodeFixesAtPosition",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get possible code fixes at the given position in the file.",
														"returns": "`Promise<ReadonlyArray<typescript.CodeFixAction>>`\n"
													},
													"parameters": [
														{
															"id": 5381,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5382,
															"name": "start",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5383,
															"name": "end",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5384,
															"name": "errorCodes",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 5385,
															"name": "formatOptions",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "`typescript.FormatCodeOptions`"
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5312,
											"name": "getCompilerOptionsDiagnostics",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5313,
													"name": "getCompilerOptionsDiagnostics",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get diagnostic messages related to the current compiler options."
													},
													"parameters": [
														{
															"id": 5314,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "Not used\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 5237,
																	"name": "Diagnostic"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5319,
											"name": "getCompletionEntryDetails",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5320,
													"name": "getCompletionEntryDetails",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get code completion details for the given file, position, and entry.",
														"returns": "`Promise<typescript.CompletionEntryDetails | undefined>`\n"
													},
													"parameters": [
														{
															"id": 5321,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5322,
															"name": "position",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5323,
															"name": "entry",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5315,
											"name": "getCompletionsAtPosition",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5316,
													"name": "getCompletionsAtPosition",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get code completions for the given file and position.",
														"returns": "`Promise<typescript.CompletionInfo | undefined>`\n"
													},
													"parameters": [
														{
															"id": 5317,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5318,
															"name": "position",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5337,
											"name": "getDefinitionAtPosition",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5338,
													"name": "getDefinitionAtPosition",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the definition of the item at the given position in the file.",
														"returns": "`Promise<ReadonlyArray<typescript.DefinitionInfo> | undefined>`\n"
													},
													"parameters": [
														{
															"id": 5339,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5340,
															"name": "position",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5376,
											"name": "getEmitOutput",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5377,
													"name": "getEmitOutput",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get transpiled output for the given file.",
														"returns": "`typescript.EmitOutput`\n"
													},
													"parameters": [
														{
															"id": 5378,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 5255,
																"name": "EmitOutput"
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5358,
											"name": "getFormattingEditsAfterKeystroke",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5359,
													"name": "getFormattingEditsAfterKeystroke",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get formatting changes which should be applied after the given keystroke.",
														"returns": "`Promise<typescript.TextChange[]>`\n"
													},
													"parameters": [
														{
															"id": 5360,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5361,
															"name": "postion",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5362,
															"name": "ch",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5363,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "`typescript.FormatCodeOptions`"
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5348,
											"name": "getFormattingEditsForDocument",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5349,
													"name": "getFormattingEditsForDocument",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get changes which should be applied to format the given file.",
														"returns": "`Promise<typescript.TextChange[]>`\n"
													},
													"parameters": [
														{
															"id": 5350,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5351,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "`typescript.FormatCodeOptions`"
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5352,
											"name": "getFormattingEditsForRange",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5353,
													"name": "getFormattingEditsForRange",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get changes which should be applied to format the given range in the file.",
														"returns": "`Promise<typescript.TextChange[]>`\n"
													},
													"parameters": [
														{
															"id": 5354,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5355,
															"name": "start",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5356,
															"name": "end",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5357,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "`typescript.FormatCodeOptions`"
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5345,
											"name": "getNavigationBarItems",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5346,
													"name": "getNavigationBarItems",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get outline entries for the item at the given position in the file.",
														"returns": "`Promise<typescript.NavigationBarItem[]>`\n"
													},
													"parameters": [
														{
															"id": 5347,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5333,
											"name": "getOccurrencesAtPosition",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5334,
													"name": "getOccurrencesAtPosition",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get other ranges which are related to the item at the given position in the file (often used for highlighting).",
														"returns": "`Promise<ReadonlyArray<typescript.ReferenceEntry> | undefined>`\n"
													},
													"parameters": [
														{
															"id": 5335,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5336,
															"name": "position",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5329,
											"name": "getQuickInfoAtPosition",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5330,
													"name": "getQuickInfoAtPosition",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get quick info for the item at the given position in the file.",
														"returns": "`Promise<typescript.QuickInfo | undefined>`\n"
													},
													"parameters": [
														{
															"id": 5331,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5332,
															"name": "position",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5341,
											"name": "getReferencesAtPosition",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5342,
													"name": "getReferencesAtPosition",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get references to the item at the given position in the file.",
														"returns": "`Promise<typescript.ReferenceEntry[] | undefined>`\n"
													},
													"parameters": [
														{
															"id": 5343,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5344,
															"name": "position",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5371,
											"name": "getRenameInfo",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5372,
													"name": "getRenameInfo",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get edits which should be applied to rename the item at the given file and position (or a failure reason).",
														"returns": "`Promise<typescript.RenameInfo>`\n"
													},
													"parameters": [
														{
															"id": 5373,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5374,
															"name": "positon",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5375,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "`typescript.RenameInfoOptions`"
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5309,
											"name": "getScriptText",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5310,
													"name": "getScriptText",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get the content of a given file."
													},
													"parameters": [
														{
															"id": 5311,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5303,
											"name": "getSemanticDiagnostics",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5304,
													"name": "getSemanticDiagnostics",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get diagnostic messages for any semantic issues in the given file."
													},
													"parameters": [
														{
															"id": 5305,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 5237,
																	"name": "Diagnostic"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5324,
											"name": "getSignatureHelpItems",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5325,
													"name": "getSignatureHelpItems",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get signature help items for the item at the given file and position.",
														"returns": "`Promise<typescript.SignatureHelpItems | undefined>`\n"
													},
													"parameters": [
														{
															"id": 5326,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 5327,
															"name": "position",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5328,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5306,
											"name": "getSuggestionDiagnostics",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5307,
													"name": "getSuggestionDiagnostics",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get diagnostic messages for any suggestions related to the given file."
													},
													"parameters": [
														{
															"id": 5308,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 5237,
																	"name": "Diagnostic"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										},
										{
											"id": 5300,
											"name": "getSyntacticDiagnostics",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"signatures": [
												{
													"id": 5301,
													"name": "getSyntacticDiagnostics",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get diagnostic messages for any syntax issues in the given file."
													},
													"parameters": [
														{
															"id": 5302,
															"name": "fileName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 5237,
																	"name": "Diagnostic"
																}
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5364,
												5379,
												5312,
												5319,
												5315,
												5337,
												5376,
												5358,
												5348,
												5352,
												5345,
												5333,
												5329,
												5341,
												5371,
												5309,
												5303,
												5324,
												5306,
												5300
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6899,
											"character": 37
										}
									]
								},
								{
									"id": 5224,
									"name": "WorkerOptions",
									"kind": 256,
									"kindString": "Interface",
									"flags": {},
									"children": [
										{
											"id": 5225,
											"name": "customWorkerPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A full HTTP path to a JavaScript file which adds a function `customTSWorkerFactory` to the self inside a web-worker"
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6781,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5225
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6779,
											"character": 34
										}
									]
								},
								{
									"id": 5136,
									"name": "CompilerOptionsValue",
									"kind": 4194304,
									"kindString": "Type alias",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6681,
											"character": 29
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "reference",
												"id": 5132,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "MapLike"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 5388,
									"name": "javascriptDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7040,
											"character": 35
										}
									],
									"type": {
										"type": "reference",
										"id": 5262,
										"name": "LanguageServiceDefaults"
									}
								},
								{
									"id": 5387,
									"name": "typescriptDefaults",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7039,
											"character": 35
										}
									],
									"type": {
										"type": "reference",
										"id": 5262,
										"name": "LanguageServiceDefaults"
									}
								},
								{
									"id": 5386,
									"name": "typescriptVersion",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7038,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5394,
									"name": "getJavaScriptWorker",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7042,
											"character": 36
										}
									],
									"signatures": [
										{
											"id": 5395,
											"name": "getJavaScriptWorker",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5396,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5397,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5398,
																			"name": "uris",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 68,
																					"name": "Uri"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 5299,
																				"name": "TypeScriptWorker"
																			}
																		],
																		"name": "Promise"
																	}
																}
															]
														}
													}
												],
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5389,
									"name": "getTypeScriptWorker",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 7041,
											"character": 36
										}
									],
									"signatures": [
										{
											"id": 5390,
											"name": "getTypeScriptWorker",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5391,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 5392,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5393,
																			"name": "uris",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 68,
																					"name": "Uri"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 5299,
																				"name": "TypeScriptWorker"
																			}
																		],
																		"name": "Promise"
																	}
																}
															]
														}
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumerations",
									"kind": 4,
									"children": [
										5107,
										5099,
										5129,
										5114,
										5117
									]
								},
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										5137,
										5237,
										5232,
										5248,
										5219,
										5255,
										5226,
										5229,
										5262,
										5132,
										5258,
										5299,
										5224
									]
								},
								{
									"title": "Type aliases",
									"kind": 4194304,
									"children": [
										5136
									]
								},
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										5388,
										5387,
										5386
									]
								},
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										5394,
										5389
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6639,
									"character": 45
								}
							]
						},
						{
							"id": 4643,
							"name": "CompletionItemInsertTextRule",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 4645,
									"name": "InsertAsSnippet",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "`insertText` is a snippet."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5621,
											"character": 23
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 4644,
									"name": "KeepWhitespace",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Adjust whitespace/indentation of multiline insert texts to\nmatch the current line indentation."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5617,
											"character": 22
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4645,
										4644
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5612,
									"character": 44
								}
							]
						},
						{
							"id": 4607,
							"name": "CompletionItemKind",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 4613,
									"name": "Class",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5564,
											"character": 13
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 4627,
									"name": "Color",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5578,
											"character": 13
										}
									],
									"defaultValue": "19"
								},
								{
									"id": 4622,
									"name": "Constant",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5573,
											"character": 16
										}
									],
									"defaultValue": "14"
								},
								{
									"id": 4610,
									"name": "Constructor",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5561,
											"character": 19
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 4630,
									"name": "Customcolor",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5581,
											"character": 19
										}
									],
									"defaultValue": "22"
								},
								{
									"id": 4623,
									"name": "Enum",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5574,
											"character": 12
										}
									],
									"defaultValue": "15"
								},
								{
									"id": 4624,
									"name": "EnumMember",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5575,
											"character": 18
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 4618,
									"name": "Event",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5569,
											"character": 13
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 4611,
									"name": "Field",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5562,
											"character": 13
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 4628,
									"name": "File",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5579,
											"character": 12
										}
									],
									"defaultValue": "20"
								},
								{
									"id": 4631,
									"name": "Folder",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5582,
											"character": 14
										}
									],
									"defaultValue": "23"
								},
								{
									"id": 4609,
									"name": "Function",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5560,
											"character": 16
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 4615,
									"name": "Interface",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5566,
											"character": 17
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 4634,
									"name": "Issue",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5585,
											"character": 13
										}
									],
									"defaultValue": "26"
								},
								{
									"id": 4625,
									"name": "Keyword",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5576,
											"character": 15
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 4608,
									"name": "Method",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5559,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 4616,
									"name": "Module",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5567,
											"character": 14
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 4619,
									"name": "Operator",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5570,
											"character": 16
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 4617,
									"name": "Property",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5568,
											"character": 16
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 4629,
									"name": "Reference",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5580,
											"character": 17
										}
									],
									"defaultValue": "21"
								},
								{
									"id": 4635,
									"name": "Snippet",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5586,
											"character": 15
										}
									],
									"defaultValue": "27"
								},
								{
									"id": 4614,
									"name": "Struct",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5565,
											"character": 14
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 4626,
									"name": "Text",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5577,
											"character": 12
										}
									],
									"defaultValue": "18"
								},
								{
									"id": 4632,
									"name": "TypeParameter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5583,
											"character": 21
										}
									],
									"defaultValue": "24"
								},
								{
									"id": 4620,
									"name": "Unit",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5571,
											"character": 12
										}
									],
									"defaultValue": "12"
								},
								{
									"id": 4633,
									"name": "User",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5584,
											"character": 12
										}
									],
									"defaultValue": "25"
								},
								{
									"id": 4621,
									"name": "Value",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5572,
											"character": 13
										}
									],
									"defaultValue": "13"
								},
								{
									"id": 4612,
									"name": "Variable",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5563,
											"character": 16
										}
									],
									"defaultValue": "4"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4613,
										4627,
										4622,
										4610,
										4630,
										4623,
										4624,
										4618,
										4611,
										4628,
										4631,
										4609,
										4615,
										4634,
										4625,
										4608,
										4616,
										4619,
										4617,
										4629,
										4635,
										4614,
										4626,
										4632,
										4620,
										4633,
										4621,
										4612
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5558,
									"character": 34
								}
							]
						},
						{
							"id": 4641,
							"name": "CompletionItemTag",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 4642,
									"name": "Deprecated",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5609,
											"character": 18
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4642
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5608,
									"character": 33
								}
							]
						},
						{
							"id": 4669,
							"name": "CompletionTriggerKind",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "How a suggest provider was triggered."
							},
							"children": [
								{
									"id": 4670,
									"name": "Invoke",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5724,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 4671,
									"name": "TriggerCharacter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5725,
											"character": 24
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 4672,
									"name": "TriggerForIncompleteCompletions",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5726,
											"character": 39
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4670,
										4671,
										4672
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5723,
									"character": 37
								}
							]
						},
						{
							"id": 4734,
							"name": "DocumentHighlightKind",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "A document highlight kind."
							},
							"children": [
								{
									"id": 4736,
									"name": "Read",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Read-access of a symbol, like reading a variable."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5892,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 4735,
									"name": "Text",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "A textual occurrence."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5888,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 4737,
									"name": "Write",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Write-access of a symbol, like writing to a variable."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5896,
											"character": 13
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4736,
										4735,
										4737
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5884,
									"character": 37
								}
							]
						},
						{
							"id": 4581,
							"name": "IndentAction",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "Describes what to do with the indentation when pressing Enter."
							},
							"children": [
								{
									"id": 4583,
									"name": "Indent",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Insert new line and indent once (relative to the previous line's indentation)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5479,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 4584,
									"name": "IndentOutdent",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Insert two new lines:\n - the first one indented which will hold the cursor\n - the second one at the same indentation level"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5485,
											"character": 21
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 4582,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Insert new line and copy the previous line's indentation."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5475,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 4585,
									"name": "Outdent",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"comment": {
										"shortText": "Insert new line and outdent once (relative to the previous line's indentation)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5489,
											"character": 15
										}
									],
									"defaultValue": "3"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4583,
										4584,
										4582,
										4585
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5471,
									"character": 28
								}
							]
						},
						{
							"id": 4716,
							"name": "SignatureHelpTriggerKind",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 4719,
									"name": "ContentChange",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5858,
											"character": 21
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 4717,
									"name": "Invoke",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5856,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 4718,
									"name": "TriggerCharacter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5857,
											"character": 24
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4719,
										4717,
										4718
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5855,
									"character": 40
								}
							]
						},
						{
							"id": 4798,
							"name": "SymbolKind",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"comment": {
								"shortText": "A symbol kind."
							},
							"children": [
								{
									"id": 4816,
									"name": "Array",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6080,
											"character": 13
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 4815,
									"name": "Boolean",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6079,
											"character": 15
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 4803,
									"name": "Class",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6067,
											"character": 13
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 4812,
									"name": "Constant",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6076,
											"character": 16
										}
									],
									"defaultValue": "13"
								},
								{
									"id": 4807,
									"name": "Constructor",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6071,
											"character": 19
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 4808,
									"name": "Enum",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6072,
											"character": 12
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 4820,
									"name": "EnumMember",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6084,
											"character": 18
										}
									],
									"defaultValue": "21"
								},
								{
									"id": 4822,
									"name": "Event",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6086,
											"character": 13
										}
									],
									"defaultValue": "23"
								},
								{
									"id": 4806,
									"name": "Field",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6070,
											"character": 13
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 4799,
									"name": "File",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6063,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 4810,
									"name": "Function",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6074,
											"character": 16
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 4809,
									"name": "Interface",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6073,
											"character": 17
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 4818,
									"name": "Key",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6082,
											"character": 11
										}
									],
									"defaultValue": "19"
								},
								{
									"id": 4804,
									"name": "Method",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6068,
											"character": 14
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 4800,
									"name": "Module",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6064,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 4801,
									"name": "Namespace",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6065,
											"character": 17
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 4819,
									"name": "Null",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6083,
											"character": 12
										}
									],
									"defaultValue": "20"
								},
								{
									"id": 4814,
									"name": "Number",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6078,
											"character": 14
										}
									],
									"defaultValue": "15"
								},
								{
									"id": 4817,
									"name": "Object",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6081,
											"character": 14
										}
									],
									"defaultValue": "18"
								},
								{
									"id": 4823,
									"name": "Operator",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6087,
											"character": 16
										}
									],
									"defaultValue": "24"
								},
								{
									"id": 4802,
									"name": "Package",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6066,
											"character": 15
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 4805,
									"name": "Property",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6069,
											"character": 16
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 4813,
									"name": "String",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6077,
											"character": 14
										}
									],
									"defaultValue": "14"
								},
								{
									"id": 4821,
									"name": "Struct",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6085,
											"character": 14
										}
									],
									"defaultValue": "22"
								},
								{
									"id": 4824,
									"name": "TypeParameter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6088,
											"character": 21
										}
									],
									"defaultValue": "25"
								},
								{
									"id": 4811,
									"name": "Variable",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6075,
											"character": 16
										}
									],
									"defaultValue": "12"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4816,
										4815,
										4803,
										4812,
										4807,
										4808,
										4820,
										4822,
										4806,
										4799,
										4810,
										4809,
										4818,
										4804,
										4800,
										4801,
										4819,
										4814,
										4817,
										4823,
										4802,
										4805,
										4813,
										4821,
										4824,
										4811
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6062,
									"character": 26
								}
							]
						},
						{
							"id": 4825,
							"name": "SymbolTag",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 4826,
									"name": "Deprecated",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6092,
											"character": 18
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										4826
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6091,
									"character": 25
								}
							]
						},
						{
							"id": 4934,
							"name": "FoldingRangeKind",
							"kind": 128,
							"kindString": "Class",
							"flags": {},
							"children": [
								{
									"id": 4938,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 4939,
											"name": "new FoldingRangeKind",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"comment": {
												"shortText": "Creates a new [FoldingRangeKind](#FoldingRangeKind)."
											},
											"parameters": [
												{
													"id": 4940,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "of the kind.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4934,
												"name": "FoldingRangeKind"
											}
										}
									]
								},
								{
									"id": 4941,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6323,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4935,
									"name": "Comment",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isReadonly": true
									},
									"comment": {
										"shortText": "Kind for folding range representing a comment. The value of the kind is 'comment'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6327,
											"character": 31
										}
									],
									"type": {
										"type": "reference",
										"id": 4934,
										"name": "FoldingRangeKind"
									}
								},
								{
									"id": 4936,
									"name": "Imports",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isReadonly": true
									},
									"comment": {
										"shortText": "Kind for folding range representing a import. The value of the kind is 'imports'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6331,
											"character": 31
										}
									],
									"type": {
										"type": "reference",
										"id": 4934,
										"name": "FoldingRangeKind"
									}
								},
								{
									"id": 4937,
									"name": "Region",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isReadonly": true
									},
									"comment": {
										"shortText": "Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\nThe value of the kind is 'region'."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6336,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"id": 4934,
										"name": "FoldingRangeKind"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										4938
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4941,
										4935,
										4936,
										4937
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6322,
									"character": 33
								}
							]
						},
						{
							"id": 4688,
							"name": "CodeAction",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4690,
									"name": "command",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5774,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 4984,
										"name": "Command"
									}
								},
								{
									"id": 4692,
									"name": "diagnostics",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5776,
											"character": 19
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1872,
											"name": "IMarkerData"
										}
									}
								},
								{
									"id": 4695,
									"name": "disabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5779,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4691,
									"name": "edit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5775,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 4965,
										"name": "WorkspaceEdit"
									}
								},
								{
									"id": 4694,
									"name": "isPreferred",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5778,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4693,
									"name": "kind",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5777,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4689,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5773,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4690,
										4692,
										4695,
										4691,
										4694,
										4693,
										4689
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5772,
									"character": 31
								}
							]
						},
						{
							"id": 4528,
							"name": "CodeActionContext",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Contains additional diagnostic information about the context in which\na [code action](#CodeActionProvider.provideCodeActions) is run."
							},
							"children": [
								{
									"id": 4529,
									"name": "markers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "An array of diagnostics."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5274,
											"character": 24
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1872,
											"name": "IMarkerData"
										}
									}
								},
								{
									"id": 4530,
									"name": "only",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"comment": {
										"shortText": "Requested kind of actions to return."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5278,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4529,
										4530
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5270,
									"character": 38
								}
							]
						},
						{
							"id": 4696,
							"name": "CodeActionList",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4697,
									"name": "actions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5783,
											"character": 24
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 4688,
												"name": "CodeAction"
											}
										}
									}
								},
								{
									"id": 4698,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4699,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 18,
												"name": "IDisposable.dispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 17,
										"name": "IDisposable.dispose"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4697
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4698
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5782,
									"character": 35
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 16,
									"name": "IDisposable"
								}
							]
						},
						{
							"id": 4531,
							"name": "CodeActionProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The code action interface defines the contract between extensions and\nthe [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature."
							},
							"children": [
								{
									"id": 4532,
									"name": "provideCodeActions",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4533,
											"name": "provideCodeActions",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide commands for the given document and range."
											},
											"parameters": [
												{
													"id": 4534,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4535,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												},
												{
													"id": 4536,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4528,
														"name": "CodeActionContext"
													}
												},
												{
													"id": 4537,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4696,
														"name": "CodeActionList"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4532
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5285,
									"character": 39
								}
							]
						},
						{
							"id": 4989,
							"name": "CodeLens",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4992,
									"name": "command",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6404,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 4984,
										"name": "Command"
									}
								},
								{
									"id": 4991,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6403,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4990,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6402,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4992,
										4991,
										4990
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6401,
									"character": 29
								}
							]
						},
						{
							"id": 4993,
							"name": "CodeLensList",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4994,
									"name": "lenses",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6408,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4989,
											"name": "CodeLens"
										}
									}
								},
								{
									"id": 4995,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4996,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4994
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4995
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6407,
									"character": 33
								}
							]
						},
						{
							"id": 4997,
							"name": "CodeLensProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4998,
									"name": "onDidChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6413,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 19,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4997,
												"name": "CodeLensProvider"
											}
										],
										"name": "IEvent"
									}
								},
								{
									"id": 4999,
									"name": "provideCodeLenses",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5000,
											"name": "provideCodeLenses",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5001,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 5002,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4993,
														"name": "CodeLensList"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								},
								{
									"id": 5003,
									"name": "resolveCodeLens",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5004,
											"name": "resolveCodeLens",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5005,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 5006,
													"name": "codeLens",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4989,
														"name": "CodeLens"
													}
												},
												{
													"id": 5007,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4989,
														"name": "CodeLens"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4998
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4999,
										5003
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6412,
									"character": 37
								}
							]
						},
						{
							"id": 4984,
							"name": "Command",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4988,
									"name": "arguments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6398,
											"character": 17
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 4985,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6395,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4986,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6396,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4987,
									"name": "tooltip",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6397,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4988,
										4985,
										4986,
										4987
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6394,
									"character": 28
								}
							]
						},
						{
							"id": 4538,
							"name": "CommentRule",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Describes how comments for a language work."
							},
							"children": [
								{
									"id": 4540,
									"name": "blockComment",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The block comment character pair, like `/* block comment *&#47;`"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5303,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 4573,
										"name": "CharacterPair"
									}
								},
								{
									"id": 4539,
									"name": "lineComment",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The line comment token, like `// this is a comment`"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5299,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4540,
										4539
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5295,
									"character": 32
								}
							]
						},
						{
							"id": 4673,
							"name": "CompletionContext",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Contains additional information about the context in which\n[completion provider](#CompletionItemProvider.provideCompletionItems) is triggered."
							},
							"children": [
								{
									"id": 4675,
									"name": "triggerCharacter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Character that triggered the completion item provider.",
										"text": "`undefined` if provider was not triggered by a character.\n"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5743,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4674,
									"name": "triggerKind",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "How the completion was triggered."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5737,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 4669,
										"name": "CompletionTriggerKind"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4675,
										4674
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5733,
									"character": 38
								}
							]
						},
						{
							"id": 4646,
							"name": "CompletionItem",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A completion item represents a text snippet that is\nproposed to complete text that is being typed."
							},
							"children": [
								{
									"id": 4662,
									"name": "additionalTextEdits",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An optional array of additional text edits that are applied when\nselecting this completion. Edits must not overlap with the main edit\nnor with themselves."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5707,
											"character": 27
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1963,
											"name": "ISingleEditOperation"
										}
									}
								},
								{
									"id": 4663,
									"name": "command",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A command that should be run upon acceptance of this item."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5711,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 4984,
										"name": "Command"
									}
								},
								{
									"id": 4661,
									"name": "commitCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An optional set of characters that when pressed while this completion is active will accept it first and\nthen type that character. *Note* that all commit characters should have `length=1` and that superfluous\ncharacters will be ignored."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5701,
											"character": 24
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4650,
									"name": "detail",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A human-readable string with additional information\nabout this item, like type or symbol information."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5649,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4651,
									"name": "documentation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A human-readable string that represents a doc-comment."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5653,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 255,
												"name": "IMarkdownString"
											}
										]
									}
								},
								{
									"id": 4653,
									"name": "filterText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A string that should be used when filtering a set of\ncompletion items. When `falsy` the [label](#CompletionItem.label)\nis used."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5665,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4655,
									"name": "insertText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "A string or snippet that should be inserted in a document when selecting\nthis completion.\nis used."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5677,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4656,
									"name": "insertTextRules",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Addition rules (as bitmask) that should be applied when inserting\nthis completion."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5682,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"id": 4643,
										"name": "CompletionItemInsertTextRule"
									}
								},
								{
									"id": 4648,
									"name": "kind",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The kind of this completion item. Based on the kind\nan icon is chosen by the editor."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5639,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 4607,
										"name": "CompletionItemKind"
									}
								},
								{
									"id": 4647,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The label of this completion item. By default\nthis is also the text that is inserted when selecting\nthis completion."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5634,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4636,
												"name": "CompletionItemLabel"
											}
										]
									}
								},
								{
									"id": 4654,
									"name": "preselect",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Select this item when showing. *Note* that only one completion item can be selected and\nthat the editor decides which item that is. The rule is that the *first* item of those\nthat match best is selected."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5671,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4657,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "A range of text that should be replaced by this completion item.",
										"text": "Defaults to a range from the start of the [current word](#TextDocument.getWordRangeAtPosition) to the\ncurrent position.\n\n*Note:* The range must be a [single line](#Range.isSingleLine) and it must\n[contain](#Range.contains) the position at which completion has been [requested](#CompletionItemProvider.provideCompletionItems).\n"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5692,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 361,
												"name": "IRange"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4658,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4659,
															"name": "insert",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 5693,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"id": 361,
																"name": "IRange"
															}
														},
														{
															"id": 4660,
															"name": "replace",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 5694,
																	"character": 19
																}
															],
															"type": {
																"type": "reference",
																"id": 361,
																"name": "IRange"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																4659,
																4660
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 4652,
									"name": "sortText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A string that should be used when comparing this item\nwith other items. When `falsy` the [label](#CompletionItem.label)\nis used."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5659,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4649,
									"name": "tags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A modifier to the `kind` which affect how the item\nis rendered, e.g. Deprecated is rendered with a strikeout"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5644,
											"character": 12
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 4642,
												"name": "Deprecated"
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4662,
										4663,
										4661,
										4650,
										4651,
										4653,
										4655,
										4656,
										4648,
										4647,
										4654,
										4657,
										4652,
										4649
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5628,
									"character": 35
								}
							]
						},
						{
							"id": 4636,
							"name": "CompletionItemLabel",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4637,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The function or variable. Rendered leftmost."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5593,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4638,
									"name": "parameters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The parameters without the return type. Render after `name`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5597,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4639,
									"name": "qualifier",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The fully qualified name, like package name or file path. Rendered after `signature`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5601,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4640,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The return-type of a function or type of a property/variable. Rendered rightmost."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5605,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4637,
										4638,
										4639,
										4640
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5589,
									"character": 40
								}
							]
						},
						{
							"id": 4676,
							"name": "CompletionItemProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The completion item provider interface defines the contract between extensions and\nthe [IntelliSense](https://code.visualstudio.com/docs/editor/intellisense).",
								"text": "When computing *complete* completion items is expensive, providers can optionally implement\nthe `resolveCompletionItem`-function. In that case it is enough to return completion\nitems with a [label](#CompletionItem.label) from the\n[provideCompletionItems](#CompletionItemProvider.provideCompletionItems)-function. Subsequently,\nwhen a completion item is shown in the UI and gains focus this provider is asked to resolve\nthe item, like adding [doc-comment](#CompletionItem.documentation) or [details](#CompletionItem.detail).\n"
							},
							"children": [
								{
									"id": 4677,
									"name": "triggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5758,
											"character": 25
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4678,
									"name": "provideCompletionItems",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4679,
											"name": "provideCompletionItems",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide completion items for the given position and document."
											},
											"parameters": [
												{
													"id": 4680,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4681,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4682,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4673,
														"name": "CompletionContext"
													}
												},
												{
													"id": 4683,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4664,
														"name": "CompletionList"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								},
								{
									"id": 4684,
									"name": "resolveCompletionItem",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4685,
											"name": "resolveCompletionItem",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Given a completion item fill in more data, like [doc-comment](#CompletionItem.documentation)\nor [details](#CompletionItem.detail).",
												"text": "The editor will only resolve a completion item once.\n"
											},
											"parameters": [
												{
													"id": 4686,
													"name": "item",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4646,
														"name": "CompletionItem"
													}
												},
												{
													"id": 4687,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4646,
														"name": "CompletionItem"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4677
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4678,
										4684
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5757,
									"character": 43
								}
							]
						},
						{
							"id": 4664,
							"name": "CompletionList",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4666,
									"name": "incomplete",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5716,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4665,
									"name": "suggestions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5715,
											"character": 19
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4646,
											"name": "CompletionItem"
										}
									}
								},
								{
									"id": 4667,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4668,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4666,
										4665
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4667
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5714,
									"character": 35
								}
							]
						},
						{
							"id": 4780,
							"name": "DeclarationProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The definition provider interface defines the contract between extensions and\nthe [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\nand peek definition features."
							},
							"children": [
								{
									"id": 4781,
									"name": "provideDeclaration",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4782,
											"name": "provideDeclaration",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide the declaration of the symbol at the given position and document."
											},
											"parameters": [
												{
													"id": 4783,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4784,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4785,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4773,
														"name": "Definition"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4781
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6030,
									"character": 40
								}
							]
						},
						{
							"id": 4774,
							"name": "DefinitionProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The definition provider interface defines the contract between extensions and\nthe [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\nand peek definition features."
							},
							"children": [
								{
									"id": 4775,
									"name": "provideDefinition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4776,
											"name": "provideDefinition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide the definition of the symbol at the given position and document."
											},
											"parameters": [
												{
													"id": 4777,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4778,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4779,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4773,
														"name": "Definition"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4775
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6018,
									"character": 39
								}
							]
						},
						{
							"id": 4904,
							"name": "DocumentColorProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A provider of colors for editor models."
							},
							"children": [
								{
									"id": 4909,
									"name": "provideColorPresentations",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4910,
											"name": "provideColorPresentations",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide the string representations for a color."
											},
											"parameters": [
												{
													"id": 4911,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4912,
													"name": "colorInfo",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4901,
														"name": "IColorInformation"
													}
												},
												{
													"id": 4913,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4897,
															"name": "IColorPresentation"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								},
								{
									"id": 4905,
									"name": "provideDocumentColors",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4906,
											"name": "provideDocumentColors",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provides the color ranges for a specific model."
											},
											"parameters": [
												{
													"id": 4907,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4908,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4901,
															"name": "IColorInformation"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4909,
										4905
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6265,
									"character": 42
								}
							]
						},
						{
							"id": 4850,
							"name": "DocumentFormattingEditProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The document formatting provider interface defines the contract between extensions and\nthe formatting-feature."
							},
							"children": [
								{
									"id": 4851,
									"name": "displayName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6143,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4852,
									"name": "provideDocumentFormattingEdits",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4853,
											"name": "provideDocumentFormattingEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide formatting edits for a whole document."
											},
											"parameters": [
												{
													"id": 4854,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4855,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4847,
														"name": "FormattingOptions"
													}
												},
												{
													"id": 4856,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4842,
															"name": "TextEdit"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4851
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4852
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6142,
									"character": 51
								}
							]
						},
						{
							"id": 4738,
							"name": "DocumentHighlight",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A document highlight is a range inside a text document which deserves\nspecial attention. Usually a document highlight is visualized by changing\nthe background color of its range."
							},
							"children": [
								{
									"id": 4740,
									"name": "kind",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The highlight kind, default is [text](#DocumentHighlightKind.Text)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5912,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 4734,
										"name": "DocumentHighlightKind"
									}
								},
								{
									"id": 4739,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The range this highlight applies to."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5908,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4740,
										4739
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5904,
									"character": 38
								}
							]
						},
						{
							"id": 4741,
							"name": "DocumentHighlightProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The document highlight provider interface defines the contract between extensions and\nthe word-highlight-feature."
							},
							"children": [
								{
									"id": 4742,
									"name": "provideDocumentHighlights",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4743,
											"name": "provideDocumentHighlights",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide a set of document highlights, like all occurrences of a variable or\nall exit-points of a function."
											},
											"parameters": [
												{
													"id": 4744,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4745,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4746,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4738,
															"name": "DocumentHighlight"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4742
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5919,
									"character": 46
								}
							]
						},
						{
							"id": 4857,
							"name": "DocumentRangeFormattingEditProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The document formatting provider interface defines the contract between extensions and\nthe formatting-feature."
							},
							"children": [
								{
									"id": 4858,
									"name": "displayName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6155,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4859,
									"name": "provideDocumentRangeFormattingEdits",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4860,
											"name": "provideDocumentRangeFormattingEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide formatting edits for a range in a document.",
												"text": "The given range is a hint and providers can decide to format a smaller\nor larger range. Often this is done by adjusting the start and end\nof the range to full syntax nodes.\n"
											},
											"parameters": [
												{
													"id": 4861,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4862,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												},
												{
													"id": 4863,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4847,
														"name": "FormattingOptions"
													}
												},
												{
													"id": 4864,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4842,
															"name": "TextEdit"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4858
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4859
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6154,
									"character": 56
								}
							]
						},
						{
							"id": 5046,
							"name": "DocumentRangeSemanticTokensProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5047,
									"name": "getLegend",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5048,
											"name": "getLegend",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5021,
												"name": "SemanticTokensLegend"
											}
										}
									]
								},
								{
									"id": 5049,
									"name": "provideDocumentRangeSemanticTokens",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5050,
											"name": "provideDocumentRangeSemanticTokens",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5051,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 5052,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												},
												{
													"id": 5053,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5024,
														"name": "SemanticTokens"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5047,
										5049
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6459,
									"character": 56
								}
							]
						},
						{
							"id": 5034,
							"name": "DocumentSemanticTokensProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5035,
									"name": "onDidChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6453,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 19,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "IEvent"
									}
								},
								{
									"id": 5036,
									"name": "getLegend",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5037,
											"name": "getLegend",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5021,
												"name": "SemanticTokensLegend"
											}
										}
									]
								},
								{
									"id": 5038,
									"name": "provideDocumentSemanticTokens",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5039,
											"name": "provideDocumentSemanticTokens",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5040,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 5041,
													"name": "lastResultId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5042,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 5024,
																"name": "SemanticTokens"
															},
															{
																"type": "reference",
																"id": 5031,
																"name": "SemanticTokensEdits"
															}
														]
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								},
								{
									"id": 5043,
									"name": "releaseDocumentSemanticTokens",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5044,
											"name": "releaseDocumentSemanticTokens",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5045,
													"name": "resultId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5035
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5036,
										5038,
										5043
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6452,
									"character": 51
								}
							]
						},
						{
							"id": 4827,
							"name": "DocumentSymbol",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4835,
									"name": "children",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6103,
											"character": 16
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4827,
											"name": "DocumentSymbol"
										}
									}
								},
								{
									"id": 4832,
									"name": "containerName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6100,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4829,
									"name": "detail",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6097,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4830,
									"name": "kind",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6098,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 4798,
										"name": "SymbolKind"
									}
								},
								{
									"id": 4828,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6096,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4833,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6101,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 4834,
									"name": "selectionRange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6102,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 4831,
									"name": "tags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6099,
											"character": 12
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 4826,
												"name": "Deprecated"
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4835,
										4832,
										4829,
										4830,
										4828,
										4833,
										4834,
										4831
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6095,
									"character": 35
								}
							]
						},
						{
							"id": 4836,
							"name": "DocumentSymbolProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The document symbol provider interface defines the contract between extensions and\nthe [go to symbol](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-symbol)-feature."
							},
							"children": [
								{
									"id": 4837,
									"name": "displayName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6111,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4838,
									"name": "provideDocumentSymbols",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4839,
											"name": "provideDocumentSymbols",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide symbol information for the given document."
											},
											"parameters": [
												{
													"id": 4840,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4841,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4827,
															"name": "DocumentSymbol"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4837
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4838
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6110,
									"character": 43
								}
							]
						},
						{
							"id": 4517,
							"name": "EncodedTokensProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A \"manual\" provider of tokens, returning tokens in a binary form."
							},
							"children": [
								{
									"id": 4518,
									"name": "getInitialState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4519,
											"name": "getInitialState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "The initial state of a language. Will be the state passed in to tokenize the first line."
											},
											"type": {
												"type": "reference",
												"id": 4590,
												"name": "IState"
											}
										}
									]
								},
								{
									"id": 4524,
									"name": "tokenize",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4525,
											"name": "tokenize",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Tokenize a line given the state at the beginning of the line."
											},
											"parameters": [
												{
													"id": 4526,
													"name": "line",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4527,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4590,
														"name": "IState"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4504,
												"name": "ILineTokens"
											}
										}
									]
								},
								{
									"id": 4520,
									"name": "tokenizeEncoded",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4521,
											"name": "tokenizeEncoded",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Tokenize a line given the state at the beginning of the line."
											},
											"parameters": [
												{
													"id": 4522,
													"name": "line",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4523,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4590,
														"name": "IState"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4507,
												"name": "IEncodedLineTokens"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4518,
										4524,
										4520
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5120,
									"character": 42
								}
							]
						},
						{
							"id": 4586,
							"name": "EnterAction",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Describes what to do when pressing Enter."
							},
							"children": [
								{
									"id": 4588,
									"name": "appendText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Describes text to be appended after the new line and after the indentation."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5503,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4587,
									"name": "indentAction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Describe what to do with the indentation."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5499,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 4581,
										"name": "IndentAction"
									}
								},
								{
									"id": 4589,
									"name": "removeText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Describes the number of characters to remove from the new line's indentation."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5507,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4588,
										4587,
										4589
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5495,
									"character": 32
								}
							]
						},
						{
							"id": 4922,
							"name": "FoldingContext",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6287,
									"character": 35
								}
							]
						},
						{
							"id": 4559,
							"name": "FoldingMarkers",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Describes language specific folding markers such as '#region' and '#endregion'.\nThe start and end regexes will be tested against the contents of all lines and must be designed efficiently:\n- the regex should start with '^'\n- regexp flags (i, g) are ignored"
							},
							"children": [
								{
									"id": 4561,
									"name": "end",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5397,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								},
								{
									"id": 4560,
									"name": "start",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5396,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4561,
										4560
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5395,
									"character": 35
								}
							]
						},
						{
							"id": 4930,
							"name": "FoldingRange",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4932,
									"name": "end",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The one-based end line of the range to fold. The folded area ends with the line's last character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6312,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4933,
									"name": "kind",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Describes the [Kind](#FoldingRangeKind) of the folding range such as [Comment](#FoldingRangeKind.Comment) or\n[Region](#FoldingRangeKind.Region). The kind is used to categorize folding ranges and used by commands\nlike 'Fold all comments'. See\n[FoldingRangeKind](#FoldingRangeKind) for an enumeration of standardized kinds."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6319,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 4934,
										"name": "FoldingRangeKind"
									}
								},
								{
									"id": 4931,
									"name": "start",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The one-based start line of the range to fold. The folded area starts after the line's last character."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6308,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4932,
										4933,
										4931
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6304,
									"character": 33
								}
							]
						},
						{
							"id": 4923,
							"name": "FoldingRangeProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A provider of folding ranges for editor models."
							},
							"children": [
								{
									"id": 4924,
									"name": "onDidChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An optional event to signal that the folding ranges from this provider have changed."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6297,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"id": 19,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4923,
												"name": "FoldingRangeProvider"
											}
										],
										"name": "IEvent"
									}
								},
								{
									"id": 4925,
									"name": "provideFoldingRanges",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4926,
											"name": "provideFoldingRanges",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provides the folding ranges for a specific model."
											},
											"parameters": [
												{
													"id": 4927,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4928,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4922,
														"name": "FoldingContext"
													}
												},
												{
													"id": 4929,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4930,
															"name": "FoldingRange"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4924
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4925
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6293,
									"character": 41
								}
							]
						},
						{
							"id": 4562,
							"name": "FoldingRules",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Describes folding rules for a language."
							},
							"children": [
								{
									"id": 4564,
									"name": "markers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Region markers used by the language."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5414,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 4559,
										"name": "FoldingMarkers"
									}
								},
								{
									"id": 4563,
									"name": "offSide",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Used by the indentation based strategy to decide whether empty lines belong to the previous or the next block.\nA language adheres to the off-side rule if blocks in that language are expressed by their indentation.\nSee [wikipedia](https://en.wikipedia.org/wiki/Off-side_rule) for more information.\nIf not set, `false` is used and empty lines belong to the previous block."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5410,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4564,
										4563
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5403,
									"character": 33
								}
							]
						},
						{
							"id": 4847,
							"name": "FormattingOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Interface used to format a model"
							},
							"children": [
								{
									"id": 4849,
									"name": "insertSpaces",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Prefer spaces over tabs."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6135,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4848,
									"name": "tabSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Size of a tab in spaces."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6131,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4849,
										4848
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6127,
									"character": 38
								}
							]
						},
						{
							"id": 4598,
							"name": "Hover",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A hover represents additional information for a symbol or word. Hovers are\nrendered in a tooltip-like widget."
							},
							"children": [
								{
									"id": 4599,
									"name": "contents",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The contents of this hover."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5536,
											"character": 16
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 255,
											"name": "IMarkdownString"
										}
									}
								},
								{
									"id": 4600,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The range to which this hover applies. When missing, the\neditor will use the range at the current position or the\ncurrent position itself."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5542,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4599,
										4600
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5532,
									"character": 26
								}
							]
						},
						{
							"id": 4601,
							"name": "HoverProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The hover provider interface defines the contract between extensions and\nthe [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature."
							},
							"children": [
								{
									"id": 4602,
									"name": "provideHover",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4603,
											"name": "provideHover",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide a hover for the given position and document. Multiple hovers at the same\nposition will be merged by the editor. A hover can have a range which defaults\nto the word range at the position when omitted."
											},
											"parameters": [
												{
													"id": 4604,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4605,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4606,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4598,
														"name": "Hover"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4602
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5549,
									"character": 34
								}
							]
						},
						{
							"id": 4574,
							"name": "IAutoClosingPair",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4576,
									"name": "close",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5461,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4575,
									"name": "open",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5460,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4576,
										4575
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5459,
									"character": 37
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4577,
									"name": "IAutoClosingPairConditional"
								}
							]
						},
						{
							"id": 4577,
							"name": "IAutoClosingPairConditional",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4580,
									"name": "close",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5461,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4576,
										"name": "IAutoClosingPair.close"
									}
								},
								{
									"id": 4578,
									"name": "notIn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5465,
											"character": 13
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4579,
									"name": "open",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5460,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4575,
										"name": "IAutoClosingPair.open"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4580,
										4578,
										4579
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5464,
									"character": 48
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4574,
									"name": "IAutoClosingPair"
								}
							]
						},
						{
							"id": 4892,
							"name": "IColor",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A color in RGBA format."
							},
							"children": [
								{
									"id": 4896,
									"name": "alpha",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The alpha component in the range [0-1]."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6223,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4895,
									"name": "blue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The blue component in the range [0-1]."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6219,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4894,
									"name": "green",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The green component in the range [0-1]."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6215,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4893,
									"name": "red",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"shortText": "The red component in the range [0-1]."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6211,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4896,
										4895,
										4894,
										4893
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6207,
									"character": 27
								}
							]
						},
						{
							"id": 4901,
							"name": "IColorInformation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A color range is a range in a text model which represents a color."
							},
							"children": [
								{
									"id": 4903,
									"name": "color",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The color represented in this range."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6259,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 4892,
										"name": "IColor"
									}
								},
								{
									"id": 4902,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The range within the model."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6255,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4903,
										4902
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6251,
									"character": 38
								}
							]
						},
						{
							"id": 4897,
							"name": "IColorPresentation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "String representations for a color"
							},
							"children": [
								{
									"id": 4900,
									"name": "additionalTextEdits",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An optional array of additional [text edits](#TextEdit) that are applied when\nselecting this color presentation."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6245,
											"character": 27
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4842,
											"name": "TextEdit"
										}
									}
								},
								{
									"id": 4898,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The label of this color presentation. It will be shown on the color\npicker header. By default this is also the text that is inserted when selecting\nthis color presentation."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6235,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4899,
									"name": "textEdit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An [edit](#TextEdit) which is applied to a document when selecting\nthis presentation for the color."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6240,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 4842,
										"name": "TextEdit"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4900,
										4898,
										4899
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6229,
									"character": 39
								}
							]
						},
						{
							"id": 4570,
							"name": "IDocComment",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Definition of documentation comments (e.g. Javadoc/JSdoc)"
							},
							"children": [
								{
									"id": 4572,
									"name": "close",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The string that appears on the last line and closes the doc comment (e.g. ' * /')."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5450,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4571,
									"name": "open",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The string that starts a doc comment (e.g. '/**')"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5446,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4572,
										4571
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5442,
									"character": 32
								}
							]
						},
						{
							"id": 4507,
							"name": "IEncodedLineTokens",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The result of a line tokenization."
							},
							"children": [
								{
									"id": 4509,
									"name": "endState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The tokenization end state.\nA pointer will be held to this and the object should not be modified by the tokenizer after the pointer is returned."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5100,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 4590,
										"name": "IState"
									}
								},
								{
									"id": 4508,
									"name": "tokens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The tokens on the line in a binary, encoded format. Each token occupies two array indices. For token i:\n - at offset 2*i => startIndex\n - at offset 2*i + 1 => metadata\nMeta data is in binary format:\n- -------------------------------------------\n    3322 2222 2222 1111 1111 1100 0000 0000\n    1098 7654 3210 9876 5432 1098 7654 3210\n- -------------------------------------------\n    bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n- -------------------------------------------\n - L = EncodedLanguageId (8 bits): Use `getEncodedLanguageId` to get the encoded ID of a language.\n - T = StandardTokenType (3 bits): Other = 0, Comment = 1, String = 2, RegEx = 4.\n - F = FontStyle (3 bits): None = 0, Italic = 1, Bold = 2, Underline = 4.\n - f = foreground ColorId (9 bits)\n - b = background ColorId (9 bits)\n - The color value for each colorId is defined in IStandaloneThemeData.customTokenColors:\ne.g. colorId = 1 is stored in IStandaloneThemeData.customTokenColors[1]. Color id = 0 means no color,\nid = 1 is for the default foreground color, id = 2 for the default background."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5095,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "Uint32Array"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4509,
										4508
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5074,
									"character": 39
								}
							]
						},
						{
							"id": 5083,
							"name": "IExpandedMonarchLanguageAction",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5090,
									"name": "bracket",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"tags": [
											{
												"tag": "open",
												"text": "or @close\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6576,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5085,
									"name": "cases",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "map from string to ILanguageAction"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6556,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 5089,
									"name": "goBack",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "go back n characters in the stream"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6572,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5084,
									"name": "group",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "array of actions for each parenthesized match group"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6552,
											"character": 13
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 5093,
											"name": "IMonarchLanguageAction"
										}
									}
								},
								{
									"id": 5092,
									"name": "log",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "log a message to the browser console window"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6584,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5087,
									"name": "next",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "the next state to push, or \"@push\", \"@pop\", \"@popall\""
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6564,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5091,
									"name": "nextEmbedded",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "switch to embedded language (using the mimetype) or get out using \"@pop\""
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6580,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5088,
									"name": "switchTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "switch to this state"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6568,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5086,
									"name": "token",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "token class (ie. css class) (or \"@brackets\" or \"@rematch\")"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6560,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5090,
										5085,
										5089,
										5084,
										5092,
										5087,
										5091,
										5088,
										5086
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6548,
									"character": 51
								}
							]
						},
						{
							"id": 5077,
							"name": "IExpandedMonarchLanguageRule",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5079,
									"name": "action",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "action to take on match"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6532,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"id": 5093,
										"name": "IMonarchLanguageAction"
									}
								},
								{
									"id": 5080,
									"name": "include",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "or an include rule. include all rules from the included state"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6536,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5078,
									"name": "regex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "match tokens"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6528,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "RegExp"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5079,
										5080,
										5078
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6524,
									"character": 49
								}
							]
						},
						{
							"id": 5054,
							"name": "ILanguageExtensionPoint",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5060,
									"name": "aliases",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6470,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5062,
									"name": "configuration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6472,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 5056,
									"name": "extensions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6466,
											"character": 18
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5058,
									"name": "filenamePatterns",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6468,
											"character": 24
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5057,
									"name": "filenames",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6467,
											"character": 17
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5059,
									"name": "firstLine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6469,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5055,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6465,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5061,
									"name": "mimetypes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6471,
											"character": 17
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5060,
										5062,
										5056,
										5058,
										5057,
										5059,
										5055,
										5061
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6464,
									"character": 44
								}
							]
						},
						{
							"id": 4504,
							"name": "ILineTokens",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The result of a line tokenization."
							},
							"children": [
								{
									"id": 4506,
									"name": "endState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The tokenization end state.\nA pointer will be held to this and the object should not be modified by the tokenizer after the pointer is returned."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5068,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 4590,
										"name": "IState"
									}
								},
								{
									"id": 4505,
									"name": "tokens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The list of tokens on the line."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5063,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4501,
											"name": "IToken"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4506,
										4505
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5059,
									"character": 32
								}
							]
						},
						{
							"id": 4874,
							"name": "ILink",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A link inside the editor."
							},
							"children": [
								{
									"id": 4875,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6186,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 4877,
									"name": "tooltip",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6188,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4876,
									"name": "url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6187,
											"character": 11
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 68,
												"name": "Uri"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4875,
										4877,
										4876
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6185,
									"character": 26
								}
							]
						},
						{
							"id": 4878,
							"name": "ILinksList",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4879,
									"name": "links",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6192,
											"character": 13
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4874,
											"name": "ILink"
										}
									}
								},
								{
									"id": 4880,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4881,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4879
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4880
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6191,
									"character": 31
								}
							]
						},
						{
							"id": 5063,
							"name": "IMonarchLanguage",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A Monarch language definition"
							},
							"children": [
								{
									"id": 5071,
									"name": "brackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "for example [['{','}','delimiter.curly']]"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6499,
											"character": 16
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 5094,
											"name": "IMonarchLanguageBracket"
										}
									}
								},
								{
									"id": 5070,
									"name": "defaultToken",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "if no match in the tokenizer assign this token class (default 'source')"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6495,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5068,
									"name": "ignoreCase",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "is the language case insensitive?"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6487,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5074,
									"name": "includeLF",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "include line feeds (in the form of a \\n character) at the end of lines\nDefaults to false"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6512,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5072,
									"name": "start",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "start symbol in the tokenizer (by default the first entry is used)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6503,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5073,
									"name": "tokenPostfix",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "attach this to every token class (by default '.' + name)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6507,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5064,
									"name": "tokenizer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "map from string to ILanguageRule[]"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6481,
											"character": 17
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5065,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 5066,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 5067,
														"name": "name",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 5081,
														"name": "IMonarchLanguageRule"
													}
												}
											}
										}
									}
								},
								{
									"id": 5069,
									"name": "unicode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "is the language unicode-aware? (i.e., /\\u{1D306}/)"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6491,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5071,
										5070,
										5068,
										5074,
										5072,
										5073,
										5064,
										5069
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6477,
									"character": 37
								}
							]
						},
						{
							"id": 5094,
							"name": "IMonarchLanguageBracket",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "This interface can be shortened as an array, ie. ['{','}','delimiter.curly']"
							},
							"children": [
								{
									"id": 5096,
									"name": "close",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "closing bracket"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6600,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5095,
									"name": "open",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "open bracket"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6596,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5097,
									"name": "token",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "token class"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6604,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5096,
										5095,
										5097
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6592,
									"character": 44
								}
							]
						},
						{
							"id": 4590,
							"name": "IState",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The state of the tokenizer between two lines.\nIt is useful to store flags such as in multiline comment, etc.\nThe model will clone the previous line's state and pass it in to tokenize the next line."
							},
							"children": [
								{
									"id": 4591,
									"name": "clone",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4592,
											"name": "clone",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4590,
												"name": "IState"
											}
										}
									]
								},
								{
									"id": 4593,
									"name": "equals",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4594,
											"name": "equals",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4595,
													"name": "other",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4590,
														"name": "IState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4591,
										4593
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5515,
									"character": 27
								}
							]
						},
						{
							"id": 4501,
							"name": "IToken",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A token."
							},
							"children": [
								{
									"id": 4503,
									"name": "scopes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5053,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4502,
									"name": "startIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5052,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4503,
										4502
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5051,
									"character": 27
								}
							]
						},
						{
							"id": 4786,
							"name": "ImplementationProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The implementation provider interface defines the contract between extensions and\nthe go to implementation feature."
							},
							"children": [
								{
									"id": 4787,
									"name": "provideImplementation",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4788,
											"name": "provideImplementation",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide the implementation of the symbol at the given position and document."
											},
											"parameters": [
												{
													"id": 4789,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4790,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4791,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4773,
														"name": "Definition"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4787
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6041,
									"character": 43
								}
							]
						},
						{
							"id": 4554,
							"name": "IndentationRule",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Describes indentation rules for a language."
							},
							"children": [
								{
									"id": 4555,
									"name": "decreaseIndentPattern",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5374,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								},
								{
									"id": 4556,
									"name": "increaseIndentPattern",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "If a line matches this pattern, then all the lines after it should be indented once (until another rule matches)."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5378,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								},
								{
									"id": 4557,
									"name": "indentNextLinePattern",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If a line matches this pattern, then **only the next line** after it should be indented once."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5382,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								},
								{
									"id": 4558,
									"name": "unIndentedLinePattern",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5386,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4555,
										4556,
										4557,
										4558
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5370,
									"character": 36
								}
							]
						},
						{
							"id": 5008,
							"name": "InlineHint",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5011,
									"name": "description",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6421,
											"character": 19
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 255,
												"name": "IMarkdownString"
											}
										]
									}
								},
								{
									"id": 5010,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6420,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 5009,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6419,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5013,
									"name": "whitespaceAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6423,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5012,
									"name": "whitespaceBefore",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6422,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5011,
										5010,
										5009,
										5013,
										5012
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6418,
									"character": 31
								}
							]
						},
						{
							"id": 5014,
							"name": "InlineHintsProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5015,
									"name": "onDidChangeInlineHints",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6427,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"id": 19,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "IEvent"
									}
								},
								{
									"id": 5016,
									"name": "provideInlineHints",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5017,
											"name": "provideInlineHints",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5018,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 5019,
													"name": "range",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 366,
														"name": "Range"
													}
												},
												{
													"id": 5020,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 5008,
															"name": "InlineHint"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5015
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5016
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6426,
									"character": 40
								}
							]
						},
						{
							"id": 4541,
							"name": "LanguageConfiguration",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The language configuration interface defines the contract between extensions and\nvarious editor features, like automatic bracket insertion, automatic indentation etc."
							},
							"children": [
								{
									"id": 4551,
									"name": "__electricCharacterSupport",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "**Deprecated** Do not use.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "Will be replaced by a better API soon.\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5362,
											"character": 34
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4552,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 4553,
													"name": "docComment",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 5363,
															"character": 22
														}
													],
													"type": {
														"type": "reference",
														"id": 4570,
														"name": "IDocComment"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														4553
													]
												}
											]
										}
									}
								},
								{
									"id": 4549,
									"name": "autoCloseBefore",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Defines what characters must be after the cursor for bracket or quote autoclosing to occur when using the \\'languageDefined\\' autoclosing setting.",
										"text": "This is typically the set of characters which can not start an expression, such as whitespace, closing brackets, non-unary operators, etc.\n"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5352,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4547,
									"name": "autoClosingPairs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The language's auto closing pairs. The 'close' character is automatically inserted with the\n'open' character is typed. If not set, the configured brackets will be used."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5340,
											"character": 24
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4577,
											"name": "IAutoClosingPairConditional"
										}
									}
								},
								{
									"id": 4543,
									"name": "brackets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The language's brackets.\nThis configuration implicitly affects pressing Enter around these brackets."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5319,
											"character": 16
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4573,
											"name": "CharacterPair"
										}
									}
								},
								{
									"id": 4542,
									"name": "comments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The language's comment settings."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5314,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 4538,
										"name": "CommentRule"
									}
								},
								{
									"id": 4550,
									"name": "folding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The language's folding rules."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5356,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 4562,
										"name": "FoldingRules"
									}
								},
								{
									"id": 4545,
									"name": "indentationRules",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The language's indentation settings."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5331,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"id": 4554,
										"name": "IndentationRule"
									}
								},
								{
									"id": 4546,
									"name": "onEnterRules",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The language's rules to be evaluated when pressing Enter."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5335,
											"character": 20
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4565,
											"name": "OnEnterRule"
										}
									}
								},
								{
									"id": 4548,
									"name": "surroundingPairs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The language's surrounding pairs. When the 'open' character is typed on a selection, the\nselected string is surrounded by the open and close characters. If not set, the autoclosing pairs\nsettings will be used."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5346,
											"character": 24
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4574,
											"name": "IAutoClosingPair"
										}
									}
								},
								{
									"id": 4544,
									"name": "wordPattern",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The language's word definition.\nIf the language supports Unicode identifiers (e.g. JavaScript), it is preferable\nto provide a word definition that uses exclusion of known separators.\ne.g.: A regex that matches anything except known separators (and dot is allowed to occur in a floating point number):\n  /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5327,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4551,
										4549,
										4547,
										4543,
										4542,
										4550,
										4545,
										4546,
										4548,
										4544
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5310,
									"character": 42
								}
							]
						},
						{
							"id": 4882,
							"name": "LinkProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A provider of links."
							},
							"children": [
								{
									"id": 4887,
									"name": "resolveLink",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6201,
											"character": 19
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4888,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4889,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 4890,
															"name": "link",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 4874,
																"name": "ILink"
															}
														},
														{
															"id": 4891,
															"name": "token",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 57,
																"name": "CancellationToken"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 4596,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4874,
																"name": "ILink"
															}
														],
														"name": "ProviderResult"
													}
												}
											]
										}
									}
								},
								{
									"id": 4883,
									"name": "provideLinks",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4884,
											"name": "provideLinks",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4885,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4886,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4878,
														"name": "ILinksList"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4887
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4883
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6199,
									"character": 33
								}
							]
						},
						{
							"id": 4747,
							"name": "LinkedEditingRangeProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The linked editing range provider interface defines the contract between extensions and\nthe linked editing feature."
							},
							"children": [
								{
									"id": 4748,
									"name": "provideLinkedEditingRanges",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4749,
											"name": "provideLinkedEditingRanges",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide a list of ranges that can be edited together."
											},
											"parameters": [
												{
													"id": 4750,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4751,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4752,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4753,
														"name": "LinkedEditingRanges"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4748
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5931,
									"character": 47
								}
							]
						},
						{
							"id": 4753,
							"name": "LinkedEditingRanges",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Represents a list of ranges that can be edited together along with a word pattern to describe valid contents."
							},
							"children": [
								{
									"id": 4754,
									"name": "ranges",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "A list of ranges that can be edited together. The ranges must have\nidentical length and text content. The ranges cannot overlap"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5946,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 361,
											"name": "IRange"
										}
									}
								},
								{
									"id": 4755,
									"name": "wordPattern",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An optional word pattern that describes valid contents for the given ranges.\nIf no pattern is provided, the language configuration's word pattern will be used."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5951,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4754,
										4755
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5941,
									"character": 40
								}
							]
						},
						{
							"id": 4765,
							"name": "Location",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Represents a location inside a resource, such as a line\ninside a text file."
							},
							"children": [
								{
									"id": 4767,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The document range of this locations."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5988,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 4766,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The resource identifier of this location."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5984,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4767,
										4766
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5980,
									"character": 29
								}
							]
						},
						{
							"id": 4768,
							"name": "LocationLink",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4769,
									"name": "originSelectionRange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A range to select where this link originates from."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5995,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 4771,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The full range this link points to."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6003,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 4772,
									"name": "targetSelectionRange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A range to select this link points to. Must be contained\nin `LocationLink.range`."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6008,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 4770,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The target uri this link points to."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5999,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4769,
										4771,
										4772,
										4770
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5991,
									"character": 33
								}
							]
						},
						{
							"id": 4565,
							"name": "OnEnterRule",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Describes a rule to be evaluated when pressing Enter."
							},
							"children": [
								{
									"id": 4569,
									"name": "action",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The action to execute."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5436,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"id": 4586,
										"name": "EnterAction"
									}
								},
								{
									"id": 4567,
									"name": "afterText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This rule will only execute if the text after the cursor matches this regular expression."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5428,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								},
								{
									"id": 4566,
									"name": "beforeText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "This rule will only execute if the text before the cursor matches this regular expression."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5424,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								},
								{
									"id": 4568,
									"name": "previousLineText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "This rule will only execute if the text above the this line matches this regular expression."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5432,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4569,
										4567,
										4566,
										4568
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5420,
									"character": 32
								}
							]
						},
						{
							"id": 4865,
							"name": "OnTypeFormattingEditProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The document formatting provider interface defines the contract between extensions and\nthe formatting-feature."
							},
							"children": [
								{
									"id": 4866,
									"name": "autoFormatTriggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6171,
											"character": 35
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4867,
									"name": "provideOnTypeFormattingEdits",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4868,
											"name": "provideOnTypeFormattingEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide formatting edits after a character has been typed.",
												"text": "The given position and character should hint to the provider\nwhat range the position to expand to, like find the matching `{`\nwhen `}` has been entered.\n"
											},
											"parameters": [
												{
													"id": 4869,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4870,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4871,
													"name": "ch",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4872,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4847,
														"name": "FormattingOptions"
													}
												},
												{
													"id": 4873,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4842,
															"name": "TextEdit"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4866
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4867
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6170,
									"character": 49
								}
							]
						},
						{
							"id": 4700,
							"name": "ParameterInformation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Represents a parameter of a callable-signature. A parameter can\nhave a label and a doc-comment."
							},
							"children": [
								{
									"id": 4702,
									"name": "documentation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The human-readable doc-comment of this signature. Will be shown\nin the UI but can be omitted."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5800,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 255,
												"name": "IMarkdownString"
											}
										]
									}
								},
								{
									"id": 4701,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The label of this signature. Will be shown in\nthe UI."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5795,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4702,
										4701
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5790,
									"character": 41
								}
							]
						},
						{
							"id": 4756,
							"name": "ReferenceContext",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Value-object that contains additional information when\nrequesting references."
							},
							"children": [
								{
									"id": 4757,
									"name": "includeDeclaration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Include the declaration of the current symbol."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5962,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4757
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5958,
									"character": 37
								}
							]
						},
						{
							"id": 4758,
							"name": "ReferenceProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The reference provider interface defines the contract between extensions and\nthe [find references](https://code.visualstudio.com/docs/editor/editingevolved#_peek)-feature."
							},
							"children": [
								{
									"id": 4759,
									"name": "provideReferences",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4760,
											"name": "provideReferences",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide a set of project-wide references for the given position and document."
											},
											"parameters": [
												{
													"id": 4761,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4762,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4763,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4756,
														"name": "ReferenceContext"
													}
												},
												{
													"id": 4764,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4765,
															"name": "Location"
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4759
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5969,
									"character": 38
								}
							]
						},
						{
							"id": 4967,
							"name": "Rejection",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4968,
									"name": "rejectReason",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6381,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4968
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6380,
									"character": 30
								}
							]
						},
						{
							"id": 4969,
							"name": "RenameLocation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4970,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6385,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								},
								{
									"id": 4971,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6386,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4970,
										4971
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6384,
									"character": 35
								}
							]
						},
						{
							"id": 4972,
							"name": "RenameProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4973,
									"name": "provideRenameEdits",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4974,
											"name": "provideRenameEdits",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4975,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4976,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4977,
													"name": "newName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4978,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 4965,
																"name": "WorkspaceEdit"
															},
															{
																"type": "reference",
																"id": 4967,
																"name": "Rejection"
															}
														]
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								},
								{
									"id": 4979,
									"name": "resolveRenameLocation",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4980,
											"name": "resolveRenameLocation",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4981,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4982,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4983,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 4969,
																"name": "RenameLocation"
															},
															{
																"type": "reference",
																"id": 4967,
																"name": "Rejection"
															}
														]
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4973,
										4979
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6389,
									"character": 35
								}
							]
						},
						{
							"id": 4914,
							"name": "SelectionRange",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4915,
									"name": "range",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6277,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 361,
										"name": "IRange"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4915
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6276,
									"character": 35
								}
							]
						},
						{
							"id": 4916,
							"name": "SelectionRangeProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4917,
									"name": "provideSelectionRanges",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4918,
											"name": "provideSelectionRanges",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide ranges that should be selected from the given position."
											},
											"parameters": [
												{
													"id": 4919,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4920,
													"name": "positions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 311,
															"name": "Position"
														}
													}
												},
												{
													"id": 4921,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 4914,
																"name": "SelectionRange"
															}
														}
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4917
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6280,
									"character": 43
								}
							]
						},
						{
							"id": 5024,
							"name": "SemanticTokens",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5026,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6438,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "Uint32Array"
									}
								},
								{
									"id": 5025,
									"name": "resultId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6437,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5026,
										5025
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6436,
									"character": 35
								}
							]
						},
						{
							"id": 5027,
							"name": "SemanticTokensEdit",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5030,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6444,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "Uint32Array"
									}
								},
								{
									"id": 5029,
									"name": "deleteCount",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6443,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5028,
									"name": "start",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6442,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5030,
										5029,
										5028
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6441,
									"character": 39
								}
							]
						},
						{
							"id": 5031,
							"name": "SemanticTokensEdits",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5033,
									"name": "edits",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6449,
											"character": 22
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 5027,
											"name": "SemanticTokensEdit"
										}
									}
								},
								{
									"id": 5032,
									"name": "resultId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6448,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5033,
										5032
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6447,
									"character": 40
								}
							]
						},
						{
							"id": 5021,
							"name": "SemanticTokensLegend",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5023,
									"name": "tokenModifiers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6433,
											"character": 31
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5022,
									"name": "tokenTypes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6432,
											"character": 27
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5023,
										5022
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6431,
									"character": 41
								}
							]
						},
						{
							"id": 4708,
							"name": "SignatureHelp",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Signature help represents the signature of something\ncallable. There can be multiple signatures but only one\nactive and only one active parameter."
							},
							"children": [
								{
									"id": 4711,
									"name": "activeParameter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The active parameter of the active signature."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5848,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4710,
									"name": "activeSignature",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The active signature."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5844,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4709,
									"name": "signatures",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "One or more signatures."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5840,
											"character": 18
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4703,
											"name": "SignatureInformation"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4711,
										4710,
										4709
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5836,
									"character": 34
								}
							]
						},
						{
							"id": 4720,
							"name": "SignatureHelpContext",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4724,
									"name": "activeSignatureHelp",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5865,
											"character": 36
										}
									],
									"type": {
										"type": "reference",
										"id": 4708,
										"name": "SignatureHelp"
									}
								},
								{
									"id": 4723,
									"name": "isRetrigger",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5864,
											"character": 28
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4722,
									"name": "triggerCharacter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5863,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4721,
									"name": "triggerKind",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5862,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"id": 4716,
										"name": "SignatureHelpTriggerKind"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4724,
										4723,
										4722,
										4721
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5861,
									"character": 41
								}
							]
						},
						{
							"id": 4725,
							"name": "SignatureHelpProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The signature help provider interface defines the contract between extensions and\nthe [parameter hints](https://code.visualstudio.com/docs/editor/intellisense)-feature."
							},
							"children": [
								{
									"id": 4727,
									"name": "signatureHelpRetriggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5874,
											"character": 49
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								},
								{
									"id": 4726,
									"name": "signatureHelpTriggerCharacters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5873,
											"character": 47
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								},
								{
									"id": 4728,
									"name": "provideSignatureHelp",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4729,
											"name": "provideSignatureHelp",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide help for the signature at the given position and document."
											},
											"parameters": [
												{
													"id": 4730,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4731,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4732,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												},
												{
													"id": 4733,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4720,
														"name": "SignatureHelpContext"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4712,
														"name": "SignatureHelpResult"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4727,
										4726
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4728
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5872,
									"character": 42
								}
							]
						},
						{
							"id": 4712,
							"name": "SignatureHelpResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4713,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5852,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"id": 4708,
										"name": "SignatureHelp"
									}
								},
								{
									"id": 4714,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4715,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 18,
												"name": "IDisposable.dispose"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 17,
										"name": "IDisposable.dispose"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4713
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4714
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5851,
									"character": 40
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 16,
									"name": "IDisposable"
								}
							]
						},
						{
							"id": 4703,
							"name": "SignatureInformation",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "Represents the signature of something callable. A signature\ncan have a label, like a function-name, a doc-comment, and\na set of parameters."
							},
							"children": [
								{
									"id": 4707,
									"name": "activeParameter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Index of the active parameter.",
										"text": "If provided, this is used in place of `SignatureHelp.activeSignature`.\n"
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5828,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4705,
									"name": "documentation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The human-readable doc-comment of this signature. Will be shown\nin the UI but can be omitted."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5818,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 255,
												"name": "IMarkdownString"
											}
										]
									}
								},
								{
									"id": 4704,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The label of this signature. Will be shown in\nthe UI."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5813,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4706,
									"name": "parameters",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The parameters of this signature."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 5822,
											"character": 18
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4700,
											"name": "ParameterInformation"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4707,
										4705,
										4704,
										4706
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5808,
									"character": 41
								}
							]
						},
						{
							"id": 4510,
							"name": "TokensProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "A \"manual\" provider of tokens."
							},
							"children": [
								{
									"id": 4511,
									"name": "getInitialState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4512,
											"name": "getInitialState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "The initial state of a language. Will be the state passed in to tokenize the first line."
											},
											"type": {
												"type": "reference",
												"id": 4590,
												"name": "IState"
											}
										}
									]
								},
								{
									"id": 4513,
									"name": "tokenize",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4514,
											"name": "tokenize",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Tokenize a line given the state at the beginning of the line."
											},
											"parameters": [
												{
													"id": 4515,
													"name": "line",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4516,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4590,
														"name": "IState"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4504,
												"name": "ILineTokens"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4511,
										4513
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5106,
									"character": 35
								}
							]
						},
						{
							"id": 4792,
							"name": "TypeDefinitionProvider",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The type definition provider interface defines the contract between extensions and\nthe go to type definition feature."
							},
							"children": [
								{
									"id": 4793,
									"name": "provideTypeDefinition",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 4794,
											"name": "provideTypeDefinition",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Provide the type definition of the symbol at the given position and document."
											},
											"parameters": [
												{
													"id": 4795,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2002,
														"name": "ITextModel"
													}
												},
												{
													"id": 4796,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "Position"
													}
												},
												{
													"id": 4797,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 57,
														"name": "CancellationToken"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4596,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4773,
														"name": "Definition"
													}
												],
												"name": "ProviderResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4793
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6052,
									"character": 43
								}
							]
						},
						{
							"id": 4965,
							"name": "WorkspaceEdit",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4966,
									"name": "edits",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6377,
											"character": 13
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 4955,
													"name": "WorkspaceFileEdit"
												},
												{
													"type": "reference",
													"id": 4960,
													"name": "WorkspaceTextEdit"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4966
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6376,
									"character": 34
								}
							]
						},
						{
							"id": 4942,
							"name": "WorkspaceEditMetadata",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4945,
									"name": "description",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6348,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4944,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6347,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4943,
									"name": "needsConfirmation",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6346,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4945,
										4944,
										4943
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6345,
									"character": 42
								}
							]
						},
						{
							"id": 4955,
							"name": "WorkspaceFileEdit",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4959,
									"name": "metadata",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6366,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 4942,
										"name": "WorkspaceEditMetadata"
									}
								},
								{
									"id": 4957,
									"name": "newUri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6364,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 4956,
									"name": "oldUri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6363,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 4958,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6365,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 4946,
										"name": "WorkspaceFileEditOptions"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4959,
										4957,
										4956,
										4958
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6362,
									"character": 38
								}
							]
						},
						{
							"id": 4946,
							"name": "WorkspaceFileEditOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4951,
									"name": "copy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6356,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4952,
									"name": "folder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6357,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4949,
									"name": "ignoreIfExists",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6354,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4948,
									"name": "ignoreIfNotExists",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6353,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4954,
									"name": "maxSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6359,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4947,
									"name": "overwrite",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6352,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4950,
									"name": "recursive",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6355,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4953,
									"name": "skipTrashBin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6358,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4951,
										4952,
										4949,
										4948,
										4954,
										4947,
										4950,
										4953
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6351,
									"character": 45
								}
							]
						},
						{
							"id": 4960,
							"name": "WorkspaceTextEdit",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 4962,
									"name": "edit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6371,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 4842,
										"name": "TextEdit"
									}
								},
								{
									"id": 4964,
									"name": "metadata",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6373,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 4942,
										"name": "WorkspaceEditMetadata"
									}
								},
								{
									"id": 4963,
									"name": "modelVersionId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6372,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4961,
									"name": "resource",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6370,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4962,
										4964,
										4963,
										4961
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6369,
									"character": 38
								}
							]
						},
						{
							"id": 4573,
							"name": "CharacterPair",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "A tuple of two characters, like a pair of\nopening and closing brackets."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5457,
									"character": 29
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4773,
							"name": "Definition",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6011,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4765,
										"name": "Location"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4765,
											"name": "Location"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4768,
											"name": "LocationLink"
										}
									}
								]
							}
						},
						{
							"id": 5093,
							"name": "IMonarchLanguageAction",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6587,
									"character": 38
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5082,
										"name": "IShortMonarchLanguageAction"
									},
									{
										"type": "reference",
										"id": 5083,
										"name": "IExpandedMonarchLanguageAction"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 5082,
											"name": "IShortMonarchLanguageAction"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 5083,
											"name": "IExpandedMonarchLanguageAction"
										}
									}
								]
							}
						},
						{
							"id": 5081,
							"name": "IMonarchLanguageRule",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6539,
									"character": 36
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5075,
										"name": "IShortMonarchLanguageRule1"
									},
									{
										"type": "reference",
										"id": 5076,
										"name": "IShortMonarchLanguageRule2"
									},
									{
										"type": "reference",
										"id": 5077,
										"name": "IExpandedMonarchLanguageRule"
									}
								]
							}
						},
						{
							"id": 5082,
							"name": "IShortMonarchLanguageAction",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "An action is either an array of actions...\n... or a case statement with guards...\n... or a basic action with a token value."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6546,
									"character": 43
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5075,
							"name": "IShortMonarchLanguageRule1",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "A rule is either a regular expression and an action\n\t\tshorthands: [reg,act] == { regex: reg, action: act}\n\t\tand       : [reg,act,nxt] == { regex: reg, action: act{ next: nxt }}"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6520,
									"character": 42
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "RegExp"
											}
										]
									},
									{
										"type": "reference",
										"id": 5093,
										"name": "IMonarchLanguageAction"
									}
								]
							}
						},
						{
							"id": 5076,
							"name": "IShortMonarchLanguageRule2",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6522,
									"character": 42
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "RegExp"
											}
										]
									},
									{
										"type": "reference",
										"id": 5093,
										"name": "IMonarchLanguageAction"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4596,
							"name": "ProviderResult",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "A provider result represents the values a provider, like the [`HoverProvider`](#HoverProvider),\nmay return. For once this is the actual result type `T`, like `Hover`, or a thenable that resolves\nto that type `T`. In addition, `null` and `undefined` can be returned - either directly or from a\nthenable."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5526,
									"character": 30
								}
							],
							"typeParameter": [
								{
									"id": 4597,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										],
										"name": "Thenable"
									}
								]
							}
						},
						{
							"id": 4842,
							"name": "TextEdit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6118,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4843,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 4846,
											"name": "eol",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6121,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 1960,
												"name": "editor.EndOfLineSequence"
											}
										},
										{
											"id": 4844,
											"name": "range",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6119,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 4845,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "monaco.ts",
													"line": 6120,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												4846,
												4844,
												4845
											]
										}
									],
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6118,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 4388,
							"name": "onLanguage",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5041,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 4389,
									"name": "onLanguage",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {},
									"comment": {
										"shortText": "An event emitted when a language is first time needed (e.g. a model has it set)."
									},
									"parameters": [
										{
											"id": 4390,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4391,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4392,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "monaco.ts",
															"line": 5041,
															"character": 60
														}
													],
													"signatures": [
														{
															"id": 4393,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4385,
							"name": "getEncodedLanguageId",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5035,
									"character": 40
								}
							],
							"signatures": [
								{
									"id": 4386,
									"name": "getEncodedLanguageId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4387,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 4383,
							"name": "getLanguages",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5033,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 4384,
									"name": "getLanguages",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the information of all the registered languages."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 5054,
											"name": "ILanguageExtensionPoint"
										}
									}
								}
							]
						},
						{
							"id": 4380,
							"name": "register",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5028,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 4381,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register information about a new language."
									},
									"parameters": [
										{
											"id": 4382,
											"name": "language",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5054,
												"name": "ILanguageExtensionPoint"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 4453,
							"name": "registerCodeActionProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5209,
									"character": 46
								}
							],
							"signatures": [
								{
									"id": 4454,
									"name": "registerCodeActionProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a code action provider (used by e.g. quick fix)."
									},
									"parameters": [
										{
											"id": 4455,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4456,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4531,
												"name": "CodeActionProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4449,
							"name": "registerCodeLensProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5204,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 4450,
									"name": "registerCodeLensProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a code lens provider (used by e.g. inline code lenses)."
									},
									"parameters": [
										{
											"id": 4451,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4452,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4997,
												"name": "CodeLensProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4477,
							"name": "registerColorProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5239,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 4478,
									"name": "registerColorProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a document color provider (used by Color Picker, Color Decorator)."
									},
									"parameters": [
										{
											"id": 4479,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4480,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4904,
												"name": "DocumentColorProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4473,
							"name": "registerCompletionItemProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5234,
									"character": 50
								}
							],
							"signatures": [
								{
									"id": 4474,
									"name": "registerCompletionItemProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a completion item provider (use by e.g. suggestions)."
									},
									"parameters": [
										{
											"id": 4475,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4476,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4676,
												"name": "CompletionItemProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4485,
							"name": "registerDeclarationProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5249,
									"character": 47
								}
							],
							"signatures": [
								{
									"id": 4486,
									"name": "registerDeclarationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a declaration provider"
									},
									"parameters": [
										{
											"id": 4487,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4488,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4780,
												"name": "DeclarationProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4437,
							"name": "registerDefinitionProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5189,
									"character": 46
								}
							],
							"signatures": [
								{
									"id": 4438,
									"name": "registerDefinitionProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a definition provider (used by e.g. go to definition)."
									},
									"parameters": [
										{
											"id": 4439,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4440,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4774,
												"name": "DefinitionProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4457,
							"name": "registerDocumentFormattingEditProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5214,
									"character": 58
								}
							],
							"signatures": [
								{
									"id": 4458,
									"name": "registerDocumentFormattingEditProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a formatter that can handle only entire models."
									},
									"parameters": [
										{
											"id": 4459,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4460,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4850,
												"name": "DocumentFormattingEditProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4429,
							"name": "registerDocumentHighlightProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5179,
									"character": 53
								}
							],
							"signatures": [
								{
									"id": 4430,
									"name": "registerDocumentHighlightProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a document highlight provider (used by e.g. highlight occurrences)."
									},
									"parameters": [
										{
											"id": 4431,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4432,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4741,
												"name": "DocumentHighlightProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4461,
							"name": "registerDocumentRangeFormattingEditProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5219,
									"character": 63
								}
							],
							"signatures": [
								{
									"id": 4462,
									"name": "registerDocumentRangeFormattingEditProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a formatter that can handle a range inside a model."
									},
									"parameters": [
										{
											"id": 4463,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4464,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4857,
												"name": "DocumentRangeFormattingEditProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4497,
							"name": "registerDocumentRangeSemanticTokensProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5264,
									"character": 63
								}
							],
							"signatures": [
								{
									"id": 4498,
									"name": "registerDocumentRangeSemanticTokensProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a document range semantic tokens provider"
									},
									"parameters": [
										{
											"id": 4499,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4500,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5046,
												"name": "DocumentRangeSemanticTokensProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4493,
							"name": "registerDocumentSemanticTokensProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5259,
									"character": 58
								}
							],
							"signatures": [
								{
									"id": 4494,
									"name": "registerDocumentSemanticTokensProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a document semantic tokens provider"
									},
									"parameters": [
										{
											"id": 4495,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4496,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5034,
												"name": "DocumentSemanticTokensProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4425,
							"name": "registerDocumentSymbolProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5174,
									"character": 50
								}
							],
							"signatures": [
								{
									"id": 4426,
									"name": "registerDocumentSymbolProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a document symbol provider (used by e.g. outline)."
									},
									"parameters": [
										{
											"id": 4427,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4428,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4836,
												"name": "DocumentSymbolProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4481,
							"name": "registerFoldingRangeProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5244,
									"character": 48
								}
							],
							"signatures": [
								{
									"id": 4482,
									"name": "registerFoldingRangeProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a folding range provider"
									},
									"parameters": [
										{
											"id": 4483,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4484,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4923,
												"name": "FoldingRangeProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4421,
							"name": "registerHoverProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5169,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 4422,
									"name": "registerHoverProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a hover provider (used by e.g. editor hover)."
									},
									"parameters": [
										{
											"id": 4423,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4424,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4601,
												"name": "HoverProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4441,
							"name": "registerImplementationProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5194,
									"character": 50
								}
							],
							"signatures": [
								{
									"id": 4442,
									"name": "registerImplementationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a implementation provider (used by e.g. go to implementation)."
									},
									"parameters": [
										{
											"id": 4443,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4444,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4786,
												"name": "ImplementationProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4469,
							"name": "registerLinkProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5229,
									"character": 40
								}
							],
							"signatures": [
								{
									"id": 4470,
									"name": "registerLinkProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a link provider that can find links in text."
									},
									"parameters": [
										{
											"id": 4471,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4472,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4882,
												"name": "LinkProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4433,
							"name": "registerLinkedEditingRangeProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5184,
									"character": 54
								}
							],
							"signatures": [
								{
									"id": 4434,
									"name": "registerLinkedEditingRangeProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register an linked editing range provider."
									},
									"parameters": [
										{
											"id": 4435,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4436,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4747,
												"name": "LinkedEditingRangeProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4465,
							"name": "registerOnTypeFormattingEditProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5224,
									"character": 56
								}
							],
							"signatures": [
								{
									"id": 4466,
									"name": "registerOnTypeFormattingEditProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a formatter than can do formatting as the user types."
									},
									"parameters": [
										{
											"id": 4467,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4468,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4865,
												"name": "OnTypeFormattingEditProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4409,
							"name": "registerReferenceProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5154,
									"character": 45
								}
							],
							"signatures": [
								{
									"id": 4410,
									"name": "registerReferenceProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a reference provider (used by e.g. reference search)."
									},
									"parameters": [
										{
											"id": 4411,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4412,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4758,
												"name": "ReferenceProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4413,
							"name": "registerRenameProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5159,
									"character": 42
								}
							],
							"signatures": [
								{
									"id": 4414,
									"name": "registerRenameProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a rename provider (used by e.g. rename symbol)."
									},
									"parameters": [
										{
											"id": 4415,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4416,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4972,
												"name": "RenameProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4489,
							"name": "registerSelectionRangeProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5254,
									"character": 50
								}
							],
							"signatures": [
								{
									"id": 4490,
									"name": "registerSelectionRangeProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a selection range provider"
									},
									"parameters": [
										{
											"id": 4491,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4492,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4916,
												"name": "SelectionRangeProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4417,
							"name": "registerSignatureHelpProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5164,
									"character": 49
								}
							],
							"signatures": [
								{
									"id": 4418,
									"name": "registerSignatureHelpProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a signature help provider (used by e.g. parameter hints)."
									},
									"parameters": [
										{
											"id": 4419,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4420,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4725,
												"name": "SignatureHelpProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4445,
							"name": "registerTypeDefinitionProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5199,
									"character": 50
								}
							],
							"signatures": [
								{
									"id": 4446,
									"name": "registerTypeDefinitionProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a type definition provider (used by e.g. go to type definition)."
									},
									"parameters": [
										{
											"id": 4447,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4448,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4792,
												"name": "TypeDefinitionProvider"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4398,
							"name": "setColorMap",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5139,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 4399,
									"name": "setColorMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Change the color map that is used for token colors.\nSupported formats (hex): #RRGGBB, $RRGGBBAA, #RGB, #RGBA"
									},
									"parameters": [
										{
											"id": 4400,
											"name": "colorMap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 4394,
							"name": "setLanguageConfiguration",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5046,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 4395,
									"name": "setLanguageConfiguration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the editing configuration for a language."
									},
									"parameters": [
										{
											"id": 4396,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4397,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4541,
												"name": "LanguageConfiguration"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4405,
							"name": "setMonarchTokensProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5149,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 4406,
									"name": "setMonarchTokensProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the tokens provider for a language (monarch implementation)."
									},
									"parameters": [
										{
											"id": 4407,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4408,
											"name": "languageDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 5063,
														"name": "IMonarchLanguage"
													},
													{
														"type": "reference",
														"id": 3,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5063,
																"name": "IMonarchLanguage"
															}
														],
														"name": "Thenable"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						},
						{
							"id": 4401,
							"name": "setTokensProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 5144,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 4402,
									"name": "setTokensProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the tokens provider for a language (manual implementation)."
									},
									"parameters": [
										{
											"id": 4403,
											"name": "languageId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4404,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 4510,
														"name": "TokensProvider"
													},
													{
														"type": "reference",
														"id": 4517,
														"name": "EncodedTokensProvider"
													},
													{
														"type": "reference",
														"id": 3,
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 4510,
																		"name": "TokensProvider"
																	},
																	{
																		"type": "reference",
																		"id": 4517,
																		"name": "EncodedTokensProvider"
																	}
																]
															}
														],
														"name": "Thenable"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IDisposable"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"kind": 2,
							"children": [
								5399,
								5484,
								5448,
								5098
							]
						},
						{
							"title": "Enumerations",
							"kind": 4,
							"children": [
								4643,
								4607,
								4641,
								4669,
								4734,
								4581,
								4716,
								4798,
								4825
							]
						},
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								4934
							]
						},
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								4688,
								4528,
								4696,
								4531,
								4989,
								4993,
								4997,
								4984,
								4538,
								4673,
								4646,
								4636,
								4676,
								4664,
								4780,
								4774,
								4904,
								4850,
								4738,
								4741,
								4857,
								5046,
								5034,
								4827,
								4836,
								4517,
								4586,
								4922,
								4559,
								4930,
								4923,
								4562,
								4847,
								4598,
								4601,
								4574,
								4577,
								4892,
								4901,
								4897,
								4570,
								4507,
								5083,
								5077,
								5054,
								4504,
								4874,
								4878,
								5063,
								5094,
								4590,
								4501,
								4786,
								4554,
								5008,
								5014,
								4541,
								4882,
								4747,
								4753,
								4765,
								4768,
								4565,
								4865,
								4700,
								4756,
								4758,
								4967,
								4969,
								4972,
								4914,
								4916,
								5024,
								5027,
								5031,
								5021,
								4708,
								4720,
								4725,
								4712,
								4703,
								4510,
								4792,
								4965,
								4942,
								4955,
								4946,
								4960
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								4573,
								4773,
								5093,
								5081,
								5082,
								5075,
								5076,
								4596,
								4842
							]
						},
						{
							"title": "Events",
							"kind": 8388608,
							"children": [
								4388
							]
						},
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								4385,
								4383,
								4380,
								4453,
								4449,
								4477,
								4473,
								4485,
								4437,
								4457,
								4429,
								4461,
								4497,
								4493,
								4425,
								4481,
								4421,
								4441,
								4469,
								4433,
								4465,
								4409,
								4413,
								4489,
								4417,
								4445,
								4398,
								4394,
								4405,
								4401
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 5022,
							"character": 34
						}
					]
				},
				{
					"id": 5528,
					"name": "worker",
					"kind": 2,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5529,
							"name": "IMirrorModel",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5530,
									"name": "uri",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6613,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 5531,
									"name": "version",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6614,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5532,
									"name": "getValue",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5533,
											"name": "getValue",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5530,
										5531
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5532
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6612,
									"character": 33
								}
							]
						},
						{
							"id": 5534,
							"name": "IWorkerContext",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5535,
									"name": "host",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "A proxy to the main thread host object."
									},
									"sources": [
										{
											"fileName": "monaco.ts",
											"line": 6622,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "H"
									}
								},
								{
									"id": 5536,
									"name": "getMirrorModels",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5537,
											"name": "getMirrorModels",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get all available mirror models in this worker."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 5529,
													"name": "IMirrorModel"
												}
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5535
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5536
									]
								}
							],
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 6618,
									"character": 35
								}
							],
							"typeParameter": [
								{
									"id": 5538,
									"name": "H",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								5529,
								5534
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 6609,
							"character": 31
						}
					]
				},
				{
					"id": 130,
					"name": "KeyCode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "Virtual Key Codes, the value does not hold any inherent meaning.\nInspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\nBut these are \"more general\", as they should work across browsers & OS`s."
					},
					"children": [
						{
							"id": 241,
							"name": "ABNT_C1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 392,
									"character": 15
								}
							],
							"defaultValue": "110"
						},
						{
							"id": 242,
							"name": "ABNT_C2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 393,
									"character": 15
								}
							],
							"defaultValue": "111"
						},
						{
							"id": 137,
							"name": "Alt",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 235,
									"character": 11
								}
							],
							"defaultValue": "6"
						},
						{
							"id": 132,
							"name": "Backspace",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 230,
									"character": 17
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 139,
							"name": "CapsLock",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 237,
									"character": 16
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 189,
							"name": "ContextMenu",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 287,
									"character": 19
								}
							],
							"defaultValue": "58"
						},
						{
							"id": 136,
							"name": "Ctrl",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 234,
									"character": 12
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 151,
							"name": "Delete",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 249,
									"character": 14
								}
							],
							"defaultValue": "20"
						},
						{
							"id": 149,
							"name": "DownArrow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 247,
									"character": 17
								}
							],
							"defaultValue": "18"
						},
						{
							"id": 144,
							"name": "End",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 242,
									"character": 11
								}
							],
							"defaultValue": "13"
						},
						{
							"id": 134,
							"name": "Enter",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 232,
									"character": 13
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 140,
							"name": "Escape",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 238,
									"character": 14
								}
							],
							"defaultValue": "9"
						},
						{
							"id": 190,
							"name": "F1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 288,
									"character": 10
								}
							],
							"defaultValue": "59"
						},
						{
							"id": 199,
							"name": "F10",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 297,
									"character": 11
								}
							],
							"defaultValue": "68"
						},
						{
							"id": 200,
							"name": "F11",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 298,
									"character": 11
								}
							],
							"defaultValue": "69"
						},
						{
							"id": 201,
							"name": "F12",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 299,
									"character": 11
								}
							],
							"defaultValue": "70"
						},
						{
							"id": 202,
							"name": "F13",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 300,
									"character": 11
								}
							],
							"defaultValue": "71"
						},
						{
							"id": 203,
							"name": "F14",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 301,
									"character": 11
								}
							],
							"defaultValue": "72"
						},
						{
							"id": 204,
							"name": "F15",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 302,
									"character": 11
								}
							],
							"defaultValue": "73"
						},
						{
							"id": 205,
							"name": "F16",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 303,
									"character": 11
								}
							],
							"defaultValue": "74"
						},
						{
							"id": 206,
							"name": "F17",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 304,
									"character": 11
								}
							],
							"defaultValue": "75"
						},
						{
							"id": 207,
							"name": "F18",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 305,
									"character": 11
								}
							],
							"defaultValue": "76"
						},
						{
							"id": 208,
							"name": "F19",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 306,
									"character": 11
								}
							],
							"defaultValue": "77"
						},
						{
							"id": 191,
							"name": "F2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 289,
									"character": 10
								}
							],
							"defaultValue": "60"
						},
						{
							"id": 192,
							"name": "F3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 290,
									"character": 10
								}
							],
							"defaultValue": "61"
						},
						{
							"id": 193,
							"name": "F4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 291,
									"character": 10
								}
							],
							"defaultValue": "62"
						},
						{
							"id": 194,
							"name": "F5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 292,
									"character": 10
								}
							],
							"defaultValue": "63"
						},
						{
							"id": 195,
							"name": "F6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 293,
									"character": 10
								}
							],
							"defaultValue": "64"
						},
						{
							"id": 196,
							"name": "F7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 294,
									"character": 10
								}
							],
							"defaultValue": "65"
						},
						{
							"id": 197,
							"name": "F8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 295,
									"character": 10
								}
							],
							"defaultValue": "66"
						},
						{
							"id": 198,
							"name": "F9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 296,
									"character": 10
								}
							],
							"defaultValue": "67"
						},
						{
							"id": 145,
							"name": "Home",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 243,
									"character": 12
								}
							],
							"defaultValue": "14"
						},
						{
							"id": 150,
							"name": "Insert",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 248,
									"character": 14
								}
							],
							"defaultValue": "19"
						},
						{
							"id": 152,
							"name": "KEY_0",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 250,
									"character": 13
								}
							],
							"defaultValue": "21"
						},
						{
							"id": 153,
							"name": "KEY_1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 251,
									"character": 13
								}
							],
							"defaultValue": "22"
						},
						{
							"id": 154,
							"name": "KEY_2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 252,
									"character": 13
								}
							],
							"defaultValue": "23"
						},
						{
							"id": 155,
							"name": "KEY_3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 253,
									"character": 13
								}
							],
							"defaultValue": "24"
						},
						{
							"id": 156,
							"name": "KEY_4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 254,
									"character": 13
								}
							],
							"defaultValue": "25"
						},
						{
							"id": 157,
							"name": "KEY_5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 255,
									"character": 13
								}
							],
							"defaultValue": "26"
						},
						{
							"id": 158,
							"name": "KEY_6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 256,
									"character": 13
								}
							],
							"defaultValue": "27"
						},
						{
							"id": 159,
							"name": "KEY_7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 257,
									"character": 13
								}
							],
							"defaultValue": "28"
						},
						{
							"id": 160,
							"name": "KEY_8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 258,
									"character": 13
								}
							],
							"defaultValue": "29"
						},
						{
							"id": 161,
							"name": "KEY_9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 259,
									"character": 13
								}
							],
							"defaultValue": "30"
						},
						{
							"id": 162,
							"name": "KEY_A",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 260,
									"character": 13
								}
							],
							"defaultValue": "31"
						},
						{
							"id": 163,
							"name": "KEY_B",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 261,
									"character": 13
								}
							],
							"defaultValue": "32"
						},
						{
							"id": 164,
							"name": "KEY_C",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 262,
									"character": 13
								}
							],
							"defaultValue": "33"
						},
						{
							"id": 165,
							"name": "KEY_D",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 263,
									"character": 13
								}
							],
							"defaultValue": "34"
						},
						{
							"id": 166,
							"name": "KEY_E",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 264,
									"character": 13
								}
							],
							"defaultValue": "35"
						},
						{
							"id": 167,
							"name": "KEY_F",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 265,
									"character": 13
								}
							],
							"defaultValue": "36"
						},
						{
							"id": 168,
							"name": "KEY_G",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 266,
									"character": 13
								}
							],
							"defaultValue": "37"
						},
						{
							"id": 169,
							"name": "KEY_H",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 267,
									"character": 13
								}
							],
							"defaultValue": "38"
						},
						{
							"id": 170,
							"name": "KEY_I",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 268,
									"character": 13
								}
							],
							"defaultValue": "39"
						},
						{
							"id": 240,
							"name": "KEY_IN_COMPOSITION",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Cover all key codes when IME is processing input."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 391,
									"character": 26
								}
							],
							"defaultValue": "109"
						},
						{
							"id": 171,
							"name": "KEY_J",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 269,
									"character": 13
								}
							],
							"defaultValue": "40"
						},
						{
							"id": 172,
							"name": "KEY_K",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 270,
									"character": 13
								}
							],
							"defaultValue": "41"
						},
						{
							"id": 173,
							"name": "KEY_L",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 271,
									"character": 13
								}
							],
							"defaultValue": "42"
						},
						{
							"id": 174,
							"name": "KEY_M",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 272,
									"character": 13
								}
							],
							"defaultValue": "43"
						},
						{
							"id": 175,
							"name": "KEY_N",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 273,
									"character": 13
								}
							],
							"defaultValue": "44"
						},
						{
							"id": 176,
							"name": "KEY_O",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 274,
									"character": 13
								}
							],
							"defaultValue": "45"
						},
						{
							"id": 177,
							"name": "KEY_P",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 275,
									"character": 13
								}
							],
							"defaultValue": "46"
						},
						{
							"id": 178,
							"name": "KEY_Q",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 276,
									"character": 13
								}
							],
							"defaultValue": "47"
						},
						{
							"id": 179,
							"name": "KEY_R",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 277,
									"character": 13
								}
							],
							"defaultValue": "48"
						},
						{
							"id": 180,
							"name": "KEY_S",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 278,
									"character": 13
								}
							],
							"defaultValue": "49"
						},
						{
							"id": 181,
							"name": "KEY_T",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 279,
									"character": 13
								}
							],
							"defaultValue": "50"
						},
						{
							"id": 182,
							"name": "KEY_U",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 280,
									"character": 13
								}
							],
							"defaultValue": "51"
						},
						{
							"id": 183,
							"name": "KEY_V",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 281,
									"character": 13
								}
							],
							"defaultValue": "52"
						},
						{
							"id": 184,
							"name": "KEY_W",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 282,
									"character": 13
								}
							],
							"defaultValue": "53"
						},
						{
							"id": 185,
							"name": "KEY_X",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 283,
									"character": 13
								}
							],
							"defaultValue": "54"
						},
						{
							"id": 186,
							"name": "KEY_Y",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 284,
									"character": 13
								}
							],
							"defaultValue": "55"
						},
						{
							"id": 187,
							"name": "KEY_Z",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 285,
									"character": 13
								}
							],
							"defaultValue": "56"
						},
						{
							"id": 146,
							"name": "LeftArrow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 244,
									"character": 17
								}
							],
							"defaultValue": "15"
						},
						{
							"id": 243,
							"name": "MAX_VALUE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Placed last to cover the length of the enum.\nPlease do not depend on this value!"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 398,
									"character": 17
								}
							],
							"defaultValue": "112"
						},
						{
							"id": 188,
							"name": "Meta",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 286,
									"character": 12
								}
							],
							"defaultValue": "57"
						},
						{
							"id": 224,
							"name": "NUMPAD_0",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 372,
									"character": 16
								}
							],
							"defaultValue": "93"
						},
						{
							"id": 225,
							"name": "NUMPAD_1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 373,
									"character": 16
								}
							],
							"defaultValue": "94"
						},
						{
							"id": 226,
							"name": "NUMPAD_2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 374,
									"character": 16
								}
							],
							"defaultValue": "95"
						},
						{
							"id": 227,
							"name": "NUMPAD_3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 375,
									"character": 16
								}
							],
							"defaultValue": "96"
						},
						{
							"id": 228,
							"name": "NUMPAD_4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 376,
									"character": 16
								}
							],
							"defaultValue": "97"
						},
						{
							"id": 229,
							"name": "NUMPAD_5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 377,
									"character": 16
								}
							],
							"defaultValue": "98"
						},
						{
							"id": 230,
							"name": "NUMPAD_6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 378,
									"character": 16
								}
							],
							"defaultValue": "99"
						},
						{
							"id": 231,
							"name": "NUMPAD_7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 379,
									"character": 16
								}
							],
							"defaultValue": "100"
						},
						{
							"id": 232,
							"name": "NUMPAD_8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 380,
									"character": 16
								}
							],
							"defaultValue": "101"
						},
						{
							"id": 233,
							"name": "NUMPAD_9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 381,
									"character": 16
								}
							],
							"defaultValue": "102"
						},
						{
							"id": 235,
							"name": "NUMPAD_ADD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 383,
									"character": 18
								}
							],
							"defaultValue": "104"
						},
						{
							"id": 238,
							"name": "NUMPAD_DECIMAL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 386,
									"character": 22
								}
							],
							"defaultValue": "107"
						},
						{
							"id": 239,
							"name": "NUMPAD_DIVIDE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 387,
									"character": 21
								}
							],
							"defaultValue": "108"
						},
						{
							"id": 234,
							"name": "NUMPAD_MULTIPLY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 382,
									"character": 23
								}
							],
							"defaultValue": "103"
						},
						{
							"id": 236,
							"name": "NUMPAD_SEPARATOR",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 384,
									"character": 24
								}
							],
							"defaultValue": "105"
						},
						{
							"id": 237,
							"name": "NUMPAD_SUBTRACT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 385,
									"character": 23
								}
							],
							"defaultValue": "106"
						},
						{
							"id": 209,
							"name": "NumLock",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 307,
									"character": 15
								}
							],
							"defaultValue": "78"
						},
						{
							"id": 223,
							"name": "OEM_102",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Either the angle bracket key or the backslash key on the RT 102-key keyboard."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 371,
									"character": 15
								}
							],
							"defaultValue": "92"
						},
						{
							"id": 222,
							"name": "OEM_8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Used for miscellaneous characters; it can vary by keyboard."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 367,
									"character": 13
								}
							],
							"defaultValue": "91"
						},
						{
							"id": 143,
							"name": "PageDown",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 241,
									"character": 16
								}
							],
							"defaultValue": "12"
						},
						{
							"id": 142,
							"name": "PageUp",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 240,
									"character": 14
								}
							],
							"defaultValue": "11"
						},
						{
							"id": 138,
							"name": "PauseBreak",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 236,
									"character": 18
								}
							],
							"defaultValue": "7"
						},
						{
							"id": 148,
							"name": "RightArrow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 246,
									"character": 18
								}
							],
							"defaultValue": "17"
						},
						{
							"id": 210,
							"name": "ScrollLock",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 308,
									"character": 18
								}
							],
							"defaultValue": "79"
						},
						{
							"id": 135,
							"name": "Shift",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 233,
									"character": 13
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 141,
							"name": "Space",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 239,
									"character": 13
								}
							],
							"defaultValue": "10"
						},
						{
							"id": 133,
							"name": "Tab",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 231,
									"character": 11
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 219,
							"name": "US_BACKSLASH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Used for miscellaneous characters; it can vary by keyboard.\nFor the US standard keyboard, the '\\|' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 353,
									"character": 20
								}
							],
							"defaultValue": "88"
						},
						{
							"id": 217,
							"name": "US_BACKTICK",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Used for miscellaneous characters; it can vary by keyboard.\nFor the US standard keyboard, the '`~' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 343,
									"character": 19
								}
							],
							"defaultValue": "86"
						},
						{
							"id": 220,
							"name": "US_CLOSE_SQUARE_BRACKET",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Used for miscellaneous characters; it can vary by keyboard.\nFor the US standard keyboard, the ']}' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 358,
									"character": 31
								}
							],
							"defaultValue": "89"
						},
						{
							"id": 213,
							"name": "US_COMMA",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "For any country/region, the ',' key\nFor the US standard keyboard, the ',<' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 323,
									"character": 16
								}
							],
							"defaultValue": "82"
						},
						{
							"id": 215,
							"name": "US_DOT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "For any country/region, the '.' key\nFor the US standard keyboard, the '.>' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 333,
									"character": 14
								}
							],
							"defaultValue": "84"
						},
						{
							"id": 212,
							"name": "US_EQUAL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "For any country/region, the '+' key\nFor the US standard keyboard, the '=+' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 318,
									"character": 16
								}
							],
							"defaultValue": "81"
						},
						{
							"id": 214,
							"name": "US_MINUS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "For any country/region, the '-' key\nFor the US standard keyboard, the '-_' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 328,
									"character": 16
								}
							],
							"defaultValue": "83"
						},
						{
							"id": 218,
							"name": "US_OPEN_SQUARE_BRACKET",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Used for miscellaneous characters; it can vary by keyboard.\nFor the US standard keyboard, the '[{' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 348,
									"character": 30
								}
							],
							"defaultValue": "87"
						},
						{
							"id": 221,
							"name": "US_QUOTE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Used for miscellaneous characters; it can vary by keyboard.\nFor the US standard keyboard, the ''\"' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 363,
									"character": 16
								}
							],
							"defaultValue": "90"
						},
						{
							"id": 211,
							"name": "US_SEMICOLON",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Used for miscellaneous characters; it can vary by keyboard.\nFor the US standard keyboard, the ';:' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 313,
									"character": 20
								}
							],
							"defaultValue": "80"
						},
						{
							"id": 216,
							"name": "US_SLASH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Used for miscellaneous characters; it can vary by keyboard.\nFor the US standard keyboard, the '/?' key"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 338,
									"character": 16
								}
							],
							"defaultValue": "85"
						},
						{
							"id": 131,
							"name": "Unknown",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Placed first to cover the 0 value of the enum."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 229,
									"character": 15
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 147,
							"name": "UpArrow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 245,
									"character": 15
								}
							],
							"defaultValue": "16"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								241,
								242,
								137,
								132,
								139,
								189,
								136,
								151,
								149,
								144,
								134,
								140,
								190,
								199,
								200,
								201,
								202,
								203,
								204,
								205,
								206,
								207,
								208,
								191,
								192,
								193,
								194,
								195,
								196,
								197,
								198,
								145,
								150,
								152,
								153,
								154,
								155,
								156,
								157,
								158,
								159,
								160,
								161,
								162,
								163,
								164,
								165,
								166,
								167,
								168,
								169,
								170,
								240,
								171,
								172,
								173,
								174,
								175,
								176,
								177,
								178,
								179,
								180,
								181,
								182,
								183,
								184,
								185,
								186,
								187,
								146,
								243,
								188,
								224,
								225,
								226,
								227,
								228,
								229,
								230,
								231,
								232,
								233,
								235,
								238,
								239,
								234,
								236,
								237,
								209,
								223,
								222,
								143,
								142,
								138,
								148,
								210,
								135,
								141,
								133,
								219,
								217,
								220,
								213,
								215,
								212,
								214,
								218,
								221,
								211,
								216,
								131,
								147
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 225,
							"character": 23
						}
					]
				},
				{
					"id": 41,
					"name": "MarkerSeverity",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 45,
							"name": "Error",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 52,
									"character": 13
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 42,
							"name": "Hint",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 49,
									"character": 12
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 43,
							"name": "Info",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 50,
									"character": 12
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 44,
							"name": "Warning",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 51,
									"character": 15
								}
							],
							"defaultValue": "4"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								45,
								42,
								43,
								44
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 48,
							"character": 30
						}
					]
				},
				{
					"id": 38,
					"name": "MarkerTag",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 40,
							"name": "Deprecated",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 45,
									"character": 18
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 39,
							"name": "Unnecessary",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 44,
									"character": 19
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								40,
								39
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 43,
							"character": 25
						}
					]
				},
				{
					"id": 631,
					"name": "SelectionDirection",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "The direction of a selection."
					},
					"children": [
						{
							"id": 632,
							"name": "LTR",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "The selection starts above where it ends."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 824,
									"character": 11
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 633,
							"name": "RTL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "The selection starts below where it ends."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 828,
									"character": 11
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								632,
								633
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 820,
							"character": 34
						}
					]
				},
				{
					"id": 46,
					"name": "CancellationTokenSource",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 47,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 48,
									"name": "new CancellationTokenSource",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 49,
											"name": "parent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 57,
												"name": "CancellationToken"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 46,
										"name": "CancellationTokenSource"
									}
								}
							]
						},
						{
							"id": 50,
							"name": "token",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 57,
									"character": 17
								}
							],
							"getSignature": [
								{
									"id": 51,
									"name": "token",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 57,
										"name": "CancellationToken"
									}
								}
							]
						},
						{
							"id": 52,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 58,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 53,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 54,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 59,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 55,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 56,
											"name": "cancel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								47
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								50
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								52,
								54
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 55,
							"character": 40
						}
					]
				},
				{
					"id": 27,
					"name": "Emitter",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A helper that allows to emit and listen to typed events"
					},
					"children": [
						{
							"id": 28,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 29,
									"name": "new Emitter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 30,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"id": 27,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Emitter"
									}
								}
							]
						},
						{
							"id": 31,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 37,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "IEvent"
							}
						},
						{
							"id": 35,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 39,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 36,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 32,
							"name": "fire",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 38,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "fire",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 34,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								28
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								31
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								35,
								32
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 35,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 37,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					]
				},
				{
					"id": 244,
					"name": "KeyMod",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 253,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 254,
									"name": "new KeyMod",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 244,
										"name": "KeyMod"
									}
								}
							]
						},
						{
							"id": 247,
							"name": "Alt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 403,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 245,
							"name": "CtrlCmd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 401,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 246,
							"name": "Shift",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 402,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 248,
							"name": "WinCtrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 404,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 249,
							"name": "chord",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 405,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 250,
									"name": "chord",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 251,
											"name": "firstPart",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 252,
											"name": "secondPart",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								253
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								247,
								245,
								246,
								248
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								249
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 400,
							"character": 23
						}
					]
				},
				{
					"id": 311,
					"name": "Position",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A position in the editor."
					},
					"children": [
						{
							"id": 334,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 335,
									"name": "new Position",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 336,
											"name": "lineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 337,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 339,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "column (the first character in a line is between column 1 and column 2)"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 485,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 338,
							"name": "lineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "line number (starts at 1)"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 481,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 357,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 536,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 358,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clone this position."
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 344,
							"name": "delta",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 500,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 345,
									"name": "delta",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Derive a new position from this position."
									},
									"parameters": [
										{
											"id": 346,
											"name": "deltaLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "line number delta"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 347,
											"name": "deltaColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "column delta\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 348,
							"name": "equals",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 504,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 349,
									"name": "equals",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if this position equals other position"
									},
									"parameters": [
										{
											"id": 350,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 351,
							"name": "isBefore",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 513,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 352,
									"name": "isBefore",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if this position is before other position.\nIf the two positions are equal, the result will be false."
									},
									"parameters": [
										{
											"id": 353,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 354,
							"name": "isBeforeOrEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 523,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 355,
									"name": "isBeforeOrEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if this position is before other position.\nIf the two positions are equal, the result will be true."
									},
									"parameters": [
										{
											"id": 356,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 359,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 540,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 360,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert to a human-readable representation."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 340,
							"name": "with",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 493,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 341,
									"name": "with",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new position from this position."
									},
									"parameters": [
										{
											"id": 342,
											"name": "newLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "new line number"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 343,
											"name": "newColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "new column\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 324,
							"name": "compare",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 532,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 325,
									"name": "compare",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function that compares positions, useful for sorting"
									},
									"parameters": [
										{
											"id": 326,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										},
										{
											"id": 327,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 312,
							"name": "equals",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 508,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 313,
									"name": "equals",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if position `a` equals position `b`"
									},
									"parameters": [
										{
											"id": 314,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										},
										{
											"id": 315,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 316,
							"name": "isBefore",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 518,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 317,
									"name": "isBefore",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if position `a` is before position `b`.\nIf the two positions are equal, the result will be false."
									},
									"parameters": [
										{
											"id": 318,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										},
										{
											"id": 319,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 320,
							"name": "isBeforeOrEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 528,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 321,
									"name": "isBeforeOrEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if position `a` is before position `b`.\nIf the two positions are equal, the result will be true."
									},
									"parameters": [
										{
											"id": 322,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										},
										{
											"id": 323,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 331,
							"name": "isIPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 548,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 332,
									"name": "isIPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `obj` is an `IPosition`."
									},
									"parameters": [
										{
											"id": 333,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "obj",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 308,
											"name": "IPosition"
										}
									}
								}
							]
						},
						{
							"id": 328,
							"name": "lift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 544,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 329,
									"name": "lift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a `Position` from an `IPosition`."
									},
									"parameters": [
										{
											"id": 330,
											"name": "pos",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								334
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								339,
								338
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								357,
								344,
								348,
								351,
								354,
								359,
								340,
								324,
								312,
								316,
								320,
								331,
								328
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 477,
							"character": 25
						}
					]
				},
				{
					"id": 366,
					"name": "Range",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)"
					},
					"children": [
						{
							"id": 434,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 435,
									"name": "new Range",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 436,
											"name": "startLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 437,
											"name": "startColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 438,
											"name": "endLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 439,
											"name": "endColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 443,
							"name": "endColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Column on which the range ends in line `endLineNumber`."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 592,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 442,
							"name": "endLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Line number on which the range ends."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 588,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 441,
							"name": "startColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Column on which the range starts in line `startLineNumber` (starts at 1)."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 584,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 440,
							"name": "startLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Line number on which the range starts (starts at 1)."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 580,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 478,
							"name": "collapseToStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 683,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 479,
									"name": "collapseToStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new empty range using this range's start position."
									},
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 446,
							"name": "containsPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 605,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 447,
									"name": "containsPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if position is in this range. If the position is at the edges, will return true."
									},
									"parameters": [
										{
											"id": 448,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 449,
							"name": "containsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 613,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 450,
									"name": "containsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if range is in this range. If the range is equal to this range, will return true."
									},
									"parameters": [
										{
											"id": 451,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 461,
							"name": "equalsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 647,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 462,
									"name": "equalsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if this range equals other."
									},
									"parameters": [
										{
											"id": 463,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 464,
							"name": "getEndPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 655,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 465,
									"name": "getEndPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the end position (which will be after or equal to the start position)"
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 466,
							"name": "getStartPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 663,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 467,
									"name": "getStartPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the start position (which will be before or equal to the end position)"
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 458,
							"name": "intersectRanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 639,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 459,
									"name": "intersectRanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A intersection of the two ranges."
									},
									"parameters": [
										{
											"id": 460,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 444,
							"name": "isEmpty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 597,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 445,
									"name": "isEmpty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if this range is empty."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 455,
							"name": "plusRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 630,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 456,
									"name": "plusRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A reunion of the two ranges.\nThe smallest position will be used as the start point, and the largest one as the end point."
									},
									"parameters": [
										{
											"id": 457,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 470,
							"name": "setEndPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 675,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 471,
									"name": "setEndPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new range using this range's start position, and using endLineNumber and endColumn as the end position."
									},
									"parameters": [
										{
											"id": 472,
											"name": "endLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 473,
											"name": "endColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 474,
							"name": "setStartPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 679,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 475,
									"name": "setStartPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new range using this range's end position, and using startLineNumber and startColumn as the start position."
									},
									"parameters": [
										{
											"id": 476,
											"name": "startLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 477,
											"name": "startColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 452,
							"name": "strictContainsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 621,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 453,
									"name": "strictContainsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true."
									},
									"parameters": [
										{
											"id": 454,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 468,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 671,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 469,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Transform to a user presentable string representation."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 419,
							"name": "areIntersecting",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 705,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 420,
									"name": "areIntersecting",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if the two ranges are intersecting. If the ranges are touching it returns true."
									},
									"parameters": [
										{
											"id": 421,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 422,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 415,
							"name": "areIntersectingOrTouching",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 701,
									"character": 40
								}
							],
							"signatures": [
								{
									"id": 416,
									"name": "areIntersectingOrTouching",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if the two ranges are touching in any way."
									},
									"parameters": [
										{
											"id": 417,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 418,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 400,
							"name": "collapseToStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 687,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 401,
									"name": "collapseToStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new empty range using this range's start position."
									},
									"parameters": [
										{
											"id": 402,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 427,
							"name": "compareRangesUsingEnds",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 715,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 428,
									"name": "compareRangesUsingEnds",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function that compares ranges, useful for sorting ranges\nIt will first compare ranges on the endPosition and then on the startPosition"
									},
									"parameters": [
										{
											"id": 429,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 430,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 423,
							"name": "compareRangesUsingStarts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 710,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 424,
									"name": "compareRangesUsingStarts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function that compares ranges, useful for sorting ranges\nIt will first compare ranges on the startPosition and then on the endPosition"
									},
									"parameters": [
										{
											"id": 425,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 426,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 370,
							"name": "containsPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 609,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 371,
									"name": "containsPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `position` is in `range`. If the position is at the edges, will return true."
									},
									"parameters": [
										{
											"id": 372,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 373,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 374,
							"name": "containsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 617,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 375,
									"name": "containsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `otherRange` is in `range`. If the ranges are equal, will return true."
									},
									"parameters": [
										{
											"id": 376,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 377,
											"name": "otherRange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 390,
							"name": "equalsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 651,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 391,
									"name": "equalsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if range `a` equals `b`."
									},
									"parameters": [
										{
											"id": 392,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 393,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 403,
							"name": "fromPositions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 688,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 404,
									"name": "fromPositions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 405,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										},
										{
											"id": 406,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 394,
							"name": "getEndPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 659,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 395,
									"name": "getEndPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the end position (which will be after or equal to the start position)"
									},
									"parameters": [
										{
											"id": 396,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 397,
							"name": "getStartPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 667,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 398,
									"name": "getStartPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the start position (which will be before or equal to the end position)"
									},
									"parameters": [
										{
											"id": 399,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 386,
							"name": "intersectRanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 643,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 387,
									"name": "intersectRanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A intersection of the two ranges."
									},
									"parameters": [
										{
											"id": 388,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 389,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 367,
							"name": "isEmpty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 601,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 368,
									"name": "isEmpty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `range` is empty."
									},
									"parameters": [
										{
											"id": 369,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 412,
							"name": "isIRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 697,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 413,
									"name": "isIRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `obj` is an `IRange`."
									},
									"parameters": [
										{
											"id": 414,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "obj",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 361,
											"name": "IRange"
										}
									}
								}
							]
						},
						{
							"id": 407,
							"name": "lift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 692,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 408,
									"name": "lift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a `Range` from an `IRange`."
									},
									"parameters": [
										{
											"id": 409,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											}
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 410,
									"name": "lift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 411,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 382,
							"name": "plusRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 635,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 383,
									"name": "plusRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A reunion of the two ranges.\nThe smallest position will be used as the start point, and the largest one as the end point."
									},
									"parameters": [
										{
											"id": 384,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 385,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									}
								}
							]
						},
						{
							"id": 431,
							"name": "spansMultipleLines",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 719,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 432,
									"name": "spansMultipleLines",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if the range spans multiple lines."
									},
									"parameters": [
										{
											"id": 433,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 378,
							"name": "strictContainsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 625,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 379,
									"name": "strictContainsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false."
									},
									"parameters": [
										{
											"id": 380,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 381,
											"name": "otherRange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								434
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								443,
								442,
								441,
								440
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								478,
								446,
								449,
								461,
								464,
								466,
								458,
								444,
								455,
								470,
								474,
								452,
								468,
								419,
								415,
								400,
								427,
								423,
								370,
								374,
								390,
								403,
								394,
								397,
								386,
								367,
								412,
								407,
								382,
								431,
								378
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 576,
							"character": 22
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 485,
							"name": "Selection"
						}
					]
				},
				{
					"id": 485,
					"name": "Selection",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A selection in the editor.\nThe selection is a range that has an orientation."
					},
					"children": [
						{
							"id": 574,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 575,
									"name": "new Selection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 576,
											"name": "selectionStartLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 577,
											"name": "selectionStartColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 578,
											"name": "positionLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 579,
											"name": "positionColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 485,
										"name": "Selection"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 435,
										"name": "Range.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 434,
								"name": "Range.constructor"
							}
						},
						{
							"id": 604,
							"name": "endColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Column on which the range ends in line `endLineNumber`."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 592,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 443,
								"name": "Range.endColumn"
							}
						},
						{
							"id": 603,
							"name": "endLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Line number on which the range ends."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 588,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 442,
								"name": "Range.endLineNumber"
							}
						},
						{
							"id": 583,
							"name": "positionColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The column on `positionLineNumber` where the selection has ended."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 765,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 582,
							"name": "positionLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The line number on which the selection has ended."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 761,
									"character": 35
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 581,
							"name": "selectionStartColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The column on `selectionStartLineNumber` where the selection has started."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 757,
									"character": 37
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 580,
							"name": "selectionStartLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The line number on which the selection has started."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 753,
									"character": 41
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 602,
							"name": "startColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Column on which the range starts in line `startLineNumber` (starts at 1)."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 584,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 441,
								"name": "Range.startColumn"
							}
						},
						{
							"id": 601,
							"name": "startLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Line number on which the range starts (starts at 1)."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 580,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 440,
								"name": "Range.startLineNumber"
							}
						},
						{
							"id": 629,
							"name": "collapseToStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 683,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 630,
									"name": "collapseToStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new empty range using this range's start position."
									},
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 479,
										"name": "Range.collapseToStart"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 478,
								"name": "Range.collapseToStart"
							}
						},
						{
							"id": 607,
							"name": "containsPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 605,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 608,
									"name": "containsPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if position is in this range. If the position is at the edges, will return true."
									},
									"parameters": [
										{
											"id": 609,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 447,
										"name": "Range.containsPosition"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 446,
								"name": "Range.containsPosition"
							}
						},
						{
							"id": 610,
							"name": "containsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 613,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 611,
									"name": "containsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if range is in this range. If the range is equal to this range, will return true."
									},
									"parameters": [
										{
											"id": 612,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 450,
										"name": "Range.containsRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 449,
								"name": "Range.containsRange"
							}
						},
						{
							"id": 622,
							"name": "equalsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 647,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 623,
									"name": "equalsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if this range equals other."
									},
									"parameters": [
										{
											"id": 624,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 462,
										"name": "Range.equalsRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 461,
								"name": "Range.equalsRange"
							}
						},
						{
							"id": 586,
							"name": "equalsSelection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 774,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 587,
									"name": "equalsSelection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if equals other selection."
									},
									"parameters": [
										{
											"id": 588,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 480,
												"name": "ISelection"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 589,
							"name": "getDirection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 782,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 590,
									"name": "getDirection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get directions (LTR or RTL)."
									},
									"type": {
										"type": "reference",
										"id": 631,
										"name": "SelectionDirection"
									}
								}
							]
						},
						{
							"id": 625,
							"name": "getEndPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 655,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 626,
									"name": "getEndPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the end position (which will be after or equal to the start position)"
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 465,
										"name": "Range.getEndPosition"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 464,
								"name": "Range.getEndPosition"
							}
						},
						{
							"id": 595,
							"name": "getPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 790,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 596,
									"name": "getPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the position at `positionLineNumber` and `positionColumn`."
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									}
								}
							]
						},
						{
							"id": 627,
							"name": "getStartPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 663,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 628,
									"name": "getStartPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the start position (which will be before or equal to the end position)"
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 467,
										"name": "Range.getStartPosition"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 466,
								"name": "Range.getStartPosition"
							}
						},
						{
							"id": 619,
							"name": "intersectRanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 639,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 620,
									"name": "intersectRanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A intersection of the two ranges."
									},
									"parameters": [
										{
											"id": 621,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 459,
										"name": "Range.intersectRanges"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 458,
								"name": "Range.intersectRanges"
							}
						},
						{
							"id": 605,
							"name": "isEmpty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 597,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 606,
									"name": "isEmpty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if this range is empty."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 445,
										"name": "Range.isEmpty"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 444,
								"name": "Range.isEmpty"
							}
						},
						{
							"id": 616,
							"name": "plusRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 630,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 617,
									"name": "plusRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A reunion of the two ranges.\nThe smallest position will be used as the start point, and the largest one as the end point."
									},
									"parameters": [
										{
											"id": 618,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 456,
										"name": "Range.plusRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 455,
								"name": "Range.plusRange"
							}
						},
						{
							"id": 591,
							"name": "setEndPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 786,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 592,
									"name": "setEndPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new selection with a different `positionLineNumber` and `positionColumn`."
									},
									"parameters": [
										{
											"id": 593,
											"name": "endLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 594,
											"name": "endColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 485,
										"name": "Selection"
									},
									"overwrites": {
										"type": "reference",
										"id": 471,
										"name": "Range.setEndPosition"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 470,
								"name": "Range.setEndPosition"
							}
						},
						{
							"id": 597,
							"name": "setStartPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 794,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 598,
									"name": "setStartPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`."
									},
									"parameters": [
										{
											"id": 599,
											"name": "startLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 600,
											"name": "startColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 485,
										"name": "Selection"
									},
									"overwrites": {
										"type": "reference",
										"id": 475,
										"name": "Range.setStartPosition"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 474,
								"name": "Range.setStartPosition"
							}
						},
						{
							"id": 613,
							"name": "strictContainsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 621,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 614,
									"name": "strictContainsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true."
									},
									"parameters": [
										{
											"id": 615,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 453,
										"name": "Range.strictContainsRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 452,
								"name": "Range.strictContainsRange"
							}
						},
						{
							"id": 584,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 770,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 585,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Transform to a human-readable representation."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"id": 469,
										"name": "Range.toString"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 468,
								"name": "Range.toString"
							}
						},
						{
							"id": 559,
							"name": "areIntersecting",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 705,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 560,
									"name": "areIntersecting",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if the two ranges are intersecting. If the ranges are touching it returns true."
									},
									"parameters": [
										{
											"id": 561,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 562,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 420,
										"name": "Range.areIntersecting"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 419,
								"name": "Range.areIntersecting"
							}
						},
						{
							"id": 555,
							"name": "areIntersectingOrTouching",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 701,
									"character": 40
								}
							],
							"signatures": [
								{
									"id": 556,
									"name": "areIntersectingOrTouching",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if the two ranges are touching in any way."
									},
									"parameters": [
										{
											"id": 557,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 558,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 416,
										"name": "Range.areIntersectingOrTouching"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 415,
								"name": "Range.areIntersectingOrTouching"
							}
						},
						{
							"id": 544,
							"name": "collapseToStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 687,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 545,
									"name": "collapseToStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new empty range using this range's start position."
									},
									"parameters": [
										{
											"id": 546,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 401,
										"name": "Range.collapseToStart"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 400,
								"name": "Range.collapseToStart"
							}
						},
						{
							"id": 567,
							"name": "compareRangesUsingEnds",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 715,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 568,
									"name": "compareRangesUsingEnds",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function that compares ranges, useful for sorting ranges\nIt will first compare ranges on the endPosition and then on the startPosition"
									},
									"parameters": [
										{
											"id": 569,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 570,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 428,
										"name": "Range.compareRangesUsingEnds"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 427,
								"name": "Range.compareRangesUsingEnds"
							}
						},
						{
							"id": 563,
							"name": "compareRangesUsingStarts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 710,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 564,
									"name": "compareRangesUsingStarts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function that compares ranges, useful for sorting ranges\nIt will first compare ranges on the startPosition and then on the endPosition"
									},
									"parameters": [
										{
											"id": 565,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 566,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 424,
										"name": "Range.compareRangesUsingStarts"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 423,
								"name": "Range.compareRangesUsingStarts"
							}
						},
						{
							"id": 514,
							"name": "containsPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 609,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 515,
									"name": "containsPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `position` is in `range`. If the position is at the edges, will return true."
									},
									"parameters": [
										{
											"id": 516,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 517,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 371,
										"name": "Range.containsPosition"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 370,
								"name": "Range.containsPosition"
							}
						},
						{
							"id": 518,
							"name": "containsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 617,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 519,
									"name": "containsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `otherRange` is in `range`. If the ranges are equal, will return true."
									},
									"parameters": [
										{
											"id": 520,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 521,
											"name": "otherRange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 375,
										"name": "Range.containsRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 374,
								"name": "Range.containsRange"
							}
						},
						{
							"id": 504,
							"name": "createWithDirection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 814,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 505,
									"name": "createWithDirection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create with a direction."
									},
									"parameters": [
										{
											"id": 506,
											"name": "startLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 507,
											"name": "startColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 508,
											"name": "endLineNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 509,
											"name": "endColumn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 510,
											"name": "direction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 631,
												"name": "SelectionDirection"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 485,
										"name": "Selection"
									}
								}
							]
						},
						{
							"id": 534,
							"name": "equalsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 651,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 535,
									"name": "equalsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if range `a` equals `b`."
									},
									"parameters": [
										{
											"id": 536,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 537,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 391,
										"name": "Range.equalsRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 390,
								"name": "Range.equalsRange"
							}
						},
						{
							"id": 490,
							"name": "fromPositions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 798,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 491,
									"name": "fromPositions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a `Selection` from one or two positions"
									},
									"parameters": [
										{
											"id": 492,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										},
										{
											"id": 493,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 308,
												"name": "IPosition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 485,
										"name": "Selection"
									},
									"overwrites": {
										"type": "reference",
										"id": 404,
										"name": "Range.fromPositions"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 403,
								"name": "Range.fromPositions"
							}
						},
						{
							"id": 538,
							"name": "getEndPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 659,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 539,
									"name": "getEndPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the end position (which will be after or equal to the start position)"
									},
									"parameters": [
										{
											"id": 540,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 395,
										"name": "Range.getEndPosition"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 394,
								"name": "Range.getEndPosition"
							}
						},
						{
							"id": 541,
							"name": "getStartPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 667,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 542,
									"name": "getStartPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the start position (which will be before or equal to the end position)"
									},
									"parameters": [
										{
											"id": 543,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "Position"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 398,
										"name": "Range.getStartPosition"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 397,
								"name": "Range.getStartPosition"
							}
						},
						{
							"id": 530,
							"name": "intersectRanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 643,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 531,
									"name": "intersectRanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A intersection of the two ranges."
									},
									"parameters": [
										{
											"id": 532,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 533,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 387,
										"name": "Range.intersectRanges"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 386,
								"name": "Range.intersectRanges"
							}
						},
						{
							"id": 511,
							"name": "isEmpty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 601,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 512,
									"name": "isEmpty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `range` is empty."
									},
									"parameters": [
										{
											"id": 513,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 368,
										"name": "Range.isEmpty"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 367,
								"name": "Range.isEmpty"
							}
						},
						{
							"id": 552,
							"name": "isIRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 697,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 553,
									"name": "isIRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `obj` is an `IRange`."
									},
									"parameters": [
										{
											"id": 554,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "obj",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 361,
											"name": "IRange"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 413,
										"name": "Range.isIRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 412,
								"name": "Range.isIRange"
							}
						},
						{
							"id": 501,
							"name": "isISelection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 810,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 502,
									"name": "isISelection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `obj` is an `ISelection`."
									},
									"parameters": [
										{
											"id": 503,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "obj",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 480,
											"name": "ISelection"
										}
									}
								}
							]
						},
						{
							"id": 547,
							"name": "lift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 692,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 548,
									"name": "lift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a `Range` from an `IRange`."
									},
									"parameters": [
										{
											"id": 549,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											}
										}
									],
									"type": {
										"type": "literal",
										"value": null
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 408,
										"name": "Range.lift"
									}
								},
								{
									"id": 550,
									"name": "lift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 551,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 410,
										"name": "Range.lift"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 407,
								"name": "Range.lift"
							}
						},
						{
							"id": 494,
							"name": "liftSelection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 802,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 495,
									"name": "liftSelection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a `Selection` from an `ISelection`."
									},
									"parameters": [
										{
											"id": 496,
											"name": "sel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 480,
												"name": "ISelection"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 485,
										"name": "Selection"
									}
								}
							]
						},
						{
							"id": 526,
							"name": "plusRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 635,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 527,
									"name": "plusRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A reunion of the two ranges.\nThe smallest position will be used as the start point, and the largest one as the end point."
									},
									"parameters": [
										{
											"id": 528,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 529,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 366,
										"name": "Range"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 383,
										"name": "Range.plusRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 382,
								"name": "Range.plusRange"
							}
						},
						{
							"id": 497,
							"name": "selectionsArrEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 806,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 498,
									"name": "selectionsArrEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "`a` equals `b`."
									},
									"parameters": [
										{
											"id": 499,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 480,
													"name": "ISelection"
												}
											}
										},
										{
											"id": 500,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 480,
													"name": "ISelection"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 486,
							"name": "selectionsEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 778,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 487,
									"name": "selectionsEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if the two selections are equal."
									},
									"parameters": [
										{
											"id": 488,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 480,
												"name": "ISelection"
											}
										},
										{
											"id": 489,
											"name": "b",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 480,
												"name": "ISelection"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 571,
							"name": "spansMultipleLines",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 719,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 572,
									"name": "spansMultipleLines",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if the range spans multiple lines."
									},
									"parameters": [
										{
											"id": 573,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 432,
										"name": "Range.spansMultipleLines"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 431,
								"name": "Range.spansMultipleLines"
							}
						},
						{
							"id": 522,
							"name": "strictContainsRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 625,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 523,
									"name": "strictContainsRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false."
									},
									"parameters": [
										{
											"id": 524,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										},
										{
											"id": 525,
											"name": "otherRange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "IRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 379,
										"name": "Range.strictContainsRange"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 378,
								"name": "Range.strictContainsRange"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								574
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								604,
								603,
								583,
								582,
								581,
								580,
								602,
								601
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								629,
								607,
								610,
								622,
								586,
								589,
								625,
								595,
								627,
								619,
								605,
								616,
								591,
								597,
								613,
								584,
								559,
								555,
								544,
								567,
								563,
								514,
								518,
								504,
								534,
								490,
								538,
								541,
								530,
								511,
								552,
								501,
								547,
								494,
								526,
								497,
								486,
								571,
								522
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 749,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 366,
							"name": "Range"
						}
					]
				},
				{
					"id": 634,
					"name": "Token",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 635,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 636,
									"name": "new Token",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 637,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 638,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 639,
											"name": "language",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 634,
										"name": "Token"
									}
								}
							]
						},
						{
							"id": 640,
							"name": "_tokenBrand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 832,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 643,
							"name": "language",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 835,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 641,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 833,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 642,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 834,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 644,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 837,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 645,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								635
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								640,
								643,
								641,
								642
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								644
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 831,
							"character": 22
						}
					]
				},
				{
					"id": 68,
					"name": "Uri",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Uniform Resource Identifier (Uri) http://tools.ietf.org/html/rfc3986.\nThis class is a simple parser which creates the basic component parts\n(http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\nand encoding.",
						"text": "```txt\n      foo://example.com:8042/over/there?name=ferret#nose\n      \\_/   \\______________/\\_________/ \\_________/ \\__/\n       |           |            |            |        |\n    scheme     authority       path        query   fragment\n       |   _____________________|__\n      / \\ /                        \\\n      urn:example:animal:ferret:nose\n```\n"
					},
					"children": [
						{
							"id": 101,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 102,
									"name": "new Uri",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							]
						},
						{
							"id": 104,
							"name": "authority",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\nThe part between the first double slashes and the next slash."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 104,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 126,
								"name": "UriComponents.authority"
							}
						},
						{
							"id": 107,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 116,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 129,
								"name": "UriComponents.fragment"
							}
						},
						{
							"id": 105,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 108,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 127,
								"name": "UriComponents.path"
							}
						},
						{
							"id": 106,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 112,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 128,
								"name": "UriComponents.query"
							}
						},
						{
							"id": 103,
							"name": "scheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\nThe part before the first colon."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 99,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 125,
								"name": "UriComponents.scheme"
							}
						},
						{
							"id": 108,
							"name": "fsPath",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Returns a string representing the corresponding file system path of this Uri.\nWill handle UNC paths, normalizes windows drive letters to lower-case, and uses the\nplatform specific path separator.",
								"text": "* Will *not* validate the path for invalid characters and semantics.\n* Will *not* look at the scheme of this Uri.\n* The result shall *not* be used for display purposes but for accessing a file on disk.\n\n\nThe *difference* to `Uri#path` is the use of the platform specific separator and the handling\nof UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\n```ts\nconst u = Uri.parse('file://server/c$/folder/file.txt')\nu.authority === 'server'\nu.path === '/shares/c$/file.txt'\nu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n```\n\nUsing `Uri#path` to read a file (using fs-apis) would not be enough because parts of the path,\nnamely the server name, would be missing. Therefore `Uri#fsPath` exists - it's sugar to ease working\nwith URIs that represent files on disk (`file` scheme).\n"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 141,
									"character": 18
								}
							],
							"getSignature": [
								{
									"id": 109,
									"name": "fsPath",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representing the corresponding file system path of this Uri.\nWill handle UNC paths, normalizes windows drive letters to lower-case, and uses the\nplatform specific path separator.",
										"text": "* Will *not* validate the path for invalid characters and semantics.\n* Will *not* look at the scheme of this Uri.\n* The result shall *not* be used for display purposes but for accessing a file on disk.\n\n\nThe *difference* to `Uri#path` is the use of the platform specific separator and the handling\nof UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\n```ts\nconst u = Uri.parse('file://server/c$/folder/file.txt')\nu.authority === 'server'\nu.path === '/shares/c$/file.txt'\nu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n```\n\nUsing `Uri#path` to read a file (using fs-apis) would not be enough because parts of the path,\nnamely the server name, would be missing. Therefore `Uri#fsPath` exists - it's sugar to ease working\nwith URIs that represent files on disk (`file` scheme).\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 122,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 205,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 123,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 124,
										"name": "UriComponents"
									}
								}
							]
						},
						{
							"id": 119,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 204,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 120,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string representation for this Uri. It's guaranteed that calling\n`Uri.parse` with the result of this function creates an Uri which is equal\nto this Uri.",
										"text": "* The result shall *not* be used for display purposes but for externalization or transport.\n* The result will be encoded using the percentage encoding and encoding happens mostly\nignore the scheme-specific encoding rules.\n"
									},
									"parameters": [
										{
											"id": 121,
											"name": "skipEncoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Do not encode the result, default is `false`\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 110,
							"name": "with",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 142,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 111,
									"name": "with",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 112,
											"name": "change",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 113,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 115,
															"name": "authority",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 144,
																	"character": 21
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 118,
															"name": "fragment",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 147,
																	"character": 20
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 116,
															"name": "path",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 145,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 117,
															"name": "query",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 146,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 114,
															"name": "scheme",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 143,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																115,
																118,
																116,
																117,
																114
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							]
						},
						{
							"id": 76,
							"name": "file",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 177,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 77,
									"name": "file",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Uri from a file system path, e.g. `c:\\my\\files`,\n`/usr/home`, or `\\\\server\\share\\some\\path`.",
										"text": "The *difference* between `Uri#parse` and `Uri#file` is that the latter treats the argument\nas path, not as stringified-uri. E.g. `Uri.file(path)` is **not the same as**\n`Uri.parse('file://' + path)` because the path might contain characters that are\ninterpreted (# and ?). See the following sample:\n```ts\nconst good = Uri.file('/coding/c#/project1');\ngood.scheme === 'file';\ngood.path === '/coding/c#/project1';\ngood.fragment === '';\nconst bad = Uri.parse('file://' + '/coding/c#/project1');\nbad.scheme === 'file';\nbad.path === '/coding/c'; // path is now broken\nbad.fragment === '/project1';\n```\n"
									},
									"parameters": [
										{
											"id": 78,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A file system path (see `Uri#fsPath`)\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							]
						},
						{
							"id": 79,
							"name": "from",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 178,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 80,
									"name": "from",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 81,
											"name": "components",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 82,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 84,
															"name": "authority",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 180,
																	"character": 21
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 87,
															"name": "fragment",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 183,
																	"character": 20
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 85,
															"name": "path",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 181,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 86,
															"name": "query",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 182,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 83,
															"name": "scheme",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "monaco.ts",
																	"line": 179,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																84,
																87,
																85,
																86,
																83
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							]
						},
						{
							"id": 69,
							"name": "isUri",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 94,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 70,
									"name": "isUri",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 71,
											"name": "thing",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "thing",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 68,
											"name": "Uri"
										}
									}
								}
							]
						},
						{
							"id": 88,
							"name": "joinPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 192,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 89,
									"name": "joinPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Join a Uri path with path fragments and normalizes the resulting path.",
										"returns": "The resulting Uri.\n"
									},
									"parameters": [
										{
											"id": 90,
											"name": "uri",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The input Uri."
											},
											"type": {
												"type": "reference",
												"id": 68,
												"name": "Uri"
											}
										},
										{
											"id": 91,
											"name": "pathFragment",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "The path fragment to add to the Uri path."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							]
						},
						{
							"id": 72,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 155,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 73,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Uri from a string, e.g. `http://www.msft.com/some/path`,\n`file:///usr/home`, or `scheme:with/path`."
									},
									"parameters": [
										{
											"id": 74,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string which represents an Uri (see `Uri#toString`).\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 75,
											"name": "_strict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							]
						},
						{
							"id": 92,
							"name": "revive",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 206,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 93,
									"name": "revive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 94,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 68,
														"name": "Uri"
													},
													{
														"type": "reference",
														"id": 124,
														"name": "UriComponents"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 95,
									"name": "revive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 96,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 68,
														"name": "Uri"
													},
													{
														"type": "reference",
														"id": 124,
														"name": "UriComponents"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 97,
									"name": "revive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 98,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 68,
														"name": "Uri"
													},
													{
														"type": "reference",
														"id": 124,
														"name": "UriComponents"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								},
								{
									"id": 99,
									"name": "revive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 100,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 68,
														"name": "Uri"
													},
													{
														"type": "reference",
														"id": 124,
														"name": "UriComponents"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "Uri"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								101
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								104,
								107,
								105,
								106,
								103
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								108
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								122,
								119,
								110,
								76,
								79,
								69,
								88,
								72,
								92
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 93,
							"character": 20
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 124,
							"name": "UriComponents"
						}
					]
				},
				{
					"id": 57,
					"name": "CancellationToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 59,
							"name": "onCancellationRequested",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "An event which fires when cancellation is requested. This event\nonly ever fires `once` as cancellation can only happen once. Listeners\nthat are registered after cancellation will be called (next event loop run),\nbut also only once."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 75,
									"character": 40
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 61,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 62,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 63,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 64,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 65,
																			"name": "e",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												},
												{
													"id": 66,
													"name": "thisArgs",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 67,
													"name": "disposables",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 16,
															"name": "IDisposable"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 16,
												"name": "IDisposable"
											}
										}
									]
								}
							}
						},
						{
							"id": 58,
							"name": "isCancellationRequested",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "A flag signalling is cancellation has been requested."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 66,
									"character": 40
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Events",
							"kind": 8388608,
							"children": [
								59
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								58
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 62,
							"character": 38
						}
					]
				},
				{
					"id": 5,
					"name": "Environment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 7,
							"name": "baseUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 19,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6,
							"name": "globalAPI",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 18,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8,
							"name": "getWorker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 9,
									"name": "getWorker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 10,
											"name": "workerId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11,
											"name": "label",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Worker"
									}
								}
							]
						},
						{
							"id": 12,
							"name": "getWorkerUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 13,
									"name": "getWorkerUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 14,
											"name": "workerId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15,
											"name": "label",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								7,
								6
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								8,
								12
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 17,
							"character": 32
						}
					]
				},
				{
					"id": 16,
					"name": "IDisposable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 17,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 18,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								17
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 24,
							"character": 32
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 4696,
							"name": "CodeActionList"
						},
						{
							"type": "reference",
							"id": 4712,
							"name": "SignatureHelpResult"
						}
					]
				},
				{
					"id": 19,
					"name": "IEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 28,
							"character": 27
						}
					],
					"typeParameter": [
						{
							"id": 20,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"signatures": [
						{
							"id": 21,
							"name": "IEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 22,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 23,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 24,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 25,
															"name": "e",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								},
								{
									"id": 26,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 16,
								"name": "IDisposable"
							}
						}
					]
				},
				{
					"id": 263,
					"name": "IKeyboardEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 264,
							"name": "_standardKeyboardEventBrand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 418,
									"character": 44
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 269,
							"name": "altKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 423,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 265,
							"name": "browserEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 419,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "KeyboardEvent"
							}
						},
						{
							"id": 272,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 426,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 267,
							"name": "ctrlKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 421,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 271,
							"name": "keyCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 425,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 130,
								"name": "KeyCode"
							}
						},
						{
							"id": 270,
							"name": "metaKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 424,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 268,
							"name": "shiftKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 422,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 266,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 420,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 273,
							"name": "equals",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 274,
									"name": "equals",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 275,
											"name": "keybinding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 276,
							"name": "preventDefault",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 277,
									"name": "preventDefault",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 278,
							"name": "stopPropagation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 279,
									"name": "stopPropagation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								264,
								269,
								265,
								272,
								267,
								271,
								270,
								268,
								266
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								273,
								276,
								278
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 417,
							"character": 35
						}
					]
				},
				{
					"id": 255,
					"name": "IMarkdownString",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 257,
							"name": "isTrusted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 410,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 258,
							"name": "supportThemeIcons",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 411,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259,
							"name": "uris",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 412,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 261,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 262,
												"name": "href",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 124,
											"name": "UriComponents"
										}
									}
								}
							}
						},
						{
							"id": 256,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 409,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								257,
								258,
								259,
								256
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 408,
							"character": 36
						}
					]
				},
				{
					"id": 280,
					"name": "IMouseEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 292,
							"name": "altKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 443,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 281,
							"name": "browserEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 432,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "MouseEvent"
							}
						},
						{
							"id": 285,
							"name": "buttons",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 436,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 290,
							"name": "ctrlKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 441,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 287,
							"name": "detail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 438,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 282,
							"name": "leftButton",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 433,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 293,
							"name": "metaKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 444,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 283,
							"name": "middleButton",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 434,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 288,
							"name": "posx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 439,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 289,
							"name": "posy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 440,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 284,
							"name": "rightButton",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 435,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 291,
							"name": "shiftKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 442,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 286,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 437,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 294,
							"name": "timestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 445,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 295,
							"name": "preventDefault",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 296,
									"name": "preventDefault",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 297,
							"name": "stopPropagation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 298,
									"name": "stopPropagation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								292,
								281,
								285,
								290,
								287,
								282,
								293,
								283,
								288,
								289,
								284,
								291,
								286,
								294
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								295,
								297
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 431,
							"character": 32
						}
					]
				},
				{
					"id": 308,
					"name": "IPosition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "A position in the editor. This interface is suitable for serialization."
					},
					"children": [
						{
							"id": 310,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "column (the first character in a line is between column 1 and column 2)"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 471,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 309,
							"name": "lineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "line number (starts at 1)"
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 467,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								310,
								309
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 463,
							"character": 30
						}
					]
				},
				{
					"id": 361,
					"name": "IRange",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "A range in the editor. This interface is suitable for serialization."
					},
					"children": [
						{
							"id": 365,
							"name": "endColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Column on which the range ends in line `endLineNumber`."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 570,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 364,
							"name": "endLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Line number on which the range ends."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 566,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 363,
							"name": "startColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Column on which the range starts in line `startLineNumber` (starts at 1)."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 562,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 362,
							"name": "startLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Line number on which the range starts (starts at 1)."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 558,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								365,
								364,
								363,
								362
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 554,
							"character": 27
						}
					]
				},
				{
					"id": 299,
					"name": "IScrollEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 303,
							"name": "scrollHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 454,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 307,
							"name": "scrollHeightChanged",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 458,
									"character": 36
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 301,
							"name": "scrollLeft",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 452,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 305,
							"name": "scrollLeftChanged",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 456,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 300,
							"name": "scrollTop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 451,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 304,
							"name": "scrollTopChanged",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 455,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 302,
							"name": "scrollWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 453,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 306,
							"name": "scrollWidthChanged",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 457,
									"character": 35
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								303,
								307,
								301,
								305,
								300,
								304,
								302,
								306
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 450,
							"character": 33
						}
					]
				},
				{
					"id": 480,
					"name": "ISelection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "A selection in the editor.\nThe selection is a range that has an orientation."
					},
					"children": [
						{
							"id": 484,
							"name": "positionColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The column on `positionLineNumber` where the selection has ended."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 742,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 483,
							"name": "positionLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The line number on which the selection has ended."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 738,
									"character": 35
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 482,
							"name": "selectionStartColumn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The column on `selectionStartLineNumber` where the selection has started."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 734,
									"character": 37
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 481,
							"name": "selectionStartLineNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The line number on which the selection has started."
							},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 730,
									"character": 41
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								484,
								483,
								482,
								481
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 726,
							"character": 31
						}
					]
				},
				{
					"id": 124,
					"name": "UriComponents",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 126,
							"name": "authority",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 214,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 217,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 127,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 215,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 128,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 216,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 125,
							"name": "scheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "monaco.ts",
									"line": 213,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								126,
								129,
								127,
								128,
								125
							]
						}
					],
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 212,
							"character": 34
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 68,
							"name": "Uri"
						}
					]
				},
				{
					"id": 3,
					"name": "Thenable",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "monaco.ts",
							"line": 15,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 4,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "T"
							}
						],
						"name": "PromiseLike"
					}
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 2,
					"children": [
						646,
						4379,
						5528
					]
				},
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						130,
						41,
						38,
						631
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						46,
						27,
						244,
						311,
						366,
						485,
						634,
						68
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						57,
						5,
						16,
						19,
						263,
						255,
						280,
						308,
						361,
						299,
						480,
						124
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "monaco.ts",
					"line": 13,
					"character": 24
				}
			]
		},
		{
			"id": 1,
			"name": "MonacoEnvironment",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isLet": true
			},
			"sources": [
				{
					"fileName": "monaco.ts",
					"line": 11,
					"character": 29
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 5,
						"name": "monaco.Environment"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"kind": 2,
			"children": [
				2
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1
			]
		}
	],
	"sources": [
		{
			"fileName": "monaco.ts",
			"line": 1,
			"character": 0
		}
	]
}